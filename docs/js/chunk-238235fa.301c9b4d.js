(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-238235fa"],{a7cf:function(t,e,n){"use strict";n.r(e);var r=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"network"},[n("h2",[t._v("network")]),n("div",{staticClass:"tip"},[t._v("\n    zoom-ui内部封装的服务请求, 是基于原生ajax进行封装,\n    用户可以不必再引用第三方插件,\n    而是可以直接通过zoom-ui内置的服务请求方法进行服务调用。\n  ")]),n("h3",[t._v("调用示例")]),n("p",[t._v("可使用方法有: get/post/put/delete等")]),t._m(0),n("span",[t._v("get方法演示")]),n("custom-code",{attrs:{html:t.getNetWork}}),n("h3",[t._v("post方法演示")]),t._m(1),n("p",[t._v("依次传参的参数为: url、params、headers")]),n("custom-code",{attrs:{html:t.postNetWork}}),n("h3",[t._v("设置更多信息")]),t._m(2),n("custom-code",{attrs:{html:t.timeoutNetWork}})],1)},o=[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("通过调用"),n("span",[t._v("this.$zoom.network.xx().then()")]),t._v(", 返回一个Promise对象")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("如果调用方法为post/put/delete等, 可以传入请求主体"),n("span",[t._v("params")]),t._v(", 可以以对象形式传参, 也可以依次传参")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("如果要配置服务请求时间, 必须要以对象形式, 配置参数"),n("span",[t._v("timeout")]),t._v(", 单位为毫秒, 当请求时间超过timeout则会终止服务请求。")])}],s={data:function(){return{getNetWork:"const url = 'http://127.0.0.1:8090/get'\n          this.$zoom.network.get(url).then((res) => {\n            console.log(res)\n          }).catch(err => console.error(err));\n          /**\n           *  url为必填\n           *  返回对象为promise\n           *  可catch捕捉错误\n           */",postNetWork:"\n        const url = 'http://127.0.0.1:8090/post'\n        const params = {\n          userName: 'yehuo2003',\n          password: '123456'\n        }\n        const headers = {'Content-Type': 'application/x-www-form-urlencoded'}\n        this.$zoom.network.post(url, params, headers).then((res) => {\n          console.log(res)\n        }).catch(err => console.error(err));\n        /**\n         *  url为必填\n         *  返回对象为promise\n         *  可catch捕捉错误\n         */",timeoutNetWork:"\n        const url = 'http://127.0.0.1:8090/post'\n        const params = {\n          userName: 'yehuo2003',\n          password: '123456'\n        }\n        const headers = {'Content-Type': 'application/x-www-form-urlencoded'}\n        this.$zoom.network.post({\n          url: url,\n          params: params,\n          headers: params,\n          timeout: 30000  // 如果服务超过30秒未响应将会被强制终止\n        }).then((res) => {\n          console.log(res)\n        }).catch(err => console.error(err));\n        /**\n         *  url为必填\n         *  返回对象为promise\n         *  可catch捕捉错误\n         */"}}},a=s,c=(n("ecf3"),n("2877")),p=Object(c["a"])(a,r,o,!1,null,"4fe7f429",null);e["default"]=p.exports},bf60:function(t,e,n){},ecf3:function(t,e,n){"use strict";var r=n("bf60"),o=n.n(r);o.a}}]);