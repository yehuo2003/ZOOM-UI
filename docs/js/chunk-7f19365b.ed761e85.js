(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-7f19365b"],{"7b2c":function(t,e,n){},a7cf:function(t,e,n){"use strict";n.r(e);var o=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"network"},[n("h2",[t._v("Network网络类")]),n("div",{staticClass:"tip"},[t._v("\n    zoom-ui内部封装的Network网络类, 是基于原生ajax进行封装,\n    用法和axios基本相同, 只支持异步请求。\n    用户可以不必再引用第三方插件,\n    而是可以直接通过zoom-ui内置的服务请求方法进行服务调用。\n  ")]),n("h3",[t._v("调用示例")]),n("p",[t._v("可使用方法有: get/post/put/delete等")]),t._m(0),n("span",[t._v("get方法演示")]),n("custom-code",{attrs:{html:t.getNetWork}}),n("h3",[t._v("post方法演示")]),t._m(1),n("p",[t._v("依次传参的参数为: url、params、headers")]),n("custom-code",{attrs:{html:t.postNetWork}}),n("h3",[t._v("设置更多信息")]),t._m(2),n("custom-code",{attrs:{html:t.timeoutNetWork}}),n("attribute",{attrs:{list:t.attributeList}})],1)},r=[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("通过调用"),n("span",[t._v("this.$zoom.network.xx().then()")]),t._v(", 返回一个Promise对象")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("如果调用方法为post/put/delete等, 可以传入请求主体"),n("span",[t._v("params")]),t._v(", 可以以对象形式传参, 也可以依次传参")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",[t._v("如果要配置服务请求时间, 必须要以对象形式, 配置参数"),n("span",[t._v("timeout")]),t._v(", 单位为毫秒, 当请求时间超过timeout则会终止服务请求。")])}],s={data:function(){return{attributeList:[{id:1,title:"属性",content:[{id:1,title:"服务地址",name:"url",type:"String",text:"服务地址, 必填",text2:"用法: 调用方法<span>this.$zoom.network.get(url).then()</span>"},{id:2,title:"请求主体",name:"params",type:"Object",text:"服务请求主体, 当服务为post/put/delete时可以使用。",text2:"用法: 调用方法<span>this.$zoom.network.post(url, params).then()</span>"},{id:3,title:"请求头",name:"headers",type:"Object",text:"服务请求头, <span>const headers = {'Content-Type': 'application/x-www-form-urlencoded'}</span>",text2:"用法: 调用方法<span>this.$zoom.network.post(url, params, headers).then()</span>"}]},{id:2,title:"方法",content:[{id:1,title:"GET",name:"get",type:"Function",text:"请求指定的页面信息, 并返回实体主体。",text2:"用法: <span>this.$zoom.network.get(url).then()</span>"},{id:2,title:"POST",name:"post",type:"Function",text:"向指定资源提交数据进行处理请求（例如表单或者上传文件），数据被包含在请求体中。",text2:"用法: 调用方法<span>this.$zoom.network.post(url, params).then()</span>"},{id:3,title:"HEAD",name:"head",type:"Function",text:"类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头。",text2:"用法: 调用方法<span>this.$zoom.network.head(url).then()</span>"},{id:4,title:"PUT",name:"put",type:"Function",text:"从客户端向服务器传送的数据取代指定的文档内容。",text2:"用法: 调用方法<span>this.$zoom.network.put(url, params).then()</span>"},{id:5,title:"DELETE",name:"delete",type:"Function",text:"从服务器删除指定的数据。",text2:"用法: 调用方法<span>this.$zoom.network.delete(url, params).then()</span>"},{id:6,title:"OPTIONS",name:"options",type:"Function",text:"允许客户端查看服务器的性能",text2:"用法: 调用方法<span>this.$zoom.network.options(url).then()</span>"},{id:7,title:"TRACE",name:"trace",type:"Function",text:"回显服务器收到的请求，主要用于测试或诊断。",text2:"用法: 调用方法<span>this.$zoom.network.trace(url).then()</span>"}]}],getNetWork:"\n        /**\n         *  url为必填\n         *  config可选\n         *  返回对象为promise\n         *  可catch捕捉错误\n         */\n        const url = 'http://127.0.0.1:8090/get';\n        this.$zoom.network.get(url).then((res) => {\n          console.log(res)\n        }).catch(err => console.error(err));\n        ",postNetWork:"\n        /**\n         *  url为必填\n         *  params可选\n         *  config可选\n         *  返回对象为promise\n         *  可catch捕捉错误\n         */\n        const url = 'http://127.0.0.1:8090/post';\n        const params = {\n          userName: 'yehuo2003',\n          password: '123456'\n        }\n        const headers = {'Content-Type': 'application/x-www-form-urlencoded'}\n        this.$zoom.network.post(url, params, headers).then((res) => {\n          console.log(res)\n        }).catch(err => console.error(err));\n        ",timeoutNetWork:"\n        const url = 'http://127.0.0.1:8090/post';\n        const params = {\n          userName: 'yehuo2003',\n          password: '123456'\n        }\n        const headers = {'Content-Type': 'application/x-www-form-urlencoded'}\n        this.$zoom.network.post({\n          url: url,\n          params: params,\n          headers: headers,\n          timeout: 30000  // 如果服务超过30秒未响应将会被强制终止\n        }).then((res) => {\n          console.log(res);\n        }).catch(err => console.error(err));\n        "}}},a=s,p=(n("e215"),n("2877")),i=Object(p["a"])(a,o,r,!1,null,"040c7cd5",null);e["default"]=i.exports},e215:function(t,e,n){"use strict";var o=n("7b2c"),r=n.n(o);r.a}}]);