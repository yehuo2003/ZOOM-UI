(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0a475e"],{"0712":function(t,e,s){"use strict";s.r(e);var n=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"custom-zoom-switch"},[s("tab-template",{attrs:{cls:"data-drop",code:t.switchCode}},[s("zoom-switch",{attrs:{open:"开启",close:"关闭"}})],1),s("tab-template",{attrs:{cls:"data-drop",code:t.switchCustom}},[s("template",{slot:"header"},[s("h2",[t._v("标签属性")]),s("div",{staticClass:"tip"},[s("text-template",{attrs:{code:"配置组件的属性有两种方式，一种是示例中的op对象，另一种是直接将属性配置在组件标签上，如下所示："}}),s("text-template",{attrs:{code:"注意：两种方式不能混用"}})],1),s("text-template",{attrs:{code:"禁用状态下，开启或关闭开关"}})],1),s("zoom-switch",{attrs:{op:t.switchOp}}),t._v("\n    禁用开关:\n    "),s("zoom-switch",{attrs:{op:t.switchOp2}})],2),s("attribute",{attrs:{list:t.attributeList}})],1)},a=[],o={data:function(){return{attributeList:[{id:1,title:"属性",content:[{id:1,title:"禁用",name:"disabled",type:"Boolean",text:"默认<span>false</span>, 为<span>true</span>则禁用开关, 禁用状态下, 无法开启或关闭开关",text2:'用法: 配置op对象, 设置 <span>disabled: "true"</span>'},{id:2,title:"显示开启时的文本内容",name:"open",type:"String",text:"打开状态下, 要展示给用户看的文本内容",text2:'用法: 在组件标签上, 或者配置op对象, 设置 <span>open: "文本内容"</span>'},{id:3,title:"显示关闭时的文本内容",name:"close",type:"String",text:"打开状态下, 要展示给用户看的文本内容",text2:'用法: 在组件标签上, 或者配置op对象, 设置 <span>close: "文本内容"</span>'},{id:4,title:"组件渲染时的初始状态",name:"status",type:"String",text:"默认<span>close</span>, 为<span>open</span>则是打开状态,",text2:'用法: 配置op对象, 设置 <span>status: "open"</span>'}]},{id:2,title:"方法",content:[{id:1,title:"点击按钮前触发的回调函数",name:"beforeClick",type:"Function",text:"用法: 配置op对象后设置回调函数, 会返回一个参数, 是按钮发生改变前的值"},{id:2,title:"点击按钮后触发的回调函数",name:"afterClick",type:"Function",text:"用法: 配置op对象后设置回调函数, 会返回一个参数, 是按钮发生改变后的值"},{id:3,title:"设置禁用状态",name:"setDisabled",type:"Function",text:"参数传<span>true</span>则设置禁用组件, 为<span>false</span>可取消禁用",text2:"用法: ref属性, 设置 <span>this.$refs[绑定属性].setDisabled(true)</span>"}]}],switchOp2:{disabled:!0},switchOp:{disabled:!1,open:"开启",close:"关闭",status:"open",beforeClick:function(t){console.log("点击前触发",t)},afterClick:function(t){console.log("点击后触发",t)}},switchCustom:"&lt;template&gt;\n            &lt;div&gt;\n              &lt;zoom-switch :op=\"switchOp\"&gt;&lt;/zoom-switch&gt;\n              禁用开关:\n              &lt;zoom-switch :op=\"switchOp2\"&gt;&lt;/zoom-switch&gt;\n            &lt;/div&gt;\n          &lt;/template&gt;\n          &lt;script&gt;\n            export default {\n              data() {\n                return {\n                  switchOp2: {\n                    disabled: true,\n                  },\n                  switchOp: {\n                    disabled: false,\t// 是否禁用 默认false\n                    open: '开启',\t        // 打开的文本\n                    close: '关闭',\t// 关闭的文本\n                    status: 'open',\t// 初始状态(可选open || close, 默认是close)\n                    beforeClick: val => {\t//点击前的回调函数\n                      console.log('点击前触发', val);\n                    },\n                    afterClick: val => {\t//点击后的回调函数\n                      console.log('点击后触发', val);\n                    }\n                  }\n                }\n              }\n            }\n          &lt;/script&gt;",switchCode:'&lt;zoom-switch open="开启" close="关闭"&gt;&lt;/zoom-switch&gt;'}}},i=o,l=s("2877"),p=Object(l["a"])(i,n,a,!1,null,"08518e38",null);e["default"]=p.exports}}]);