{
  "test.iter": "test num",
  "框架风格": "Frame style",
  "导航组件": "Navigation component",
  "容器组件": "Container assembly",
  "表单组件": "Form component",
  "数据组件": "Data component",
  "验证码": "Verification code",
  "提示组件": "Prompt component",
  "业务组件": "Business component",
  "其它组件": "Other components",
  "环境准备": "Environmental preparation",
  "组件安装": "Component installation",
  "快速上手": "Get started quickly",
  "组件升级": "Component upgrade",
  "组件使用": "Component use",
  "SDK说明": "SDK description",
  "内置指令": "Built-in instruction",
  "国际化": "internationalization",
  "服务请求": "Service request",
  "Dom操作命令": "Dom manipulation command",
  "内置方法": "Built-in method",
  "日期格式化": "Date formatting",
  "cookie操作": "cookie operation",
  "深拷贝": "Deep copy",
  "随机数/随机颜色": "Random number/random color",
  "首页": "Home page",
  "环境搭建": "Environment construction",
  "组件": "component",
  "软件开发包": "Software development kit",
  "更多": "more",
  "搜索组件": "Search component",
  "企业级前端UI设计的Vue组件": "Vue components for enterprise-class UI design",
  "企业级设计系统，追求极致体验": "Enterprise design system, the pursuit of extreme experience",
  "多种前端设计方案融合": "Integration of multiple front-end design schemes",
  "开箱即用的Vue组件库": "Vue component library out of the box",
  "丰富的配套SDK": "Rich supporting SDK",
  "您需要的组件都有": "You have all the components you need",
  "为您的项目设计构建了基础组件，有助于您更快速构建出更好的产品": "Building the foundation components for your project design helps you build better products faster",
  "进入组件指南": "Access component guide",
  "请输入": "Please enter",
  "zoomUI提供超多开箱即用的Vue前端组件、强大的SDK功能，让您的开发如虎添翼": "zoomUI offers a plethora of out-of-the-box Vue front-end components and powerful SDK features to make your development a tiger",
  "遵循": "follow",
  "开源协议": "Open source protocol",
  "开始使用组件": "Start using components",
  "地址输入有误? 尝试输入框搜索": "Incorrect address input? Let me help you",
  "您想查找什么?": "What are you looking for?",
  "给您提供建议": "My Suggestions.",
  "搜索": "Search",
  "返回上一级目录": "Return to the previous directory",
  "自动续费": "Automatic renewal",
  "按需付费": "pay-as-you-go",
  "北京": "Peking",
  "上海": "Shanghai",
  "广州": "Guangzhou",
  "深圳": "Shenzhen",
  "唱歌": "sing",
  "跳舞": "dance",
  "音乐": "music",
  "运动": "movement",
  "more.description.1": "zoom-ui components are personally developed by me. The project has been under development since 2019 and is still being updated. It has been decided to open source on March 28, 2021.",
  "more.description.2": "If you encounter any bugs or do not understand the zoom-ui component in the process of using zoom-ui component, or if you have good suggestions or opinions on Zoom-UI component, please feel free to contact me.",
  "more.description.3": "For the bugs found or existing problems, you can contact me through the contact information below, I will actively solve the problem and timely update the components.",
  "more.description.4": "Based on market demand, I will add new components or optimize the functions of existing components from time to time. Updates will be explained in this page.",
  "more.description.5": "zoom-ui is a very powerful UI component. Only some zoom-ui components are open on the page, mainly some popular and commonly used components. There are other business components that are not disclosed, such as shopping malls, medical care, logistics, finance, and so on. zoom-ui supports private or enterprise customization of components. If you have specific business needs, you can contact me to customize the component library or plug-in to meet your needs.",
  "more.description.6": "If you think this component is useful, I hope you can recommend it to people around you. If you want to support zoom-ui components, please feel free to contact me. Thank you for your recognition and support!",
  "学习交流": "Learning communication",
  "联系方式": "Contact information",
  "更新日志": "Update log",
  "博客": "Blog",
  "微信": "WeChat",
  "邮箱": "E-Mail",
  "说明": "description",
  "色彩类型": "Color Type",
  "对于色彩类型一共有五种": "There are five types of color",
  "分别为": "Respectively",
  "如背景色请加class": "Please add class as background color",
  "不同情况下的色彩": "Color in Different Situations",
  "添加伪类效果": "Add pseudo-class effect",
  "尝试着鼠标经过和点击": "Try to mouse over and click",
  "暗色调": "Dark Tone",
  "常用的几种暗色调如下": "The common dark tones are as follows",
  "对于": "For ",
  "复制": "copy",
  "使用方法": "Usage method",
  "效果": "display",
  "代码": "code",
  "按钮": "button ",
  "平角": "Straight Angle ",
  "圆角": "Rounded corner ",
  "普通": "ordinary ",
  "主要": "main ",
  "成功": "success ",
  "警告": "warning ",
  "危险": "danger ",
  "信息": "information ",
  "基本用法": "Basic usage ",
  "基础按钮的用法": "The use of base buttons ",
  "按钮大小": "Button size ",
  "禁用/防抖": "Disable/anti-shake ",
  "可指定按钮大小, 属性: size": "Button size can be specified, property: size ",
  "迷你": "mini ",
  "小按钮": "Small button ",
  "普通按钮": "Plain button ",
  "中等按钮": "Medium button ",
  "大按钮": "Big button ",
  "禁用x秒": "Disable {x} seconds",
  "属性": "Attribute",
  "方法": "Method",
  "通过 *disabled* 属性设置按钮为禁用状态": "Use the *disabled* property to set the button to disabled",
  "通过 *reset-time* 属性设置按钮防抖时间, 单位为毫秒, 默认 *1000* 毫秒": "The *reset-time* property is used to set the anti-shaking time of the button, in milliseconds. The default value is *1000* milliseconds",
  "自定义配置属性": "Customize configuration properties",
  "按钮类型": "Button type",
  "按钮形状": "Button shape",
  "点击间隔": "Click interval",
  "按钮禁用": "Button disable",
  "自定义点击事件": "Customize click events",
  "设置禁用状态": "Setting disabled state",
  "经典布局": "Classical layout",
  "简单布局": "Simple layout",
  "圣杯布局": "Grail layout",
  "时尚布局": "Fashion layout",
  "嵌套用法": "Nesting method",
  "头部高度": "Head height",
  "尾部高度": "Tail height",
  "侧边栏宽度": "Sidebar width",
  "关闭返回顶部": "Close return to top",
  "侧边栏收缩按钮": "Sidebar shrink button",
  "返回顶部": "Return to the top",
  "适配不同屏幕": "Fit different screens",
  "可以根据不同屏幕, 设置不同分栏大小": "You can set different column sizes according to different screens",
  "可通过col配置的属性 超大屏*xl*、 大屏*lg*、 中屏*md*、 小屏*sm*、 超小屏*xs* 来分别设置不同屏幕下分栏效果，值范围*1 ~ 12*": "The column effect of different screens can be set by col properties: super large screen *xl*, large screen *lg*, medium screen *md*, small screen *sm*, and super small screen *xs*. The value range is *1 ~ 12*",
  "Flex布局": "Flex layout",
  "通过设置*flex*属性为true来启用*flex*布局, 并通过*justify*与*align*属性调整子元素的对齐方式": "Enable the *flex* layout by setting the *flex* attribute to true, and adjust the alignment of child elements using the *justify* and *align* attributes",
  "Order排序": "Order sort",
  "在启用*flex*布局时, 可通过设置*Row*组件的*order*属性, 给*Col*组件进行排序": "When the *flex* layout is enabled, you can sort the *Col* component by setting the *order* property of the *Row* component",
  "Col列偏移": "Col column migration",
  "通过设置*Col*组件的*offset*属性来指定分栏偏移的栏数": "Specify the number of columns offset by setting the offset property of the Col* component",
  "分栏属性": "Columnar attribute",
  "弹性布局": "Elastic layout",
  "排列方式": "Arrangement mode",
  "对齐方式": "Alignment mode",
  "偏移": "offset",
  "设置更多信息": "Set more information",
  "post方法演示": "post method demonstration",
  "get方法演示": "get method demonstration",
  "调用示例": "Call example",
  "Network网络类": "Network",
  "服务地址": "Service address",
  "请求主体": "Request body",
  "请求头": "Request header",
  "获取DOM元素": "Get the DOM element",
  "查找元素": "Lookup element",
  "zoom-ui封装的日期时间格式化组件, 用户可以自定义要格式化的时间格式": "zoom-ui packaged date and time formatting component, users can customize to format the time format",
  "通过 *this.$zoom.dateformat('自定义格式化', 时间对象)* 方法调用": "Called through the *this.$zoom.dateformat(' Custom Formatting ', time object)* method",
  "选取第n个元素": "Pick the NTH element",
  "删除元素": "Delete element",
  "新增class": "New class",
  "设置一条完整的cookie": "Set a complete cookie",
  "调用方法:": "Call method:",
  "参数说明:": "Parameter description:",
  "自定义分隔符": "Custom delimiters",
  "自定义样式": "Custom style",
  "一级菜单始终显示, 并且可以配置自定义icon图标": "The first level menu is always displayed, and a custom icon icon can be configured",
  "通过op对象配置, 左边按钮为迷你菜单 鼠标经过时候显示": "With the op object configuration, the left button is displayed for the mini menu when the mouse passes over it",
  "通过op对象配置 *hideTree: true* 属性来隐藏左边迷你导航菜单": "Hide the left mini navigation menu by configuring the *hideTree: true* property with the op object",
  "以数组对象形式保存, 需要配置二级或三级菜单数据, 在子对象中添加children数组": "To save as an array object, you need to configure the secondary or tertiary menu data and add the children array to the child objects",
  "可以自定义导航标题": "You can customize the navigation title",
  "可以自定义导航样式": "You can customize navigation styles",
  "自定义导航一级导航标题前的icon图标": "Custom Navigation The icon icon before the level 1 navigation title",
  "用法: 配置op对象, 设置 *icon: 属性*": "Usage: Configure the op object and set the *icon: property *",
  "左侧迷你导航菜单, 默认显示,配置*hideTree*设置属性为*true*可隐藏": "Left mini navigation menu, displayed by default, configure *hideTree* Set property to *true* can be hidden",
  "自定义组件主题颜色,可选参数: *primary*, *warning*, *info*, *success*, *danger*, 默认*success*": "Optional parameters: *primary*, *warning*, *info*, *success*, *danger*, default *success*",
  "用法: 配置op对象, 设置 *theme: 属性*": "Usage: Configure the op object and set the theme: attribute",
  "用法: 配置op对象并设置data数据, 在条目中绑定* onClick: '自定义事件'*": "Usage: Configure the op object and set the data data, binding * onClick: 'Custom event '* in the entry",
  "导航数据": "Navigation data",
  "自定义icon图标": "Custom icon Icon",
  "隐藏迷你菜单": "Hidden mini menu",
  "可以对条目自定义自定义点击事件, 在条目上绑定*onClick*回调函数": "You can customize a custom click event for the entry and bind the *onClick* callback function to the entry",
  "通过 *flag* 属性修改面包屑导航中间的分隔符": "Change the middle separator in the breadcrumb navigation with the *flag* attribute",
  "通过 *css* 属性来添加自定义class": "Add custom classes through the *css* property",
  "zoom-ui组件设置属性通过两种方法，一种是标签内绑定属性设置，另一种是配置op对象后，在op对象里设置属性，当设置了op对象内的属性后，标签内样式将会被覆盖。 组件暂不支持页面渲染后再改变属性，v-model除外。": "The zoom-ui component sets properties in two ways, one is to bind properties in the label, the other is to set properties in the op object after configuring the op object, when the properties in the op object are set, the style in the label will be overridden. Components do not currently support changing properties after the page is rendered, except for V-models.",
  "以数组对象形式保存": "Save as an array object",
  "用法: 配置op对象, 设置*data: [{title: xx, url: xxx}]*": "Usage: Configure op object, set *data: [{title: xx, url: xxx}]*",
  "可以自定义跳转链接, 默认在当前窗口打开, 如果要新窗口打开可以添加属性*target: 'blank'*": "You can customize the jump link, which opens in the current window by default. If you want a new window to open, you can add the property *target: 'blank'*",
  "用法: 配置op对象并设置data数据, 在条目中设置*url: xx*": "Usage: Configure the op object and set the data data, set *url: xx* in the entry",
  "可以自定义面包屑标题": "You can customize the breadcrumb title",
  "用法: 配置op对象并设置data数据, 在条目中设置*title: xx*": "Usage: Configure the op object and set the data data, set *title: xx* in the entry",
  "可以自定义面包屑样式": "You can customize the breadcrumb style",
  "用法: 配置op对象并设置data数据, 在条目中设置*css: xx*": "Usage: Configure the op object and set the data data, set *css: xx* in the entry",
  "用法: 配置op对象, 设置 *flag: 属性*": "Usage: Configure the op object and set *flag: property *",
  "面包屑导航数据": "Breadcrumb navigation data",
  "跳转链接": "Jump link",
  "自定义标题": "Custom title",
  "参照bootstrap，通过Row列配置": "According to bootstrap, the grid system was realized by Row column configuration + Col row configuration. The screen was divided into 12 grids. The proportion of screens could be configured according to different screens, such as super large screen, large screen, medium screen, small screen, and super small screen.",
  "还可以通过flex属性实现flex布局": "flex layout can also be implemented through flex properties",
  "layout.tip.1": "layout itself has no default width and height. It follows the width and height of the parent element. layout provides four slot slots, including *slot='header'*, *slot='aside'*, *slot='main'*, *slot='footer'*, *slot='aside'*, *slot='aside'*, *slot='aside'*, *slot='aside'*, *slot='aside'*. Developers have free layout definitions and can use them nested",
  "layout.tip.2": "By default, the component automatically returns the scroll bar to the top after each route change. You can disable this function manually",
  "layout.tip.3": "The default height of the head and tail of the Layout is 0, and the default width of the sidebar is 0. It can be modified by *headerHeight*, *footerHeight*, *asideWidth* on the layout label, and the body part will be calculated automatically",
  "对于项目中经常会用到的随机数字, 还有随机颜色": "For random numbers that are often used in projects, there are random colors",
  "zoom-ui封装成了API, 用户调用时候只需传入最小值和最大值, 就可以获取随机数, 每次调用都会随机": "zoom-ui is wrapped into an API that allows the user to get a random number by passing in a minimum and a maximum, and each call will be random",
  "方法: *this.$zoom.$rn(最小数, 最大数)*": "Method: *this.$zoom.$rn(minimum, maximum)*",
  "方法: *this.$zoom.$rc(最小值, 最大值)*": "Method: *this.$zoom.$rc(minimum, maximum)*",
  "随机数": "Random number",
  "随机颜色": "Random color",
  "手风琴模式": "Accordion pattern",
  "请看屏幕右边": "Look at the right side of the screen",
  "自定义模式": "Custom mode",
  "自定义内容": "Custom content",
  "点击按钮": "Click the button",
  "解除固定": "unfixation",
  "如果op属性里未配置data属性, 则启用自定义模式": "Enable custom mode if the data property is not configured in the op property",
  "浮动块导航数据": "Floating block navigation data",
  "定位": "positioning",
  "用法: 配置op对象并设置data数据, 在条目中绑定* onClick='自定义事件'*": "Usage: Configure the op object and set the data data, binding * onClick=' Custom event '* in the entry",
  "用法: 配置op对象, 设置 *position: 'right'*": "Usage: To configure the op object, set *position: 'right'*",
  "浮动块定位, 默认在右边, 可选参数: *right*, *left*": "The default position of the floating block is on the right. Optional parameters are *right* and *left*",
  "可以自定义浮动块标题": "You can customize the floating block title",
  "用法: 配置op对象并设置data数据, 在条目中设置*text: xx*": "Usage: Configure the op object and set the data data, in the entry set *text: xx*",
  "float.bar.tip": "The floating enclosure component is fixed and can be set on the left or right side of the screen. When the content is customized, the button with lock is fixed on the screen when clicked. Click again to hide the mouse passing. Configuration data The usage of data is the same as that of floating block navigation. For details, see data binding of the floating block navigation component.",
  "通过op对象配置, 手风琴模式下, 默认展开一级菜单, 并且只针对有二级菜单的有效": "With the op object configuration, accordion mode, the first level menu is expanded by default, and is only valid for the second level menu",
  "动态加载数据": "Dynamic loading data",
  "左侧迷你导航菜单, 默认false,配置*accordion*设置属性为*true*可开启": "Left mini navigation menu, default false, set *accordion* property to *true* enabled",
  "用法: 配置op对象, 设置 *accordion: true*": "Usage: Configure the op object to set *accordion: true*",
  "导航宽度, 默认100%, 可自定义": "Navigation width, default 100%, can be customized",
  "用法: 配置op对象, 设置 *width: 宽度*": "Usage: To configure the op object, set *width: width *",
  "如果配置了children数组, 可以添加事件load函数, load函数有两个参数, 一个是当前数据, 一个是当前下标, 可以在点击展开的时候,动态获取服务数据(需要后台服务的支持)": "If the children array is configured, you can add the event load function. The load function has two parameters, one is the current data and the other is the current subscript. The service data can be dynamically obtained when clicking expand (support of background service is required).",
  "用法: 配置op对象并设置data数据, 在条目中绑定* load: '自定义事件'*": "Usage: Configure the op object and set the data data, binding * load: 'Custom event '* in the entry",
  "tree-menu.tip": "title is the title and url is the address to jump to. If target is added: 'blank' will open in a new window, if you need to create a second level menu you can append an array of children to the object, the internal writing is the same as that of the parent, you can configure three levels of menu up to three levels, you can customize the click event per item, you can add onClick, you have two parameters val is the current row, index Indicates the current index. If the children array is configured, you can add an event load function that dynamically retrieves the service data when you click Expand (background service support is required).",
  "deep-clone.tip.1": "Many users are because of the reference type object, unable to copy deep, and caused a lot of bugs",
  "deep-clone.tip.2": "zoom-ui solves this problem by encapsulating a set of apis. The user simply calls and passes in the object or array to be copied, and the API returns the copied object/array to the user",
  "deep-clone.tip.3": "Call method *this.$zoom.clone(' Copy object ')*, deep copy can be an object or an array, and return the deep copy of the object/array",
  "explanation.tip1": "Software Development Kit is a set of function library encapsulated by zoom-ui based on vue and native js. It contains some common methods and instructions, which have been integrated into zoom-ui. Users can directly call it without additional introduction.",
  "explanation.tip2": "Users can also re-encapsulate the method according to their own habits. Please follow the SDK specification of zoom-ui according to the manual during use, so that you can better develop.",
  "explanation.focus": "Use: Write *v-focus* on the label you want to use, for example: <a href='#/SDK/zoom-directive'> internal extension directive </a>",
  "name : 表示cookie的名称，必填": "name : indicates the cookie name. This parameter is mandatory",
  "subCookies : 表示cookie的值，必填": "subCookies : specifies the value of the cookie. This parameter is mandatory",
  "expires : 表示cookie的过期时间，可以不填": "expires : indicates the expiration time of the cookie",
  "domain : 表示cookie的域名，可以不填": "domain : indicates the domain name of the cookie. You can leave this parameter blank",
  "path : 表示cookie的路径，可以不填": "path : indicates the cookie path. This parameter is optional",
  "secure : 表示cookie的安全标志，可以不填": "secure : indicates the security flag of the cookie. This parameter can be left blank",
  "设置一条子cookie": "Set a stripe cookie",
  "value : 表示子cookie的值，必填": "value : specifies the child cookie value. This parameter is mandatory",
  "读取一条完整cookie, 如果没传参数则默认读取所有cookie": "Read a complete cookie. If no parameter is passed, all cookies are read by default",
  "读取一条子cookie的值": "Reads the value of a sliver of cookie",
  "删除一条完整cookie": "Delete a complete cookie",
  "删除一条子cookie": "Delete a cookie",
  "清除当前所有cookie": "Clear all current cookies",
  "设置文本内容": "Set text content",
  "直接通过*$('元素')*来获取要查找的DOM元素, 可在mounted声明周期内使用": "The DOM element you want to find is obtained directly by *$(' element ')*, which can be used during the mounted declaration period",
  "链式操作": "Chain operation",
  "请看以下例子": "Take the following example",
  "查找DOM元素": "Find a DOM element",
  "用法: 调用方法*$('元素')*": "Usage: Calls method *$(' element ')*",
  "查找当前元素下的某个元素": "Finds an element under the current element",
  "用法: 调用方法*$('元素').find('要查找的元素')*": "Usage: Calls method *$(' element ').find(' element to find ')*",
  "选择第几个元素 下标从0开始": "Select the number of elements whose subscripts start at 0",
  "用法: 调用方法*$('元素').eq(n)*": "Usage: Calls method *$(' element ').eq(n)*",
  "可删除指定元素": "Deletes the specified element",
  "用法: 调用方法*$('元素').remove('要删除的元素')*": "Usage: Calls method *$(' element ').remove(' element to remove ')*",
  "要新增的class": "The class to be added",
  "用法: 调用方法*$('元素').addClass('class')*": "Usage: Calls method *$(' element ').addClass('class')*",
  "设置选中标签的文本内容": "Sets the text content of the selected label",
  "用法: 调用方法*$('元素').setText('文本内容')*": "Usage: Calls method *$(' element ').setText(' text content ')*",
  "服务地址, 必填": "Service address, mandatory",
  "获取当前国际化": "Get current internationalization",
  "通过调用*this.$zoom.getLanguage()*, 返回当前所有国际化信息": "Returns all current internationalization information by calling *this.$zoom.getLanguage()*",
  "设置/修改国际化": "Set/modify internationalization",
  "通过调用*this.$zoom.setLanguage(lang)*, 可以设置/修改国际化, 并返回当前最新所有国际化信息": "By calling *this.$zoom.setLanguage(lang)*, you can set/modify the internationalization and return all the current and most recent internationalization information",
  "因为个别浏览器以及缓存原因, 如果切换了国际化后未立马生效请刷新浏览器": "Please refresh your browser if the internationalization switch does not take effect immediately due to browser and cache issues",
  "使用国际化展示": "Use international display",
  "确保国际化名称正常, 可使用*$zoom.$t('国际化名称')*来展示国际化": "Make sure the internationalization name is correct. Use *$zoom.$t(' Internationalization Name ')* to show the internationalization",
  "想要在国际化中使用变量可以在设置时候使用*{变量名}*定义, 实际使用可参照如下:": "If you want to use variables in internationalization, you can use *{variable name}* when setting the variable. The actual use can refer to the following:",
  "zoom-ui内部封装的Network网络类, 是基于原生ajax进行封装, 用法和axios基本相同, 只支持异步请求。 用户可以不必再引用第三方插件, 而是可以直接通过zoom-ui内置的服务请求方法进行服务调用。": "zoom-ui internal encapsulation of Network network class, based on native ajax encapsulation, usage and axios is basically the same, only support asynchronous requests. Instead of referring to third-party plug-ins, users can make service calls directly through zoom-ui's built-in service request method.",
  "可使用方法有: get/post/put/delete等": "You can use the following methods: get, post, put, delete, etc",
  "通过调用 *this.$zoom.network.xx().then()* , 返回一个Promise对象": "Return a Promise object by calling * this.code.xx ().then()*",
  "如果调用方法为post/put/delete等, 可以传入请求主体 *params* , 可以以对象形式传参, 也可以依次传参": "If the calling method is post/put/delete, etc., you can pass in the request body *params*, either as an object or in sequence",
  "依次传参的参数为: url、params、headers": "The parameters are url, params, and headers in sequence",
  "如果要配置服务请求时间, 必须要以对象形式, 配置参数 *timeout*, 单位为毫秒, 当请求时间超过timeout则会终止服务请求。": "If you want to configure the service request time, it must be in the form of an object. Set the parameter *timeout*, in milliseconds. If the request time exceeds timeout, the service request will be terminated.",
  "用法: 调用方法*this.$zoom.network.get(url).then()*": "Usage: Call method * this.code..net work.get(url).then()*",
  "服务请求主体, 当服务为post/put/delete时可以使用。": "Service request principal, which can be used when the service is post/put/delete.",
  "服务请求头, *const headers = {'Content-Type': 'application/x-www-form-urlencoded'}*": "Service request header, *const headers = {'Content-Type': 'application/x-www-form-urlencoded'}*",
  "用法: 调用方法*this.$zoom.network.post(url, params, headers).then()*": "Usage: Call method * this.code..net work.post(url, params, headers).then()*",
  "请求指定的页面信息, 并返回实体主体。": "Requests the specified page information and returns the entity body.",
  "用法: *this.$zoom.network.get(url).then()*": "Usage: * this.code..net work.get(url).then()*",
  "向指定资源提交数据进行处理请求（例如表单或者上传文件），数据被包含在请求体中。": "Submit data to a specified resource to process a request (such as a form or upload a file) and the data is contained in the body of the request.",
  "用法: 调用方法*this.$zoom.network.post(url, params).then()*": "Usage: Call method * this.code..net work.post(url, params).then()*",
  "类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头。": "Similar to a get request, except there is nothing specific in the response returned to get the header.",
  "用法: 调用方法*this.$zoom.network.head(url).then()*": "Usage: Call method * this.code..net work.head(url).then()*",
  "从客户端向服务器传送的数据取代指定的文档内容。": "Data is sent from the client to the server to replace the specified document content.",
  "用法: 调用方法*this.$zoom.network.put(url, params).then()*": "Usage: Call method * this.code..net work.put(url, params).then()*",
  "从服务器删除指定的数据。": "Deletes the specified data from the server.",
  "用法: 调用方法*this.$zoom.network.delete(url, params).then()*": "Usage: Call method * this.code..net work.delete(url, params).then()*",
  "允许客户端查看服务器的性能": "Allows clients to view server performance",
  "用法: 调用方法*this.$zoom.network.options(url).then()*": "Usage: Call method * this.code.work.options (url).then()*",
  "回显服务器收到的请求，主要用于测试或诊断。": "The request received by the server is displayed for testing or diagnosis.",
  "用法: 调用方法*this.$zoom.network.trace(url).then()*": "Usage: Call method * this.code.work.trace (url).then()*",
  "SDK方法一览": "SDK method Overview",
  "内置扩展指令": "Built-in extension instruction",
  "DOM操作指令": "DOM manipulation instruction",
  "参数: *focus*、*drag*、*tip*、*lazyupload*": "Parameters: *focus*, *drag*, *tip*, *lazyupload*",
  "先要按照指定方式导入国际化文件, zoom-ui也集成了部分国际化, 可以直接使用": "Import the internationalization file according to the specified method first. zoom-ui also integrates some internationalization, so you can use it directly",
  "用法:DOM元素内 *$zoom.$t('国际化名')*, js中使用: *this.$zoom.$t('国际化名')*, 具体用法参考: <a href='#/SDK/internationalisation'>国际化</a>": "Usage: DOM elements within * $zoom. $t (' international pseudonym) *, used in js: * this. $zoom. $t (' international pseudonym) *, specific usage reference: < a href = '# / SDK/internationalisation' > < / a > of internationalization",
  "zoom-ui内部封装的类似于*jQuery*的选择器, 操作方法*jQuery*大致相同, 虽然没有*jQuery*功能全面, 但是胜在体积小方便操作, 如果需要更复杂的操作可以引入*jQuery*": "zoom-ui internal encapsulation of selectors similar to *jQuery*, operation method *jQuery* is roughly the same, although not as comprehensive as *jQuery*, but the advantages of small size and convenient operation, if you need more complex operations can introduce *jQuery*",
  "用法: 使用命令: *$('元素')*或者*$Z('元素')*可以获取DOM元素, 然后再进行增删改查操作, 具体用法参考: <a href='#/SDK/dom-operation'>DOM操作指令</a>": "Usage: Use the command *$(' element ')* or *$Z(' element ')* to obtain the DOM element, and then add, delete, modify, and query the dom element. For details, see <a href='#/SDK/dom-operation'>DOM operation command </a>.",
  "传入需要格式化的日期和需要格式化的形式, 函数会自动返回开发者想要的时间格式": "Pass in the date to be formatted and the format to be formatted, and the function will automatically return the time format the developer wants",
  "用法: 调用方法: *this.$zoom.dateFormat('YYYY-mm-dd HH:MM', date)*, 具体用法参考: <a href='#/SDK/date-format'>日期格式化</a>": "Usage: *this.$zoom.dateFormat('YYYY-mm-dd HH:MM', date)*, specific usage: <a href='#/SDK/date-format'> date formatting </a>",
  "zoom-ui封装的一套对于cookie增删改查等一系列的复杂操作": "zoom-ui encapsulates a series of complex operations such as adding, deleting, correcting and checking cookies",
  "用法: 调用方法: *this.$zoom.cookie.func*, 具体用法参考: <a href='#/SDK/cookie-operation'>cookie操作</a>": "Usage: *this.$zoom.cookie.func*, specific usage reference: <a href='#/SDK/cookie-operation'>cookie operation </a>",
  "可用于对复杂对象、数组、多维数组、数组对象等等进行深拷贝操作": "Can be used for deep copy operations on complex objects, arrays, multidimensional arrays, array objects, and so on",
  "用法: 调用方法: *this.$zoom.clone('拷贝对象')*, 具体用法参考: <a href='#/SDK/deep-clone'>深拷贝</a>": "Usage: call methods: * this $zoom. The clone (' copy objects) *, specific usage reference: < a href = '# / SDK/deep - clone' > deep copy < / a >",
  "获得一个自定义范围内的随机数/颜色": "Gets a random number/color in a custom range",
  "您访问的页面不存在!": "Not Found",
  "说明: 可以在不同屏幕下适配不同尺寸大小, *xl*为超大屏, *lg*为大屏, *md*为中屏, *sm*为小屏, *xs*为超小屏, span为所有屏通用, 范围在 *1 ~ 12* 之间": "Note: Different sizes can be adapted for different screens. *xl* is the super large screen, *lg* is the large screen, *md* is the medium screen, *sm* is the small screen, *xs* is the super small screen, and span is universal for all screens, ranging from *1 to 12*",
  "用法: span='可选参数',在*zoom-col* 标签上，绑定属性, 默认: *span='12'*": "Usage: span=' Optional ', on the *zoom-col* tag, binding properties, default: *span='12'*",
  "在 *zoom-row* 标签上设置属性 *:flex=true* 可开启弹性布局, 注意在低版本IE下可能会不兼容": "Set the property *:flex=true* on the *zoom-row* TAB to enable elastic layout. Note that it may not be compatible with earlier versions of IE",
  "用法: 在*zoom-row*标签上标记*:flex='true'*": "Usage: Mark *:flex='true'* on the *zoom-row* label",
  "配置了flex弹性布局后，可以定义排列方式。可选参数: *center* *end* *space-around*": "After configuring flex elastic layout, you can define the arrangement. Optional parameters: *center* *end* *space-around*",
  "用法: 在*zoom-row* 标签上，绑定属性 *justify='属性'*": "Usage: On the *zoom-row* tag, bind attribute *justify=' attribute '*",
  "配置了flex弹性布局后，可以定义对齐方式。可选参数: *top* *middle* *bottom*": "After configuring flex elastic layout, you can define the alignment. Optional parameters: *top* *middle* *bottom*",
  "用法: 在*zoom-row* 标签上，绑定属性 *align='属性'*": "Usage: On the *zoom-row* tag, bind attribute *align=' attribute '*",
  "说明: 通过设置*Col*组件的*offset*属性来指定分栏偏移的栏数, 范围 1 ~ 12 之间": "Note: Specify the number of columns offset by setting the offset property of the Col* component, ranging from 1 to 12",
  "用法: 在*zoom-col* 标签上，绑定属性 *offset='col偏移数( 1 ~ 12 之间)'*": "Usage: On the *zoom-col* tag, the binding attribute *offset='col offset (between 1 and 12)'*",
  "zoom-ui 提供了自定义icon字体图标，只需在行内标签的 *class* 写入指定的类名即可": "zoom-ui provides custom icon font ICONS by simply writing the specified class name to the *class* of the inline label",
  "使用方法如下": "The use method is as follows",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *headerHeight=60*": "Usage: On the zoom-layout tag, bind the attribute headerHeight=60*",
  "默认为 *0* 可通过*zoom-layout* 标签上设置属性来自定义头部高度": "The default is *0* You can customize the header height by setting the property on the *zoom-layout* TAB",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *footerHeight=60*": "Usage: On zoom-layout, bind the attribute footerHeight=60*",
  "默认为 *200px* 可通过*zoom-layout* 标签上设置属性来自定义头部高度": "The default is *200px*. You can customize the header height by setting the property on the *zoom-layout* TAB",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *asideWidth=200*": "Usage: On the zoom-layout tag, bind property *asideWidth=200*",
  "默认为 *false*, 每次页面改变会返回顶部, 为*true*禁止": "It defaults to *false*, and returns to the top every time the page changes, disallowed by *true*",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *stopTop=true*": "Usage: On the zoom-layout tag, bind the property stopTop=true*",
  "默认为 *false*, 配置后在侧边栏显示收缩按钮, 点击收缩按钮可收缩侧边栏,再次点击则展开": "The default value is *false*. After configuration, the shrink button will be displayed in the sidebar. Click the shrink button to shrink the sidebar and click again to expand it",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *toggleAside*": "Usage: On the zoom-layout TAB, bind property toggleAside*",
  "调用该方法可以使zoom-layout布局元素滚动条返回顶部, 即使设置了*stopTop*属性也可以生效": "Calling this method causes the zoom-layout element scrollbar to return to the top, even if the *stopTop* attribute is set",
  "用法: 绑定ref属性, 调用方法*this.$refs[绑定属性.goTop()*": "Usage: Bind ref property, call method *this.$refs[bind property.gotop ()*",
  "对 *hover*、*active* 状态，分别有不同的颜色呈现，以 *primary* 色彩示例": "For *hover*, *active* state, there are different colors presented, with *primary* color example",
  "想在背景色基础上增加伪类效果, 可在原有基础上增加 *class='hover'* 、*class='active'*": "If you want to increase the pseudo-class effect on the basis of background color, you can increase *class='hover'*, *class='active'* on the original basis",
  "可选参数: *primary* / *info* / *warning* / *success* / *danger*": "Optional parameters: *primary* / *info* / *warning* / *success* / *danger*",
  "用法: 配置op对象, 设置 *type: '按钮状态'*, 或在组件标签上绑定*type= '按钮状态'*": "Usage: Configure the op object by setting *type: 'button state '*, or bind *type=' button state '* on the component label",
  "可选参数: *plain* / *round* / *circle*": "Optional parameter: *plain* / *round* / *circle*",
  "用法: 配置op对象, 设置 *shape: '按钮形状'*, 或在组件标签上绑定*shape='按钮形状'*": "Usage: Configure the op object by setting *shape: 'button shape '*, or bind * Shape =' button shape '* to the component label",
  "可选参数: *mini* / *small* / *medium* / *large*": "Optional parameters: *mini* / *small* / *medium* / *large*",
  "用法: 配置op对象, 设置 *size: '属性'*, 或在组件标签上绑定*size='属性'*": "Usage: Configure the op object by setting *size: 'property '*, or binding *size=' property '* to the component label",
  "默认: 1000 毫秒": "Default: 1000 milliseconds",
  "用法: *:reset-time='时间'*或者配置op对象, 设置 *resetTime: '时间'*": "Usage: *:reset-time=' time '* Or to configure the op object, set *resetTime: 'time '*",
  "可选参数: *true* / *false*, 默认 *false*": "Optional parameters: *true* / *false*. The default value is *false*",
  "用法: 配置op对象, 设置 *disabled='true'*": "Usage: To configure an op object, set *disabled='true'*",
  "可绑定点击事件": "You can bind click events",
  "用法: 配置op对象, 设置 *@click='自定义事件'*": "Usage: Configure the op object by setting *@click=' Custom event '*",
  "参数传*true*则设置禁用组件, 为*false*可取消禁用": "If it is passed to *true*, the component is disabled. If it is passed to *false*, the component is disabled",
  "用法: ref属性, 设置 *this.$refs[绑定属性].setDisabled(true)*": "Usage: ref property, set *this.$refs[bind property].setdisabled (true)*",
  "button.description.1": "For components with lots of attributes, zoom-ui provides a custom configuration panel that uses the object to be bound, op, in which you can customize attributes such as button type and button disable. When the op attribute is configured, the attributes in the tag will be overwritten.",
  "button.description.2": "The zoom-ui component sets properties in two ways, one is to bind properties in the label, the other is to set properties in the op object after configuring the op object, when the properties in the op object are set, the style in the label will be overridden. Components do not currently support changing properties after the page is rendered, except for V-models.",
  "test.iter2": "test iter"
}