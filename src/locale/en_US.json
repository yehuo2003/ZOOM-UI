{
  "test.iter": "test num",
  "框架风格": "Frame style",
  "导航组件": "Navigation component",
  "容器组件": "Container assembly",
  "表单组件": "Form component",
  "数据组件": "Data component",
  "验证码": "Verification code",
  "提示组件": "Prompt component",
  "业务组件": "Business component",
  "其它组件": "Other components",
  "环境准备": "Environmental preparation",
  "组件安装": "Component installation",
  "快速上手": "Get started quickly",
  "组件升级": "Component upgrade",
  "组件使用": "Component use",
  "SDK说明": "SDK description",
  "内置指令": "Built-in instruction",
  "国际化": "internationalization",
  "服务请求": "Service request",
  "Dom操作命令": "Dom manipulation command",
  "内置方法": "Built-in method",
  "日期格式化": "Date formatting",
  "cookie操作": "cookie operation",
  "深拷贝": "Deep copy",
  "随机数/随机颜色": "Random number/random color",
  "首页": "Home page",
  "环境搭建": "Environment construction",
  "组件": "component",
  "软件开发包": "Software development kit",
  "更多": "more",
  "搜索组件": "Search component",
  "企业级前端UI设计的Vue组件": "Vue components for enterprise-class UI design",
  "企业级设计系统，追求极致体验": "Enterprise design system, the pursuit of extreme experience",
  "多种前端设计方案融合": "Integration of multiple front-end design schemes",
  "开箱即用的Vue组件库": "Vue component library out of the box",
  "丰富的配套SDK": "Rich supporting SDK",
  "您需要的组件都有": "You have all the components you need",
  "为您的项目设计构建了基础组件，有助于您更快速构建出更好的产品": "Building the foundation components for your project design helps you build better products faster",
  "进入组件指南": "Access component guide",
  "请输入": "Please enter",
  "zoomUI提供超多开箱即用的Vue前端组件、强大的SDK功能，让您的开发如虎添翼": "zoomUI offers a plethora of out-of-the-box Vue front-end components and powerful SDK features to make your development a tiger",
  "遵循": "follow",
  "开源协议": "Open source protocol",
  "开始使用组件": "Start using components",
  "地址输入有误? 尝试输入框搜索": "Incorrect address input? Let me help you",
  "您想查找什么?": "What are you looking for?",
  "给您提供建议": "My Suggestions.",
  "搜索": "Search",
  "返回上一级目录": "Return to the previous directory",
  "自动续费": "Automatic renewal",
  "按需付费": "pay-as-you-go",
  "北京": "Peking",
  "上海": "Shanghai",
  "广州": "Guangzhou",
  "深圳": "Shenzhen",
  "唱歌": "sing",
  "跳舞": "dance",
  "音乐": "music",
  "运动": "movement",
  "more.description.1": "zoom-ui components are personally developed by me. The project has been under development since 2019 and is still being updated. It has been decided to open source on March 28, 2021.",
  "more.description.2": "If you encounter any bugs or do not understand the zoom-ui component in the process of using zoom-ui component, or if you have good suggestions or opinions on Zoom-UI component, please feel free to contact me.",
  "more.description.3": "For the bugs found or existing problems, you can contact me through the contact information below, I will actively solve the problem and timely update the components.",
  "more.description.4": "Based on market demand, I will add new components or optimize the functions of existing components from time to time. Updates will be explained in this page.",
  "more.description.5": "zoom-ui is a very powerful UI component. Only some zoom-ui components are open on the page, mainly some popular and commonly used components. There are other business components that are not disclosed, such as shopping malls, medical care, logistics, finance, and so on. zoom-ui supports private or enterprise customization of components. If you have specific business needs, you can contact me to customize the component library or plug-in to meet your needs.",
  "more.description.6": "If you think this component is useful, I hope you can recommend it to people around you. If you want to support zoom-ui components, please feel free to contact me. Thank you for your recognition and support!",
  "学习交流": "Learning communication",
  "联系方式": "Contact information",
  "更新日志": "Update log",
  "博客": "Blog",
  "微信": "WeChat",
  "邮箱": "E-Mail",
  "说明": "description",
  "色彩类型": "Color Type",
  "对于色彩类型一共有五种": "There are five types of color",
  "分别为": "Respectively",
  "如背景色请加class": "Please add class as background color",
  "不同情况下的色彩": "Color in Different Situations",
  "添加伪类效果": "Add pseudo-class effect",
  "尝试着鼠标经过和点击": "Try to mouse over and click",
  "暗色调": "Dark Tone",
  "常用的几种暗色调如下": "The common dark tones are as follows",
  "对于": "For ",
  "复制": "copy",
  "使用方法": "Usage method",
  "效果": "display",
  "代码": "code",
  "按钮": "button ",
  "平角": "Straight Angle ",
  "圆角": "Rounded corner ",
  "普通": "ordinary ",
  "主要": "main ",
  "成功": "success ",
  "警告": "warning ",
  "危险": "danger ",
  "信息": "information ",
  "基本用法": "Basic usage ",
  "基础按钮的用法": "The use of base buttons ",
  "按钮大小": "Button size ",
  "禁用/防抖": "Disable/anti-shake ",
  "可指定按钮大小, 属性: size": "Button size can be specified, property: size ",
  "迷你": "mini ",
  "小按钮": "Small button ",
  "普通按钮": "Plain button ",
  "中等按钮": "Medium button ",
  "大按钮": "Big button ",
  "禁用x秒": "Disable {x} seconds",
  "属性": "Attribute",
  "方法": "Method",
  "通过 *disabled* 属性设置按钮为禁用状态": "Use the *disabled* property to set the button to disabled",
  "通过 *reset-time* 属性设置按钮防抖时间, 单位为毫秒, 默认 *1000* 毫秒": "The *reset-time* property is used to set the anti-shaking time of the button, in milliseconds. The default value is *1000* milliseconds",
  "自定义配置属性": "Customize configuration properties",
  "按钮类型": "Button type",
  "按钮形状": "Button shape",
  "点击间隔": "Click interval",
  "按钮禁用": "Button disable",
  "自定义点击事件": "Customize click events",
  "设置禁用状态": "Setting disabled state",
  "经典布局": "Classical layout",
  "简单布局": "Simple layout",
  "圣杯布局": "Grail layout",
  "时尚布局": "Fashion layout",
  "嵌套用法": "Nesting method",
  "头部高度": "Head height",
  "尾部高度": "Tail height",
  "侧边栏宽度": "Sidebar width",
  "关闭返回顶部": "Close return to top",
  "侧边栏收缩按钮": "Sidebar shrink button",
  "返回顶部": "Return to the top",
  "适配不同屏幕": "Fit different screens",
  "可以根据不同屏幕, 设置不同分栏大小": "You can set different column sizes according to different screens",
  "可通过col配置的属性 超大屏*xl*、 大屏*lg*、 中屏*md*、 小屏*sm*、 超小屏*xs* 来分别设置不同屏幕下分栏效果，值范围*1 ~ 12*": "The column effect of different screens can be set by col properties: super large screen *xl*, large screen *lg*, medium screen *md*, small screen *sm*, and super small screen *xs*. The value range is *1 ~ 12*",
  "Flex布局": "Flex layout",
  "通过设置*flex*属性为true来启用*flex*布局, 并通过*justify*与*align*属性调整子元素的对齐方式": "Enable the *flex* layout by setting the *flex* attribute to true, and adjust the alignment of child elements using the *justify* and *align* attributes",
  "Order排序": "Order sort",
  "在启用*flex*布局时, 可通过设置*Row*组件的*order*属性, 给*Col*组件进行排序": "When the *flex* layout is enabled, you can sort the *Col* component by setting the *order* property of the *Row* component",
  "Col列偏移": "Col column migration",
  "通过设置*Col*组件的*offset*属性来指定分栏偏移的栏数": "Specify the number of columns offset by setting the offset property of the Col* component",
  "分栏属性": "Columnar attribute",
  "弹性布局": "Elastic layout",
  "排列方式": "Arrangement mode",
  "对齐方式": "Alignment mode",
  "偏移": "offset",
  "设置更多信息": "Set more information",
  "post方法演示": "post method demonstration",
  "get方法演示": "get method demonstration",
  "调用示例": "Call example",
  "Network网络类": "Network",
  "服务地址": "Service address",
  "请求主体": "Request body",
  "请求头": "Request header",
  "获取DOM元素": "Get the DOM element",
  "查找元素": "Lookup element",
  "zoom-ui封装的日期时间格式化组件, 用户可以自定义要格式化的时间格式": "zoom-ui packaged date and time formatting component, users can customize to format the time format",
  "通过 *this.$zoom.dateformat('自定义格式化', 时间对象)* 方法调用": "Called through the *this.$zoom.dateformat(' Custom Formatting ', time object)* method",
  "选取第n个元素": "Pick the NTH element",
  "删除元素": "Delete element",
  "新增class": "New class",
  "设置一条完整的cookie": "Set a complete cookie",
  "调用方法:": "Call method:",
  "参数说明:": "Parameter description:",
  "自定义分隔符": "Custom delimiters",
  "自定义样式": "Custom style",
  "一级菜单始终显示, 并且可以配置自定义icon图标": "The first level menu is always displayed, and a custom icon icon can be configured",
  "通过op对象配置, 左边按钮为迷你菜单 鼠标经过时候显示": "With the op object configuration, the left button is displayed for the mini menu when the mouse passes over it",
  "通过op对象配置 *hideTree: true* 属性来隐藏左边迷你导航菜单": "Hide the left mini navigation menu by configuring the *hideTree: true* property with the op object",
  "以数组对象形式保存, 需要配置二级或三级菜单数据, 在子对象中添加children数组": "To save as an array object, you need to configure the secondary or tertiary menu data and add the children array to the child objects",
  "可以自定义导航标题": "You can customize the navigation title",
  "可以自定义导航样式": "You can customize navigation styles",
  "自定义导航一级导航标题前的icon图标": "Custom Navigation The icon icon before the level 1 navigation title",
  "用法: 配置op对象, 设置 *icon: 属性*": "Usage: Configure the op object and set the *icon: property *",
  "左侧迷你导航菜单, 默认显示,配置*hideTree*设置属性为*true*可隐藏": "Left mini navigation menu, displayed by default, configure *hideTree* Set property to *true* can be hidden",
  "自定义组件主题颜色,可选参数: *primary*, *warning*, *info*, *success*, *danger*, 默认*success*": "Optional parameters: *primary*, *warning*, *info*, *success*, *danger*, default *success*",
  "用法: 配置op对象, 设置 *theme: 属性*": "Usage: Configure the op object and set the theme: attribute",
  "用法: 配置op对象并设置data数据, 在条目中绑定* onClick: '自定义事件'*": "Usage: Configure the op object and set the data data, binding * onClick: 'Custom event '* in the entry",
  "导航数据": "Navigation data",
  "自定义icon图标": "Custom icon Icon",
  "隐藏迷你菜单": "Hidden mini menu",
  "可以对条目自定义自定义点击事件, 在条目上绑定*onClick*回调函数": "You can customize a custom click event for the entry and bind the *onClick* callback function to the entry",
  "通过 *flag* 属性修改面包屑导航中间的分隔符": "Change the middle separator in the breadcrumb navigation with the *flag* attribute",
  "通过 *css* 属性来添加自定义class": "Add custom classes through the *css* property",
  "zoom-ui组件设置属性通过两种方法，一种是标签内绑定属性设置，另一种是配置op对象后，在op对象里设置属性，当设置了op对象内的属性后，标签内样式将会被覆盖。 组件暂不支持页面渲染后再改变属性，v-model除外。": "The zoom-ui component sets properties in two ways, one is to bind properties in the label, the other is to set properties in the op object after configuring the op object, when the properties in the op object are set, the style in the label will be overridden. Components do not currently support changing properties after the page is rendered, except for V-models.",
  "以数组对象形式保存": "Save as an array object",
  "用法: 配置op对象, 设置*data: [{title: xx, url: xxx}]*": "Usage: Configure op object, set *data: [{title: xx, url: xxx}]*",
  "可以自定义跳转链接, 默认在当前窗口打开, 如果要新窗口打开可以添加属性*target: 'blank'*": "You can customize the jump link, which opens in the current window by default. If you want a new window to open, you can add the property *target: 'blank'*",
  "用法: 配置op对象并设置data数据, 在条目中设置*url: xx*": "Usage: Configure the op object and set the data data, set *url: xx* in the entry",
  "可以自定义面包屑标题": "You can customize the breadcrumb title",
  "用法: 配置op对象并设置data数据, 在条目中设置*title: xx*": "Usage: Configure the op object and set the data data, set *title: xx* in the entry",
  "可以自定义面包屑样式": "You can customize the breadcrumb style",
  "用法: 配置op对象并设置data数据, 在条目中设置*css: xx*": "Usage: Configure the op object and set the data data, set *css: xx* in the entry",
  "用法: 配置op对象, 设置 *flag: 属性*": "Usage: Configure the op object and set *flag: property *",
  "面包屑导航数据": "Breadcrumb navigation data",
  "跳转链接": "Jump link",
  "自定义标题": "Custom title",
  "参照bootstrap，通过Row列配置": "According to bootstrap, the grid system was realized by Row column configuration + Col row configuration. The screen was divided into 12 grids. The proportion of screens could be configured according to different screens, such as super large screen, large screen, medium screen, small screen, and super small screen.",
  "还可以通过flex属性实现flex布局": "flex layout can also be implemented through flex properties",
  "layout.tip.1": "layout itself has no default width and height. It follows the width and height of the parent element. layout provides four slot slots, including *slot='header'*, *slot='aside'*, *slot='main'*, *slot='footer'*, *slot='aside'*, *slot='aside'*, *slot='aside'*, *slot='aside'*, *slot='aside'*. Developers have free layout definitions and can use them nested",
  "layout.tip.2": "By default, the component automatically returns the scroll bar to the top after each route change. You can disable this function manually",
  "layout.tip.3": "The default height of the head and tail of the Layout is 0, and the default width of the sidebar is 0. It can be modified by *headerHeight*, *footerHeight*, *asideWidth* on the layout label, and the body part will be calculated automatically",
  "对于项目中经常会用到的随机数字, 还有随机颜色": "For random numbers that are often used in projects, there are random colors",
  "zoom-ui封装成了API, 用户调用时候只需传入最小值和最大值, 就可以获取随机数, 每次调用都会随机": "zoom-ui is wrapped into an API that allows the user to get a random number by passing in a minimum and a maximum, and each call will be random",
  "方法: *this.$zoom.$rn(最小数, 最大数)*": "Method: *this.$zoom.$rn(minimum, maximum)*",
  "方法: *this.$zoom.$rc(最小值, 最大值)*": "Method: *this.$zoom.$rc(minimum, maximum)*",
  "随机数": "Random number",
  "随机颜色": "Random color",
  "手风琴模式": "Accordion pattern",
  "请看屏幕右边": "Look at the right side of the screen",
  "自定义模式": "Custom mode",
  "自定义内容": "Custom content",
  "点击按钮": "Click the button",
  "解除固定": "unfixation",
  "如果op属性里未配置data属性, 则启用自定义模式": "Enable custom mode if the data property is not configured in the op property",
  "浮动块导航数据": "Floating block navigation data",
  "定位": "positioning",
  "用法: 配置op对象并设置data数据, 在条目中绑定* onClick='自定义事件'*": "Usage: Configure the op object and set the data data, binding * onClick=' Custom event '* in the entry",
  "用法: 配置op对象, 设置 *position: 'right'*": "Usage: To configure the op object, set *position: 'right'*",
  "浮动块定位, 默认在右边, 可选参数: *right*, *left*": "The default position of the floating block is on the right. Optional parameters are *right* and *left*",
  "可以自定义浮动块标题": "You can customize the floating block title",
  "用法: 配置op对象并设置data数据, 在条目中设置*text: xx*": "Usage: Configure the op object and set the data data, in the entry set *text: xx*",
  "float.bar.tip": "The floating enclosure component is fixed and can be set on the left or right side of the screen. When the content is customized, the button with lock is fixed on the screen when clicked. Click again to hide the mouse passing. Configuration data The usage of data is the same as that of floating block navigation. For details, see data binding of the floating block navigation component.",
  "通过op对象配置, 手风琴模式下, 默认展开一级菜单, 并且只针对有二级菜单的有效": "With the op object configuration, accordion mode, the first level menu is expanded by default, and is only valid for the second level menu",
  "动态加载数据": "Dynamic loading data",
  "左侧迷你导航菜单, 默认false,配置*accordion*设置属性为*true*可开启": "Left mini navigation menu, default false, set *accordion* property to *true* enabled",
  "用法: 配置op对象, 设置 *accordion: true*": "Usage: Configure the op object to set *accordion: true*",
  "导航宽度, 默认100%, 可自定义": "Navigation width, default 100%, can be customized",
  "用法: 配置op对象, 设置 *width: 宽度*": "Usage: To configure the op object, set *width: width *",
  "如果配置了children数组, 可以添加事件load函数, load函数有两个参数, 一个是当前数据, 一个是当前下标, 可以在点击展开的时候,动态获取服务数据(需要后台服务的支持)": "If the children array is configured, you can add the event load function. The load function has two parameters, one is the current data and the other is the current subscript. The service data can be dynamically obtained when clicking expand (support of background service is required).",
  "用法: 配置op对象并设置data数据, 在条目中绑定* load: '自定义事件'*": "Usage: Configure the op object and set the data data, binding * load: 'Custom event '* in the entry",
  "tree-menu.tip": "title is the title and url is the address to jump to. If target is added: 'blank' will open in a new window, if you need to create a second level menu you can append an array of children to the object, the internal writing is the same as that of the parent, you can configure three levels of menu up to three levels, you can customize the click event per item, you can add onClick, you have two parameters val is the current row, index Indicates the current index. If the children array is configured, you can add an event load function that dynamically retrieves the service data when you click Expand (background service support is required).",
  "deep-clone.tip.1": "Many users are because of the reference type object, unable to copy deep, and caused a lot of bugs",
  "deep-clone.tip.2": "zoom-ui solves this problem by encapsulating a set of apis. The user simply calls and passes in the object or array to be copied, and the API returns the copied object/array to the user",
  "deep-clone.tip.3": "Call method *this.$zoom.clone(' Copy object ')*, deep copy can be an object or an array, and return the deep copy of the object/array",
  "explanation.tip1": "Software Development Kit is a set of function library encapsulated by zoom-ui based on vue and native js. It contains some common methods and instructions, which have been integrated into zoom-ui. Users can directly call it without additional introduction.",
  "explanation.tip2": "Users can also re-encapsulate the method according to their own habits. Please follow the SDK specification of zoom-ui according to the manual during use, so that you can better develop.",
  "explanation.focus": "Use: Write *v-focus* on the label you want to use, for example: <a href='#/SDK/zoom-directive'> internal extension directive </a>",
  "name : 表示cookie的名称，必填": "name : indicates the cookie name. This parameter is mandatory",
  "subCookies : 表示cookie的值，必填": "subCookies : specifies the value of the cookie. This parameter is mandatory",
  "expires : 表示cookie的过期时间，可以不填": "expires : indicates the expiration time of the cookie",
  "domain : 表示cookie的域名，可以不填": "domain : indicates the domain name of the cookie. You can leave this parameter blank",
  "path : 表示cookie的路径，可以不填": "path : indicates the cookie path. This parameter is optional",
  "secure : 表示cookie的安全标志，可以不填": "secure : indicates the security flag of the cookie. This parameter can be left blank",
  "设置一条子cookie": "Set a stripe cookie",
  "value : 表示子cookie的值，必填": "value : specifies the child cookie value. This parameter is mandatory",
  "读取一条完整cookie, 如果没传参数则默认读取所有cookie": "Read a complete cookie. If no parameter is passed, all cookies are read by default",
  "读取一条子cookie的值": "Reads the value of a sliver of cookie",
  "删除一条完整cookie": "Delete a complete cookie",
  "删除一条子cookie": "Delete a cookie",
  "清除当前所有cookie": "Clear all current cookies",
  "设置文本内容": "Set text content",
  "直接通过*$('元素')*来获取要查找的DOM元素, 可在mounted声明周期内使用": "The DOM element you want to find is obtained directly by *$(' element ')*, which can be used during the mounted declaration period",
  "链式操作": "Chain operation",
  "请看以下例子": "Take the following example",
  "查找DOM元素": "Find a DOM element",
  "用法: 调用方法*$('元素')*": "Usage: Calls method *$(' element ')*",
  "查找当前元素下的某个元素": "Finds an element under the current element",
  "用法: 调用方法*$('元素').find('要查找的元素')*": "Usage: Calls method *$(' element ').find(' element to find ')*",
  "选择第几个元素 下标从0开始": "Select the number of elements whose subscripts start at 0",
  "用法: 调用方法*$('元素').eq(n)*": "Usage: Calls method *$(' element ').eq(n)*",
  "可删除指定元素": "Deletes the specified element",
  "用法: 调用方法*$('元素').remove('要删除的元素')*": "Usage: Calls method *$(' element ').remove(' element to remove ')*",
  "要新增的class": "The class to be added",
  "用法: 调用方法*$('元素').addClass('class')*": "Usage: Calls method *$(' element ').addClass('class')*",
  "设置选中标签的文本内容": "Sets the text content of the selected label",
  "用法: 调用方法*$('元素').setText('文本内容')*": "Usage: Calls method *$(' element ').setText(' text content ')*",
  "服务地址, 必填": "Service address, mandatory",
  "获取当前国际化": "Get current internationalization",
  "通过调用*this.$zoom.getLanguage()*, 返回当前所有国际化信息": "Returns all current internationalization information by calling *this.$zoom.getLanguage()*",
  "设置/修改国际化": "Set/modify internationalization",
  "通过调用*this.$zoom.setLanguage(lang)*, 可以设置/修改国际化, 并返回当前最新所有国际化信息": "By calling *this.$zoom.setLanguage(lang)*, you can set/modify the internationalization and return all the current and most recent internationalization information",
  "因为个别浏览器以及缓存原因, 如果切换了国际化后未立马生效请刷新浏览器": "Please refresh your browser if the internationalization switch does not take effect immediately due to browser and cache issues",
  "使用国际化展示": "Use international display",
  "确保国际化名称正常, 可使用*$zoom.$t('国际化名称')*来展示国际化": "Make sure the internationalization name is correct. Use *$zoom.$t(' Internationalization Name ')* to show the internationalization",
  "想要在国际化中使用变量可以在设置时候使用*{变量名}*定义, 实际使用可参照如下:": "If you want to use variables in internationalization, you can use *{variable name}* when setting the variable. The actual use can refer to the following:",
  "zoom-ui内部封装的Network网络类, 是基于原生ajax进行封装, 用法和axios基本相同, 只支持异步请求。 用户可以不必再引用第三方插件, 而是可以直接通过zoom-ui内置的服务请求方法进行服务调用。": "zoom-ui internal encapsulation of Network network class, based on native ajax encapsulation, usage and axios is basically the same, only support asynchronous requests. Instead of referring to third-party plug-ins, users can make service calls directly through zoom-ui's built-in service request method.",
  "可使用方法有: get/post/put/delete等": "You can use the following methods: get, post, put, delete, etc",
  "通过调用 *this.$zoom.network.xx().then()* , 返回一个Promise对象": "Return a Promise object by calling * this.code.xx ().then()*",
  "如果调用方法为post/put/delete等, 可以传入请求主体 *params* , 可以以对象形式传参, 也可以依次传参": "If the calling method is post/put/delete, etc., you can pass in the request body *params*, either as an object or in sequence",
  "依次传参的参数为: url、params、headers": "The parameters are url, params, and headers in sequence",
  "如果要配置服务请求时间, 必须要以对象形式, 配置参数 *timeout*, 单位为毫秒, 当请求时间超过timeout则会终止服务请求。": "If you want to configure the service request time, it must be in the form of an object. Set the parameter *timeout*, in milliseconds. If the request time exceeds timeout, the service request will be terminated.",
  "用法: 调用方法*this.$zoom.network.get(url).then()*": "Usage: Call method * this.code..net work.get(url).then()*",
  "服务请求主体, 当服务为post/put/delete时可以使用。": "Service request principal, which can be used when the service is post/put/delete.",
  "服务请求头, *const headers = {'Content-Type': 'application/x-www-form-urlencoded'}*": "Service request header, *const headers = {'Content-Type': 'application/x-www-form-urlencoded'}*",
  "用法: 调用方法*this.$zoom.network.post(url, params, headers).then()*": "Usage: Call method * this.code..net work.post(url, params, headers).then()*",
  "请求指定的页面信息, 并返回实体主体。": "Requests the specified page information and returns the entity body.",
  "用法: *this.$zoom.network.get(url).then()*": "Usage: * this.code..net work.get(url).then()*",
  "向指定资源提交数据进行处理请求（例如表单或者上传文件），数据被包含在请求体中。": "Submit data to a specified resource to process a request (such as a form or upload a file) and the data is contained in the body of the request.",
  "用法: 调用方法*this.$zoom.network.post(url, params).then()*": "Usage: Call method * this.code..net work.post(url, params).then()*",
  "类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头。": "Similar to a get request, except there is nothing specific in the response returned to get the header.",
  "用法: 调用方法*this.$zoom.network.head(url).then()*": "Usage: Call method * this.code..net work.head(url).then()*",
  "从客户端向服务器传送的数据取代指定的文档内容。": "Data is sent from the client to the server to replace the specified document content.",
  "用法: 调用方法*this.$zoom.network.put(url, params).then()*": "Usage: Call method * this.code..net work.put(url, params).then()*",
  "从服务器删除指定的数据。": "Deletes the specified data from the server.",
  "用法: 调用方法*this.$zoom.network.delete(url, params).then()*": "Usage: Call method * this.code..net work.delete(url, params).then()*",
  "允许客户端查看服务器的性能": "Allows clients to view server performance",
  "用法: 调用方法*this.$zoom.network.options(url).then()*": "Usage: Call method * this.code.work.options (url).then()*",
  "回显服务器收到的请求，主要用于测试或诊断。": "The request received by the server is displayed for testing or diagnosis.",
  "用法: 调用方法*this.$zoom.network.trace(url).then()*": "Usage: Call method * this.code.work.trace (url).then()*",
  "SDK方法一览": "SDK method Overview",
  "内置扩展指令": "Built-in extension instruction",
  "DOM操作指令": "DOM manipulation instruction",
  "参数: *focus*、*drag*、*tip*、*lazyupload*": "Parameters: *focus*, *drag*, *tip*, *lazyupload*",
  "先要按照指定方式导入国际化文件, zoom-ui也集成了部分国际化, 可以直接使用": "Import the internationalization file according to the specified method first. zoom-ui also integrates some internationalization, so you can use it directly",
  "用法:DOM元素内 *$zoom.$t('国际化名')*, js中使用: *this.$zoom.$t('国际化名')*, 具体用法参考: <a href='#/SDK/internationalisation'>国际化</a>": "Usage: DOM elements within * $zoom. $t (' international pseudonym) *, used in js: * this. $zoom. $t (' international pseudonym) *, specific usage reference: < a href = '# / SDK/internationalisation' > < / a > of internationalization",
  "zoom-ui内部封装的类似于*jQuery*的选择器, 操作方法*jQuery*大致相同, 虽然没有*jQuery*功能全面, 但是胜在体积小方便操作, 如果需要更复杂的操作可以引入*jQuery*": "zoom-ui internal encapsulation of selectors similar to *jQuery*, operation method *jQuery* is roughly the same, although not as comprehensive as *jQuery*, but the advantages of small size and convenient operation, if you need more complex operations can introduce *jQuery*",
  "用法: 使用命令: *$('元素')*或者*$Z('元素')*可以获取DOM元素, 然后再进行增删改查操作, 具体用法参考: <a href='#/SDK/dom-operation'>DOM操作指令</a>": "Usage: Use the command *$(' element ')* or *$Z(' element ')* to obtain the DOM element, and then add, delete, modify, and query the dom element. For details, see <a href='#/SDK/dom-operation'>DOM operation command </a>.",
  "传入需要格式化的日期和需要格式化的形式, 函数会自动返回开发者想要的时间格式": "Pass in the date to be formatted and the format to be formatted, and the function will automatically return the time format the developer wants",
  "用法: 调用方法: *this.$zoom.dateFormat('YYYY-mm-dd HH:MM', date)*, 具体用法参考: <a href='#/SDK/date-format'>日期格式化</a>": "Usage: *this.$zoom.dateFormat('YYYY-mm-dd HH:MM', date)*, specific usage: <a href='#/SDK/date-format'> date formatting </a>",
  "zoom-ui封装的一套对于cookie增删改查等一系列的复杂操作": "zoom-ui encapsulates a series of complex operations such as adding, deleting, correcting and checking cookies",
  "用法: 调用方法: *this.$zoom.cookie.func*, 具体用法参考: <a href='#/SDK/cookie-operation'>cookie操作</a>": "Usage: *this.$zoom.cookie.func*, specific usage reference: <a href='#/SDK/cookie-operation'>cookie operation </a>",
  "可用于对复杂对象、数组、多维数组、数组对象等等进行深拷贝操作": "Can be used for deep copy operations on complex objects, arrays, multidimensional arrays, array objects, and so on",
  "用法: 调用方法: *this.$zoom.clone('拷贝对象')*, 具体用法参考: <a href='#/SDK/deep-clone'>深拷贝</a>": "Usage: call methods: * this $zoom. The clone (' copy objects) *, specific usage reference: < a href = '# / SDK/deep - clone' > deep copy < / a >",
  "获得一个自定义范围内的随机数/颜色": "Gets a random number/color in a custom range",
  "您访问的页面不存在!": "Not Found",
  "说明: 可以在不同屏幕下适配不同尺寸大小, *xl*为超大屏, *lg*为大屏, *md*为中屏, *sm*为小屏, *xs*为超小屏, span为所有屏通用, 范围在 *1 ~ 12* 之间": "Note: Different sizes can be adapted for different screens. *xl* is the super large screen, *lg* is the large screen, *md* is the medium screen, *sm* is the small screen, *xs* is the super small screen, and span is universal for all screens, ranging from *1 to 12*",
  "用法: span='可选参数',在*zoom-col* 标签上，绑定属性, 默认: *span='12'*": "Usage: span=' Optional ', on the *zoom-col* tag, binding properties, default: *span='12'*",
  "在 *zoom-row* 标签上设置属性 *:flex=true* 可开启弹性布局, 注意在低版本IE下可能会不兼容": "Set the property *:flex=true* on the *zoom-row* TAB to enable elastic layout. Note that it may not be compatible with earlier versions of IE",
  "用法: 在*zoom-row*标签上标记*:flex='true'*": "Usage: Mark *:flex='true'* on the *zoom-row* label",
  "配置了flex弹性布局后，可以定义排列方式。可选参数: *center* *end* *space-around*": "After configuring flex elastic layout, you can define the arrangement. Optional parameters: *center* *end* *space-around*",
  "用法: 在*zoom-row* 标签上，绑定属性 *justify='属性'*": "Usage: On the *zoom-row* tag, bind attribute *justify=' attribute '*",
  "配置了flex弹性布局后，可以定义对齐方式。可选参数: *top* *middle* *bottom*": "After configuring flex elastic layout, you can define the alignment. Optional parameters: *top* *middle* *bottom*",
  "用法: 在*zoom-row* 标签上，绑定属性 *align='属性'*": "Usage: On the *zoom-row* tag, bind attribute *align=' attribute '*",
  "说明: 通过设置*Col*组件的*offset*属性来指定分栏偏移的栏数, 范围 1 ~ 12 之间": "Note: Specify the number of columns offset by setting the offset property of the Col* component, ranging from 1 to 12",
  "用法: 在*zoom-col* 标签上，绑定属性 *offset='col偏移数( 1 ~ 12 之间)'*": "Usage: On the *zoom-col* tag, the binding attribute *offset='col offset (between 1 and 12)'*",
  "zoom-ui 提供了自定义icon字体图标，只需在行内标签的 *class* 写入指定的类名即可": "zoom-ui provides custom icon font ICONS by simply writing the specified class name to the *class* of the inline label",
  "使用方法如下": "The use method is as follows",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *headerHeight=60*": "Usage: On the zoom-layout tag, bind the attribute headerHeight=60*",
  "默认为 *0* 可通过*zoom-layout* 标签上设置属性来自定义头部高度": "The default is *0* You can customize the header height by setting the property on the *zoom-layout* TAB",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *footerHeight=60*": "Usage: On zoom-layout, bind the attribute footerHeight=60*",
  "默认为 *200px* 可通过*zoom-layout* 标签上设置属性来自定义头部高度": "The default is *200px*. You can customize the header height by setting the property on the *zoom-layout* TAB",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *asideWidth=200*": "Usage: On the zoom-layout tag, bind property *asideWidth=200*",
  "默认为 *false*, 每次页面改变会返回顶部, 为*true*禁止": "It defaults to *false*, and returns to the top every time the page changes, disallowed by *true*",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *stopTop=true*": "Usage: On the zoom-layout tag, bind the property stopTop=true*",
  "默认为 *false*, 配置后在侧边栏显示收缩按钮, 点击收缩按钮可收缩侧边栏,再次点击则展开": "The default value is *false*. After configuration, the shrink button will be displayed in the sidebar. Click the shrink button to shrink the sidebar and click again to expand it",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *toggleAside*": "Usage: On the zoom-layout TAB, bind property toggleAside*",
  "调用该方法可以使zoom-layout布局元素滚动条返回顶部, 即使设置了*stopTop*属性也可以生效": "Calling this method causes the zoom-layout element scrollbar to return to the top, even if the *stopTop* attribute is set",
  "用法: 绑定ref属性, 调用方法*this.$refs[绑定属性.goTop()*": "Usage: Bind ref property, call method *this.$refs[bind property.gotop ()*",
  "对 *hover*、*active* 状态，分别有不同的颜色呈现，以 *primary* 色彩示例": "For *hover*, *active* state, there are different colors presented, with *primary* color example",
  "想在背景色基础上增加伪类效果, 可在原有基础上增加 *class='hover'* 、*class='active'*": "If you want to increase the pseudo-class effect on the basis of background color, you can increase *class='hover'*, *class='active'* on the original basis",
  "可选参数: *primary* / *info* / *warning* / *success* / *danger*": "Optional parameters: *primary* / *info* / *warning* / *success* / *danger*",
  "用法: 配置op对象, 设置 *type: '按钮状态'*, 或在组件标签上绑定*type= '按钮状态'*": "Usage: Configure the op object by setting *type: 'button state '*, or bind *type=' button state '* on the component label",
  "可选参数: *plain* / *round* / *circle*": "Optional parameter: *plain* / *round* / *circle*",
  "用法: 配置op对象, 设置 *shape: '按钮形状'*, 或在组件标签上绑定*shape='按钮形状'*": "Usage: Configure the op object by setting *shape: 'button shape '*, or bind * Shape =' button shape '* to the component label",
  "可选参数: *mini* / *small* / *medium* / *large*": "Optional parameters: *mini* / *small* / *medium* / *large*",
  "用法: 配置op对象, 设置 *size: '属性'*, 或在组件标签上绑定*size='属性'*": "Usage: Configure the op object by setting *size: 'property '*, or binding *size=' property '* to the component label",
  "默认: 1000 毫秒": "Default: 1000 milliseconds",
  "用法: *:reset-time='时间'*或者配置op对象, 设置 *resetTime: '时间'*": "Usage: *:reset-time=' time '* Or to configure the op object, set *resetTime: 'time '*",
  "可选参数: *true* / *false*, 默认 *false*": "Optional parameters: *true* / *false*. The default value is *false*",
  "用法: 配置op对象, 设置 *disabled='true'*": "Usage: To configure an op object, set *disabled='true'*",
  "可绑定点击事件": "You can bind click events",
  "zoom-ui基于vue封装的扩展指令、目前有自动聚焦、自由拖拽、提示和懒加载功能": "zoom-ui is an extended instruction based on the vue package and currently has autofocus, free drag, prompt, and lazy loading functions",
  "用户需要使用可根据规范，在DOM标签上直接通过 v-标签 的形式直接使用。": "Users need to use the DOM tag directly in the form of a v- tag according to the specification.",
  "自动聚焦指令, 仅限在非禁用状态下的 input 组件内使用, 使用后, 当用户浏览此页面时, 光标自动聚焦在该输入框中": "Autofocus command. This command can only be used in the *input* component when the user is not in the disabled state. When used, the cursor will automatically focus in the input field when the user is browsing the page",
  "自由拖拽指令, 可以在任意标签上使用, 但是该元素必须要设置属性*position: absolute;*或*position: relative;*或*position: fixed;*,使用前确保该属性已脱离文档流": "Free drag, can be used on any label, but the element must set the attribute *position: absolute; * or *position: relative; * or *position: fixed; *, ensure that the property is out of the document stream before use",
  "自由颜色指令, 可以在任意标签上使用, 绑定自己需要的色号或颜色*v-color='color'*": "Free color directive, can be used on any label, bind to their own color number or color *v-color='color'*",
  "长按指令，默认时间为2000毫秒，可以自定义时间*v-longPress:[time]='Function' || v-longPress:2000='Function'*": "Long according to the instruction, the default time of 2000 milliseconds, can customize the time * v - longPress: [time] = 'Function' | | v - longPress: 2000 = 'Function' *",
  "text: 水印文字内容，必填": "text: Watermark content. This parameter is mandatory",
  "安装zoom-ui前首先确保您的环境安装了Node.js，建议8.0以上版本": "Before installing zoom-ui, ensure that Node.js is installed in your environment. Version 8.0 or later is recommended",
  "查看Node.js版本可以通过*Win + R* 打开cmd命令行，输入命令查看Node.js版本：": "To view the Node.js version, run Win + R* to open the cmd command line and enter the following command:",
  "或者": "or",
  "安装完了Node.js后，通过Win + R 打开cmd命令行，输入命令查看Npm版本：": "After Node.js is installed, run Win + R to open the cmd command line and enter the command to view the Npm version:",
  "推荐版本 6.0 以上": "Version 6.0 or later is recommended",
  "如果NPM不是最新版本，可以手动升级": "If NPM is not the latest version, you can manually upgrade it",
  "升级命令:": "Upgrade command:",
  "因为网络环境原因无法升级成功的可以切换为淘宝镜像": "If the upgrade fails due to network environment, you can switch to Taobao image",
  "输入以下命令，切换到淘宝镜像源：": "Enter the following command to switch to the Taobao image source:",
  "全局安装yarn": "Global yarn installation",
  "yarn 的安装：": "yarn installation:",
  "yarn 淘宝源安装：": "yarn Taobao source installation:",
  "Vue 全局安装": "Vue is installed globally",
  "建议安装 2.6 以上版本的 Vue": "You are advised to install Vue 2.6 or later",
  "安装命令：": "Installation command:",
  "查看 Vue 版本:": "To view the Vue version:",
  "在要安装的 Vue 项目根目录下运行": "Run in the root directory of the Vue project you want to install",
  "使用npm安装": "Install using npm",
  "使用yarn安装": "Installing using yarn",
  "导入组件": "Import component",
  "完整引入": "Complete introduction",
  "查看版本": "View version",
  "版本升级": "Version upgrade",
  "自定义主题": "Custom theme",
  "导航宽度": "Navigation width",
  "轮播图可以自定义高度和宽度，高度默认19，宽度默认28，可自行修改。": "You can customize the height and width of the wheel casting map. The default height is 19, and the default width is 28. You can modify it by yourself.",
  "当鼠标进入轮播图时，展示左右箭头，点击可切换上一张或下一张。": "When the mouse enters the wheel cast picture, the left and right arrows are displayed. Click to switch the previous one or the next one.",
  "图片下方还提供了图片标题，和提示灯，鼠标经过提示灯也可以切换图片。": "Also provided below the picture title, and prompt light, mouse over the prompt light can also switch pictures.",
  "用法": "usage",
  "宽度": "width",
  "高度": "height",
  "卡片组件默认为块级元素, 宽度为100%可以设置边框和边框阴影": "The card component defaults to a block-level element with a width of 100% to set borders and border shadows",
  "可以在卡片组件标签中自定义内容": "You can customize the content in the card component label",
  "通过组件标签设置属性 *border='true'*开启边框, *hover-shadow='true'*鼠标经过时阴影显示": "Set the property *border='true'* border on by the component label, and *hover-shadow='true'* shadow displays when the mouse passes over it",
  "卡片边框效果, 默认*false*, 为*true*显示": "Card border effect, default *false*, is displayed as *true*",
  "用法: 在组件标签上设置*border='true'*": "Usage: Set *border='true'* on the component label",
  "卡片边框阴影, 鼠标进过显示, 默认*false*, 为*true*显示": "Card border shadow, mouse over display, default *false*, display *true*",
  "用法: 在组件标签上设置*hover-shadow='true'*": "Usage: Set *hover-shadow='true'* on the component tag",
  "边框": "border",
  "边框阴影": "Border shadow",
  "zoom-tabs组件, 需要配合zoom-tab-item组件一起使用": "The zoom-tabs component must be used together with the zoom-tab-item component",
  "可以配置自定义的标签页title和内容": "You can configure the title and content of the label page",
  "默认横排显示, 可以切换竖排显示, 靠左或者靠右显示": "Horizontal display by default, you can switch to vertical display, left or right display",
  "竖排显示": "Vertical display",
  "如果想要竖排显示, 可以在组件标签设置 *position='left'*, right就是靠右": "If you want a vertical display, you can set *position='left'* on the component TAB, and right is right",
  "可通过*title*来自定义标题, *show*属性控制默认隐藏或显示": "The default hiding or display can be controlled by the *title* custom title and *show* attributes",
  "自定义title标签": "Customize the title tag",
  "可对*title*绑定自定义html片段": "You can bind a custom html fragment to *title*",
  "标题": "title",
  "按钮群组即为按钮的集合, 组件包含按钮组件的功能": "A button group is a collection of buttons, and a component contains the functions of a button component",
  "可以绑定多个按钮为数据": "Multiple buttons can be bound as data",
  "绑定数据": "Bound data",
  "以数组对象方式绑定按钮群组的数据": "Bind the button group's data as an array object",
  "用法: 绑定op属性, 设置*data: [{...}]*绑定数据": "Usage: Bind op property, set *data: [{...}]* Bind data",
  "设置属性": "Set property",
  "zoom-ui提供的input输入框组件，可以绑定op对象，并设置常用属性。组件自带清除功能，点击输入框右边的清除按钮可清除输入内容": "input box component provided by zoom-ui that can bind op objects and set common properties. The component has a clear function. Click the Clear button on the right of the input box to clear the input content",
  "输入框类型": "Input box type",
  "占位符": "placeholder",
  "自定义icon": "Custom icon",
  "错误信息": "Error message",
  "禁止输入": "Forbid input",
  "禁用": "disable",
  "最小输入字符": "Minimum input character",
  "最大输入字符": "Maximum input character",
  "组件宽度": "Component width",
  "隐藏清除按钮": "Hide clear button",
  "验证方法": "Verification method",
  "自定义icon的点击事件": "Customize icon click events",
  "可选参数: *text* / *password*, 默认: *text*": "*text* / *password* is optional. The default value is *text*",
  "用法: *type='可选参数'*": "Usage: *type=' Optional '*",
  "用法: 配置op对象, 设置 *placeHolder='参数'*": "Usage: Configure the op object with *placeHolder=' parameter '*",
  "配置了自定义icon后, 在输入框最右边显示, 可以配合*onClick*点击事件一起使用": "After the custom icon is configured, it is displayed on the far right of the input box and can be used together with the *onClick* click event",
  "用法: 配置op对象, 设置 *IconStyle='icon类名'*": "Usage: To configure the op object, set *IconStyle='icon class name '*",
  "需要配置testing方法, 并且在方法返回*false*的情况下, 才会出现": "The testing method needs to be configured and only occurs if it returns *false*",
  "用法: 配置op对象, 设置 *errMsg='要提示用户的错误信息'*": "Usage: Configure the op object with *errMsg=' Error message to prompt user '*",
  "用法: 配置op对象, 设置 *readonly='true'*": "Usage: Configure the op object with *readonly='true'*",
  "绑定自定义Icon点击事件": "Bind a custom Icon click event",
  "用法: 配置op对象, 并设置了自定义icon后, 设置 *onClick:val => {};* val为输入框内容": "Usage: After configuring the op object and setting the custom icon, set *onClick:val => {}; * val is the content of the input box",
  "显示折叠内容": "Display collapsed content",
  "用法: 配置op对象, 设置 *type: '按钮状态'*": "Usage: To configure the op object, set *type: 'button state '*",
  "用法: *:reset-time='时间'*": "Usage: *:reset-time=' time '*",
  "用法: *size='参数'*": "Usage: *size=' parameter '*",
  "用法: *shape='可选参数'*, 默认: *plain*": "Use: *shape=' Optional '*, default: *plain*",
  "zoom-ui提供的dropdown下拉框组件，可以绑定op对象，并设置常用属性。组件自带清除功能，点击输入框右边的清除按钮可清除输入内容": "zoom- A dropdown dropdown component provided by ui that can bind op objects and set common properties. The component has a clear function. Click the Clear button on the right of the input box to clear the input content",
  "有时候下拉框数据是通过后台请求的，这就用到了动态加载数据，可以帮助开发者方便的开发": "Sometimes drop-down box data is requested through the background, which uses dynamic loading data, can help developers convenient development",
  "下拉框数据": "Drop-down data",
  "默认选中": "Default check",
  "是否多选": "Multiple selection or not",
  "动态设置数据": "Dynamic setting data",
  "zoom-ui提供了强大的分页组件, 可以配合表格组件或者其它组件一起使用": "zoom-ui provides a powerful paging component that can be used with table components or other components",
  "需要对分页组件配置op对象, 并配置相应信息": "You need to configure the op object for the paging component and configure the corresponding information",
  "分页组件还提供了多个点击事件, 来方便开发者使用": "The paging component also provides multiple click events for developer convenience",
  "基础使用": "Basic use",
  "迷你版": "mini",
  "显示迷你版分页组件": "Displays the mini paging component",
  "选择每页展示数量": "Select the number of displays per page",
  "分页模式": "Paging mode",
  "分页数据": "Paging data",
  "监听下拉数据变化的回调": "Listen for callbacks of drop-down data changes",
  "监听跳转前的回调": "Listen for callbacks before the jump",
  "监听跳转后的回调": "Listen for the callback after the jump",
  "动态设置分页数据": "Set paging data dynamically",
  "配置可供用户选择的每页展示数量, 以下拉框形式呈现": "Configure the number of displays per page that can be selected by the user, as shown in the following drop-down box",
  "用法: 配置op属性, 设置*pageSizes: [每页数量]*": "Usage: Configure the op property, set *pageSizes: [number per page]*",
  "默认*Number*, 可选参数*mini*, *Number*": "The default parameter is *Number*, and the optional parameter is *mini*, *Number*",
  "用法: 配置op属性, 设置*mode: 'mini'*": "Usage: Configure the op property, set *mode: 'mini'*",
  "以对象形式设置分页数据*pageVal*, 对象内有三个参数可设置: 总条数*total*, 当前页*curPage*, 每页展示数据*pageSize*": "Set page data *pageVal* in the form of an object, with three parameters that can be set: total number *total*, current page *curPage*, and display data per page *pageSize*",
  "用法: 配置op属性, 设置*pageVal: '对象'*": "Usage: Configure the op property to set *pageVal: 'object '*",
  "监听每页大小的下拉框数据发生改变事件, 有两个参数*val*当前页数据, *pageVal*分页对象": "Listen to the pull-down data change event of the size of each page, with two parameters *val* current page data and *pageVal* paging object",
  "用法: 配置op属性, 设置*pageSizeSkip: (val, pageVal) => {}*": "Usage: Configure the op property, set *pageSizeSkip: (val, pageVal) => {}*",
  "监听分页组件跳转事件, 有两个参数*val*当前页数据, *pageVal*分页对象": "Listens for page component jump events with two parameters *val* current page data and *pageVal* page object",
  "用法: 配置op属性, 设置*beforeSkip: (val, pageVal) => {}*": "Usage: Configure the op property, set *beforeSkip: (val, pageVal) => {}*",
  "监听分页组件跳转后事件, 有两个参数*val*当前页数据, *pageVal*分页对象": "Listens for events after a page component jump, with two parameters *val* current page data and *pageVal* page object",
  "用法: 配置op属性, 设置*skip: (val, pageVal) => {}*": "Usage: Configure the op property, set *skip: (val, pageVal) => {}*",
  "动态设置分页数据, 需要绑定*ref*来动态设置数据": "To set paging data dynamically, you need to bind *ref* to set the data dynamically",
  "用法: 标签中绑定ref, *this.$refs['page'].load(pageVal)*": "Usage: Tag bound ref, *this.$refs['page'].load(pageVal)*",
  "zoom-ui提供的search下拉框组件，可以绑定op对象，并设置常用属性。组件自带搜索功能，但是需要绑定对应的点击事件": "zoom-ui provides a search drop-down box component that can bind op objects and set common properties. The component comes with a search function, but it needs to be bound to the corresponding click event",
  "迷你下拉框": "Mini drop-down box",
  "通过配置op对象中的属性， 设置*mini: true*即可生效": "This takes effect by configuring properties in the op object and setting *mini: true*",
  "搜索下拉框数据": "Search for drop-down data",
  "迷你搜索框": "Mini search box",
  "若无配置则不显示, 可手动配置数组对象, 对象里设置value和text, text为前端展示文本, value是传给后台的值。默认展示第一个": "If there is no configuration, the array object will not be displayed. You can manually configure the array object, and set value and text in the object. text is the text displayed in the front end, and value is the value sent to the background. The first one is displayed by default",
  "可绑定自定义函数": "Custom functions can be bound",
  "用法: 配置op对象, 设置 *onClick:(val, key) => {}*; *val*为输入框内容，*key*值为搜索框的值，若未配置则为undefined": "To configure the op object, set *onClick:(val, key) => {}*; val* is the content of the input box and key* is the value of the search box (undefined if not configured)",
  "zoom-ui提供的数字框组件，可以用v-model绑定数据, 但是只能绑定Number类型数据，并且进行加或减 可以绑定op对象，并设置常用属性": "The digital box component provided by zoom-ui can bind data with v-model, but only the Number type data can be bound, and add or subtract can bind op object, and set common properties",
  "最小值": "Minimum value",
  "最大值": "Maximum value",
  "加减幅度": "Margin of addition and subtraction",
  "默认*50*, 设置用户可以输入的最大字符长度, 如果输入字符大于该长度将无法继续输入": "The default value is *50*. This parameter specifies the maximum length of a character that a user can enter",
  "zoom-ui提供的文本域组件，可以用v-model绑定数据，并且可以看到已经输入字节/最大字节。默认宽度为父元素100%，高度用户可自由拖动。可以绑定op对象，并设置常用属性": "zoom-ui provides a text field component that can bind data with a v-model and see that bytes have been entered/maximum bytes. The default width is 100% of the parent element, and the height can be dragged freely by the user. You can bind op objects and set common properties",
  "验证码组件默认生成4位数随机验证码,随机范围0~9a~Z, 使用canvas绘制, 可自定义随机数范围和id": "The verification code component generates 4-digit random verification codes by default, ranging from 0 to 9a to Z. Draw using canvas, and you can customize the random number range and id",
  "可自定义随机数范围, 也可以通过 *pool* 属性来定义验证码内容为汉字": "The random number range can be customized, and the verification code content can be defined as Chinese characters through the *pool* attribute",
  "验证码数据": "Captcha data",
  "隐藏文字": "Hidden text",
  "当前验证码值": "Current verification code value",
  "若不自定义, 则显示随机id": "If the id is not customized, a random ID is displayed",
  "用法: 直接在组件标签上绑定*id='参数'*, 或者配置op对象, 设置*id: '参数'*": "Usage: Bind *id=' parameter '* directly to the component label, or configure the op object to set *id: 'parameter '*",
  "用户自定义验证码数据范围": "User - defined verification code data range",
  "用法: 配置op对象, 设置 *pool: '数据'*": "Usage: To configure the op object, set *pool: 'data '*",
  "隐藏提示切换的文字信息, 为*true*时,可点击图片重新随机生成": "Hide the prompt to switch the text message, if it is *true*, click the picture to generate again randomly",
  "用法: 配置op对象, 设置 *hideText: 'true'*": "Usage: To configure op objects, set *hideText: 'true'*",
  "获取当前验证码的值": "Gets the value of the current verification code",
  "用法: 通过配置ref属性, 调用方法 *this.$refs[属性].testCode*": "Usage: Invoke method *this.$refs[property].testCode* by configuring the ref property",
  "默认*false*，当验证成功后为*true*，可手动修改，禁用后无法再刷新验证码": "The default value is *false*. If the verification is successful, the value is *true*. You can manually change the value",
  "默认*false*，鼠标进过时，才会显示，当设置为*true*时候，则总是显示": "Default *false*, when the mouse is in, will be displayed, when set to *true*, is always displayed",
  "用法: 配置op对象, 设置 *show='true'*": "Usage: To configure the op object, set *show='true'*",
  "在op对象中定义，该方法必须返回一个图片地址，用于显示验证码所需要的图片，每次刷新图片时候都会调用一次该方法": "Defined in the op object, this method must return an image address to display the image required for the captcha and is called every time the image is refreshed",
  "用法: 配置op对象, 在op对象里定义该方法 *RandomSrc: () => {return 图片地址}*，方法需返回一个有效的图片地址": "Usage: Configure the op object and define the method in the op object *RandomSrc: () => {return image address}*. The method needs to return a valid image address",
  "在op对象中定义，当用户验证成功后，可以在该方法中监听到，并做下一步逻辑处理": "Defined in the op object, when the user authentication is successful, you can listen in the method and do the next logical processing",
  "用法: 配置op对象, 在op对象里定义该方法 *onSuccess: () => {}*": "Usage: Configure the op object to define the method in the op object *onSuccess: () => {}*",
  "在op对象中定义，当用户验证失败后，可以在该方法中监听到，并做下一步逻辑处理": "Defined in the op object, when the user authentication fails, the method can listen and do the next logical processing",
  "用法: 配置op对象, 在op对象里定义该方法 *onFailed: () => {}*": "Usage: Configure the op object to define this method *onFailed: () => {}*",
  "zoom-ui提供的滑块验证码，使用canvas绘制，默认隐藏图片，鼠标经过时候显示。可以绑定op对象，并设置常用属性": "zoom- Slider verification code provided by ui, drawing using canvas, hide the picture by default, display when the mouse passes. You can bind op objects and set common properties",
  "禁用状态下，无法拖动文本域": "You cannot drag a text field when it is disabled",
  "禁用验证码": "Disable verification code",
  "显示验证码": "Display verification code",
  "随机图片地址": "Random picture address",
  "zoom-ui提供的滑块组件，可以用v-model绑定数值，滑块显示内容为百分比0~100%, 数据可绑定*:min*最小值和*:max*最大值": "The slider component provided by zoom-ui can be bound with v-model values. The slider display content ranges from 0 to 100%, and the data can be bound with *:min* minimum and *:max* maximum",
  "比如*:min='0'*，*:max='500'*，那么进度条10%的时候,值就是50，以此类推": "For example, *:min='0'*, *:max='500'*, then at 10% of the progress bar, the value is 50, and so on",
  "自定义颜色": "Custom color",
  "zoom-ui提供的日期选择组件": "The date selection component provided by zoom-ui, which can be bound with v-model, displays the current time by default. Click the input box and the date selection box pops up. Click the year to select the preceding and following six years, click the month to select between January and December, or click the left and right arrows to switch. You can bind op objects and set common properties",
  "滑块的最小值, 默认 *0*": "The minimum value of the slider, default *0*",
  "用法: 组件标签上设置属性 *min='0'*": "Usage: Set property *min='0'* on component label",
  "滑块的最大值, 默认 *100*": "Maximum value of the slider, default *100*",
  "用法: 组件标签上设置属性 *min='100'*": "Usage: Set property *min='100'* on component label",
  "可以自定义滑块组件颜色, 默认蓝色": "You can customize the slider component color, which defaults to blue",
  "用法: 组件标签上设置属性 * color='颜色'*": "Usage: Set property * color=' color '* on component label",
  "zoom-ui提供的弹出编辑组件，可以用v-model绑定数据，默认展示的是输入框，点击编辑状态成文本域，方便用户输入。可以绑定op对象，并设置常用属性": "The pop-up editing component provided by zoom-ui can bind data with v-model. By default, the input box is displayed. Click Edit status into text field, which is convenient for user input. You can bind op objects and set common properties",
  "禁用状态下，无法拖动和编辑": "You cannot drag or edit when disabled",
  "显示行数": "Display line count",
  "自定义宽": "Custom width",
  "初始化时间": "Initialization time",
  "组件编译完成时执行的事件": "The event that is executed when the component is compiled",
  "组件渲染完成时执行的事件": "The event that is executed when the component is finished rendering",
  "选择日期框日期后执行的事件": "Select the date box date after the execution of the event",
  "动态设置当前时间": "Set the current time dynamically",
  "attribute.vue?9a0e:45 用法: 配置op对象, 设置 *disabled='true'*": "attribute.vue? 9a0e:45 Usage: To configure an op object, set *disabled='true'*",
  "默认*false*, 为*true*则禁用输入框, 禁用状态下, 选择日期": "The default value is *false*. If it is *true*, the input box is disabled. If it is disabled, select the date",
  "默认当前日期, 可传入时间戳, 或者其它时间格式类型的数据": "Default to the current date, and you can pass in a timestamp or other time format type of data",
  "用法: 配置op对象, 设置 *dateTime='时间类型'*": "Usage: To configure the op object, set *dateTime=' time type '*",
  "用法: 配置op对象后设置回调函数, 会返回两个参数 *arr*和*time*, *arr*是日期数组(年月日周几 + 时分秒), *time*是时间": "Usage: Setting the callback function after configuring the op object returns two arguments *arr* and *time*. *arr* is the date array (year, month, day, week + hour, minute and second), *time* is the time",
  "用法: 配置op对象后设置回调函数, 返回一个参数*day*, *day*里面有个参数*flag* 用来表示是否当前月 *false*则表示不在当前月": "Usage: After configuring the op object to set the callback function, return a parameter *day*, *day* contains a parameter *flag* to indicate whether the current month *false* means not the current month",
  "可以动态设置当前时间, 需要传入时间类型数据": "The current time can be set dynamically, and time type data needs to be passed in",
  "用法: 在标签中设置自定义*ref*属性, 通过*this.$refs[自定义属性].load(日期对象)* 来动态设置当前日期": "Usage: Set the custom *ref* attribute in the tag, with *this.$refs[custom attribute].load(date object)* to dynamically set the current date",
  "禁用状态下，开启或关闭开关": "Turn on or off the switch when disabled",
  "配置组件的属性有两种方式，一种是示例中的op对象，另一种是直接将属性配置在组件标签上，如下所示：": "There are two ways to configure the properties of a component, either with the op object in the example, or by configuring the properties directly on the component label, as shown below:",
  "显示开启时的文本内容": "Displays the text content when enabled",
  "显示关闭时的文本内容": "Displays the text content when closed",
  "组件渲染时的初始状态": "The initial state of the component when rendered",
  "点击按钮前触发的回调函数": "The callback function triggered before the button is clicked",
  "点击按钮后触发的回调函数": "The callback function that is triggered when the button is clicked",
  "默认*false*, 为*true*则禁用开关, 禁用状态下, 无法开启或关闭开关": "The default value is *false*. If the value is *true*, the switch is disabled. In the disabled state, the switch cannot be turned on or off",
  "用法: 在组件标签上, 或者配置op对象, 设置 *open: '文本内容'*": "Usage: Set *open: 'text content '* on the component label, or configure the op object",
  "打开状态下, 要展示给用户看的文本内容": "In the open state, text content to be shown to the user",
  "用法: 在组件标签上, 或者配置op对象, 设置 *close: '文本内容'*": "Usage: On component labels, or configuring op objects, set *close: 'text content '*",
  "默认*close*, 为*open*则是打开状态,": "*close* by default, *open* is open,",
  "用法: 配置op对象, 设置 *status: 'open'*": "Usage: Configure the op object by setting *status: 'open'*",
  "用法: 配置op对象后设置回调函数, 会返回一个参数, 是按钮发生改变前的值": "Usage: Setting the callback function after configuring the op object returns a parameter that was the value before the button was changed",
  "用法: 配置op对象后设置回调函数, 会返回一个参数, 是按钮发生改变后的值": "Usage: Setting the callback function after configuring the op object returns a parameter that is the value of the button changed",
  "弹出后编辑框默认展示的行数, 默认为5": "The default number of lines displayed in the pop-up edit box is 5",
  "用法: 在标签上直接配置 *rows: '参数'*": "Usage: Configure *rows: 'argument '* directly on the label",
  "用法: 配置op对象, 设置 *placeHolder:'参数'*": "Usage: Configure the op object with *placeHolder:' arguments '*",
  "默认 *150px*, 可以自定义宽度": "Default *150px*, you can customize the width",
  "用法: 配置op对象, 设置 *width: '宽度'*": "Usage: To configure the op object, set *width: 'width '*",
  "监听验证码成功的回调": "Listen for a successful verification code callback",
  "监听验证码失败的回调": "Listening for a failed verification code callback",
  "当前组件需要绑定自定义*op*对象, *op*对象中定义*name*, 和*data*, 并且可以通过v-model绑定数据": "The current component needs to bind a custom *op* object with *name*, *data* defined in the *op* object, and can bind the data through the v-model",
  "单选框名称": "The name of an option box",
  "是否绑定布尔值": "Whether to bind a Boolean value",
  "数据": "data",
  "动态绑定数据": "Dynamically bound data",
  "复选框名称": "Check box name",
  "一组复选框需要绑定同一个*name*属性, 系统以此来辨别": "A set of check boxes needs to be bound to the same *name* attribute for the system to identify",
  "用法: 在组件标签上, 或者配置op对象, 设置 *close='文本内容'*": "Usage: On component labels, or configuring op objects, set *close=' text content '*",
  "以键值对的方式, 设置复选框的数据, 如 *{text: '文本内容1', value: 'value值'}*": "Set the checkbox data in key-value pairs, such as *{text: 'text content 1', value: 'value value '}*",
  "如果表单中只有一个按钮, 默认可以用回车键提交。或者点击会触发默认事件, 阻止默认事件可通过zoom-form标签中加*submit.prevent='false'*阻止默认提交事件": "If there is only one button in the form, the return key can be used by default to submit. Or clicking will trigger a default event.prevent default events by adding *submit.prevent='false'* to the zoom-form TAB",
  "高级用法": "Advanced usage",
  "*label-width为label*的宽度, 可以自定义": "*label-width Specifies the width of the label*. The value can be customized",
  "在*zoom-form*标签上加 *:inline='true'* 可以将条目变为行内元素": "Adding * to the *zoom-form* tag :inline='true'* changes the entry to an inline element",
  "在*zoom-form-item*标签上加 *:require='true'* 则为必填项, 可配合valid函数做校验": "If *:require='true'* is added to the *zoom-form-item* tag, it is mandatory and can be checked with valid function",
  "zoom-ui提供的*reset*函数可以重置表单内所有表单组件": "The *reset* function provided by zoom-ui resets all form components within the form",
  "标签名": "Tag name",
  "标签宽度": "Label width",
  "行内元素方式显示": "Inline elements are displayed",
  "必填验证": "Required verification",
  "验证功能": "Verification function",
  "重置功能": "Reset function",
  "表单条目的标签名称": "The label name of the form entry",
  "用法: *zoom-form-item*组件标签上, 绑定 *label='标签名'*": "Usage: *zoom-form-item* On component label, bind *label=' label name '*",
  "设置form表单的标签宽度": "Set the label width of the form",
  "用法: *zoom-form*组件标签上, 绑定 *label-width='100px'*": "Usage: *zoom-form* component label, binding *label-width='100px'*",
  "form表单的条目默认为块级元素, 如果需要将其变为行内元素, 可使用属性*inline*": "form Form entries default to block-level elements. If you want to change them to inline elements, you can use the attribute *inline*",
  "用法: *zoom-form*或者*zoom-form-item*组件标签上, 绑定 <span>:inline='true'/span>": "<span>:inline='true'/span> <span>:inline='true'/span>",
  "对于绑定*require*属性的条目, 在调用*valid*方法时, 优先判断是否填写, 如果有填写, 再判断是否开始*testing*方法, 如果有则调用": "For items bound with *require* attribute, when calling the *valid* method, first judge whether to fill in. If there is a fill in, then judge whether to start *testing* method, if there is a call",
  "用法: *zoom-form-item*组件标签上, 绑定 *:require='true'*": "Use: *zoom-form-item* On component tag, bind *:require='true'*",
  "用于验证form表单内所有zoom-ui的表单元素, 验证成功返回*true*否则返回*true*": "Use to validate all zoom-ui form elements in the form. Return *true* if validation succeeds or *true* if validation fails",
  "在组件标签中绑定ref属性, 然后this.$refs[绑定属性].valid() 方法直接调用": "The ref property is bound in the component tag, and then the this.$refs[binding property].valid() method is called directly",
  "用于重置form表单内所有zoom-ui的表单元素, 将其组件重置为初始值": "Used to reset all zoom-ui form elements within the form form, resetting their components to their initial values",
  "在组件标签中绑定ref属性, 然后this.$refs[绑定属性].reset() 方法直接调用": "The ref property is bound in the component label, and then the this.$refs[bind properties].reset() method is called directly",
  "上传地址": "Upload address",
  "关闭自动上传": "Disable automatic upload",
  "自定义上传": "Custom upload",
  "上传的文件类型": "Type of the uploaded file",
  "上传的文件大小": "Size of the file to be uploaded",
  "文件列表": "File list",
  "关闭进度条": "Close the progress bar",
  "上传携带参数": "Upload carry parameter",
  "文件数量": "Number of files",
  "文件删除事件": "File deletion event",
  "监听文件变化": "Listen for file changes",
  "监听上传进度": "Monitor upload progress",
  "监听上传成功的回调": "Listen for a callback for a successful upload",
  "监听上传失败的回调": "Listen for callbacks that fail to upload",
  "上传文件前回调": "Call back before uploading file",
  "上传文件结束的回调": "The callback at the end of uploading a file",
  "获取上传文本框的DOM对象": "Gets the DOM object to upload the text box to",
  "设置要上传的服务地址": "Set the address of the service to be uploaded",
  "关闭自动上传, 开启时进度条会隐藏": "The default value is *false* and the default value is *true*. Automatic uploading is disabled. The progress bar is hidden when it is enabled",
  "zoom-ui的form表单组件提供了强大的表单功能": "zoom-ui's form component provides powerful form functions. Each entry in the form defaults to a block-level element and can be changed to an in-line element. In addition, the form provides one-click validation for customizing all zoom-ui form components in the form, and one-click reset. The form element component used to reset all zoom-ui in the form.",
  "zoom-ui提供了强大的文件上传组件": "zoom-ui provides powerful file uploading components, which can be divided into three modes: list mode and thumbnail mode, which users can switch freely, and custom mode, which adopts native ajax by default and is divided into two sets, one xhr and the other fetch, which uses xhr by default. With progress bar function, the progress bar will turn green on successful upload and red on failure. If the user sets closeProgress to true to close the progress bar, then fetchSubmit will be used to upload. In addition, single file upload and multi-file upload are provided, and you can customize the size and type of single file upload",
  "用法: 配置op对象, 设置 *url: '服务地址'*": "Usage: Configure the op object by setting *url: 'Service address '*",
  "用法: 在组件标签上, 或者配置op对象, 设置 *notUpload: 'true'*": "Usage: Set notUpload: 'true'* on the component label, or on the configuration op object",
  "默认为*false*, 为*true开始*, 则隐藏UI视图, 可在组件标签中自定义DOM元素, 自定义模式下点击后自动选择文件并上传": "If the default value is *false* and the start value is *true *, the UI view is hidden. You can customize DOM elements in the component label. Click in the custom mode to automatically select files and upload them",
  "用法: 在组件标签上, 或者配置op对象, 设置 *custom: 'true'*": "Usage: Set custom: 'true'* on the component label, or on the configuration op object",
  "如  *image* *png*, 文件类型符合才会添加进上传列表": "For example, *image* *png*, the file type will be added to the upload list only if it matches the file type",
  "用法: 配置op对象, 设置 *fileType: '文件类型'*": "Usage: Configure the op object with *fileType: 'file type '*",
  "如  *50KB*, 上传文件不超过此大小才会添加上传列表": "For example, 50KB*, the upload list is added only when the file size does not exceed this size",
  "用法: 配置op对象, 设置 *fileSize: '文件大小'*": "Usage: Configure the op object with *fileSize: 'file size '*",
  "上传文件列表，无论单选还是支持多选，文件都以列表格式保存进此列表": "Upload a file list. Files are saved to the list in list format no matter if you select one or multiple options",
  "用法: 配置op对象, 设置 *fileList: []*": "Usage: To configure the op object, set *fileList: []*",
  "是否关闭进度条, 默认false 默认提交方法方法xhrSubmit, 如果设置true将使用fetchSubmit": "Whether to turn off the progress bar, default false default submit method method xhrSubmit, if set true will use fetchSubmit",
  "用法: 配置op对象, 设置 *closeProgress: true*": "Usage: Configure the op object with *closeProgress: true*",
  "上传时可追加的携带参数列表 比如token": "A list of portable parameters such as tokens that can be appended to the upload",
  "用法: 配置op对象, 设置 *params: {param1: 自定义参数1, param2: 自定义参数2 }*": "Usage: Configure the op object and set *params: {param1: user-defined parameter 1, param2: user-defined parameter 2}*",
  "默认*false*, 为*true启用多选*": "Default *false*, enable multiple selection * for *true",
  "用法: 配置op对象, 设置 *multiple: true*": "Usage: Configure the op object with *multiple: true*",
  "当类型为多选的时候, 可以设置此项限制文件个数": "When the type is multiple, you can set this parameter to limit the number of files",
  "用法: 配置op对象, 设置 *limit: 5*": "Usage: To configure the op object, set *limit: 5*",
  "每当有文件被删除时候调用": "Called whenever a file is deleted",
  "用法: 配置op对象后设置回调函数, 会返回一个参数, 记录被删除的文件": "Usage: Setting the callback function after configuring the op object returns a parameter to record the deleted file",
  "增减文件或文件状态改变时都会被调用": "Is called when a file is added or subtracted or when its state changes",
  "用法: 配置op对象后设置回调函数, 会返回一个参数, 是当前文件列表": "Usage: Setting the callback function after configuring the op object returns a list of the current files",
  "当开启进度条时, 上传文件过程中会不断触发此函数": "When the progress bar is enabled, this function is triggered continuously during file upload",
  "用法: 配置op对象后设置回调函数, 会返回两个参数, 一个是当前文件下标, 一个是进度 *onProgress: (index, progress)*": "Usage: Setting the callback function after configuring the op object returns two parameters, one is the current file index, and one is progress *onProgress: (index, progress)*",
  "某个文件上传成功就会执行该方法": "This method is executed when a file is successfully uploaded",
  "用法: 配置op对象后设置回调函数, 会返回两个参数, 一个是当前文件下标, 一个是服务器返回的结果 *onSuccess: (index, response)*": "Usage: Setting the callback function after configuring the op object will return two parameters, one is the current file index, and one is the result returned by the server *onSuccess: (index, response)*",
  "某文件上传失败就会执行该方法": "This method is executed when a file fails to be uploaded",
  "用法: 配置op对象后设置回调函数, 会返回两个参数, 一个是当前文件下标, 一个是失败的信息 *onFailed: (index, error)*": "Usage: Setting the callback function after configuring the op object will return two parameters, one is the current file index, and one is the failure information *onFailed: (index, error)*",
  "如果定义了onBefore方法且返回了false，或者文件列表为空，请求就不会发送": "If the onBefore method is defined and false is returned, or the file list is empty, the request is not sent",
  "用法: 配置op对象后设置回调函数, *onBefore: file => {}*": "Usage: Set the callback function after configuring the op object, *onBefore: file => {}*",
  "所有文件上传完毕后（无论成败）执行": "Execute after all files are uploaded (regardless of success or failure)",
  "用法: 配置op对象后设置回调函数, *result: { success: 成功数目, failed: 失败数目 }* *onFinished(result)*": "Usage: Set the callback function after configuring the op object, *result: {success: number of successes, failed: number of failures}* *onFinished(result)*",
  "用法: 设置*ref*属性, *this.$refs[属性].customUpload()* 返回input的dom对象": "Usage: Set the *ref* attribute, *this.$refs[attribute].customUpload()* returns the dom object for input",
  "一组单选框需要绑定同一个*name*属性, 系统以此来辨别": "A set of checkboxes needs to be bound to the same *name* attribute for the system to identify",
  "用法: 配置op对象, 设置 *name: '属性'*": "Usage: Configure the op object with *name: 'property '*",
  "默认*false*, 禁用状态下, 无法选择": "The default value is *false*. This parameter cannot be selected when it is disabled",
  "用法: 在组件标签上, 或者配置op对象, 设置 *disabled: true*": "Usage: Set *disabled: true* on component labels, or in configuration op objects",
  "默认*false*, 为*true*的情况下, 用户用*v-model*绑定后, 得到的值为布尔值": "If the default is *false* and is *true*, the user will get a Boolean value after binding with *v-model*",
  "以键值对的方式, 设置单选框的数据, 如 *{text: '文本内容1', value: 'value值'}*": "Set the data for the checkbox in key-value pairs, such as *{text: 'text content 1', value: 'value value '}*",
  "用法: 配置op对象, 绑定设置 *data* 属性": "Usage: Configure the op object and bind the set *data* property",
  "在组件渲染完成后, 可用此方法动态渲染数据": "After the component is rendered, you can use this method to dynamically render the data",
  "用法: *this.$refs[属性].load(arr)*, 可动态设置数据,*arr*数据形式和op中*data*相同": "*this.$refs[attribute].load(arr)*, can be dynamically set data,*arr* data form is the same as *data* in op",
  "注意：两种方式不能混用": "Note: The two methods should not be used in combination. When configuring properties with an op object, the other labels of the component will be ignored (except v-model), and there is currently no support for modifying the value of the label properties after the component is rendered, i.e. zoom-ui does not do bidirectional binding of the label properties (v-model).",
  "设置用户可输入的的最小值, 设置之后, 用户输入范围最小不得小于最小值, 也无法通过减号按钮让当前值小于最小值": "Set the minimum value that the user can input. After setting, the input range of the user must not be less than the minimum value. The minus button cannot be used to make the current value less than the minimum value",
  "用法: 配置op对象, 设置 *min: '最小值'*": "Usage: Configure the op object to set *min: 'min '*",
  "用法: 配置op对象, 设置 *min: '最大值'*": "Usage: Configure the op object, set *max: 'max '*",
  "设置用户可输入的的最大值, 设置之后, 用户输入范围最大不得大于最大值, 也无法通过减号按钮让当前值大于最大值": "Set the maximum value that can be entered by the user. After setting the value, the input range must not be larger than the maximum value. The minus button cannot be used to make the current value greater than the maximum value",
  "默认*false*, 为*true*禁止输入数值, 开启后用户无法输入但是可以通过加减按钮修改输入框里的数值": "The default value is *false* and the value is *true*. The user cannot enter the value after this function is enabled. However, the user can modify the value in the input box by adding or subtracting the button",
  "默认 *false*, 为*true*则禁用输入框, 禁用状态下, 无法输入也无法清除输入框里数值": "The default value is *false*. If it is *true*, the input box is disabled. In the disabled state, the value in the input box cannot be entered or cleared",
  "默认 *1*, 可自定义每次点击加号或减号的加减幅度, 但是加减幅度不会超过最大值和最小值": "The default is *1*. You can customize the addition or subtraction of each click of the plus or minus sign, but the addition or subtraction will not exceed the maximum and minimum values",
  "用法: 配置op对象, 设置 *space: '数字'*": "Usage: Configure the op object with *space: 'number '*",
  "可自定义占位符内容": "You can customize the placeholder content",
  "用法: 配置op对象, 设置 *placeHolder: '参数'*": "Usage: Configure the op object with *placeHolder: 'arguments '*",
  "默认为暂无数据, 可手动配置数组对象, 对象里设置*value*和*text*, *text*为前端展示文本, *value*是传给后台的值": "By default, there is no data. You can manually configure the array object. Set *value* and *text* in the object",
  "用法: 配置op对象, 设置 *data: [{value: 'xx', text: 'xxx'}]*": "Usage: configuration op object, set * data: [{value: 'xx' text: 'XXX'}] *",
  "*default*为默认展示的数据, 必须要是*data*数组里有的数据, *default*请和*value*值保持一致": "*default* is the data displayed by default. It must be the data in the *data* array. *default* must be the same as *value*",
  "用法: 配置op对象, 设置 *default: '属性'*": "Usage: Configure the op object with *default: 'properties '*",
  "需要配置*testing*方法, 并且在方法返回*false*的情况下, 才会出现": "The *testing* method needs to be configured and only occurs if the method returns *false*",
  "用法: 配置op对象, 设置 *errMsg: '要提示用户的错误信息'*": "Usage: Configure the op object with *errMsg: 'Error message to prompt the user '*",
  "默认*false*, 为*true*禁止输入内容, 开启后用户无法输入但是可以清除输入框里的内容": "The default value is *false*, and the value is *true* to disable input. After this function is enabled, the user cannot enter but can clear the content in the input box",
  "用法: 配置op对象, 设置 *readonly: 'true'*": "Usage: Configure the op object with *readonly: 'true'*",
  "默认 *false*, 为*true*则禁用输入框, 禁用状态下, 无法输入也无法清除输入框里内容": "The default value is *false*. If it is *true*, the input box is disabled. In the disabled state, the input box cannot be entered or cleared",
  "用法: 配置op对象, 设置 *disabled: 'true'*": "Usage: To configure an op object, set *disabled: 'true'*",
  "默认*false*, 为*true*则不显示清除按钮": "The default is *false*. If it is *true*, no clear button is displayed",
  "用法: 配置op对象, 设置 *hideClose: 'true'*": "Usage: Configure the op object with *hideClose: 'true'*",
  "默认*false*, 为*true*则启用多选功能, 样式为复选框": "The default value is *false*. If it is *true*, the multiple selection function is enabled. The style is a check box",
  "用法: 配置op对象, 设置 *isChecked: 'true'*": "Usage: Configure the op object by setting *isChecked: 'true'*",
  "默认*0*, 设置用户可以输入的最小字符长度, 如果输入字符小于该长度会有提示": "The default value is *0*. This parameter specifies the minimum length of a character that a user can enter. If a character is smaller than this length, a message will be displayed",
  "用法: 配置op对象, 设置 *minLength: 0*": "Usage: To configure the op object, set *minLength: 0*",
  "设置用户可以输入的最大字符长度, 如果输入字符大于该长度将无法继续输入": "This parameter specifies the maximum length of a character that a user can enter. If a character is longer than this length, the user cannot enter any more characters",
  "用法: 配置op对象, 设置 *maxLength: 50*": "Usage: To configure the op object, set *maxLength: 50*",
  "默认*270px*, 可自定义组件的宽度": "The default is *270px*. You can customize the width of the component",
  "用法: 配置op对象, 设置 *width: '100%'*": "Usage: To configure the op object, set width: '100%'*",
  "绑定自定义验证方法": "Bind a custom validation method",
  "用法: 配置op对象, 并设置了*errMsg*后, 设置 *testing:val => {};* val为输入框内容, 如果方法返回*false*则显示*errMsg*的内容": "Usage: Configure the op object and set *errMsg*, then set *testing:val => {}; * val is the content of the input box, and if the method returns *false*, the content of *errMsg* is displayed",
  "通过ref来获取当前下拉框, 再调用**load方法, 入参为数组。": "Get the current drop-down box by ref, and then call the **load method, the input parameter is array.",
  "用法: *this.$refs[属性].load(data)*": "Usage: *this.$refs[attribute].load(data)*",
  "参数传*true*则设置禁用组件, 为*false*可取消禁用": "If it is passed to *true*, the component is disabled. If it is passed to *false*, the component is disabled",
  "用法: ref属性, 设置 *this.$refs[绑定属性].setDisabled(true)*": "Usage: ref property, set *this.$refs[bind property].setdisabled (true)*",
  "设置折叠面板头部信息, 可以绑定文字或者自定义html片段": "Set the collapsible panel header information to bind text or custom html fragments",
  "用法: 组件标签上设置属性 *title='标题'*": "Usage: Set the attribute *title=' title '* on the component tag",
  "默认*false*, 设置为*true*则默认展开": "Default *false*, set to *true* to expand by default",
  "用法: 组件标签上设置属性 *show='true'*": "Usage: Set property *show='true'* on component label",
  "value显示的是当前激活的tab页索引": "value displays the index of the currently active tab page",
  "用法: 在组件Tabs标签上绑定*value='索引'*": "Usage: Bind *value=' index '* to component Tabs",
  "每个tab-item页签的名字": "The name of each tab-item tab",
  "用法: 在组件Tab-item上绑定设置*label='属性'*, 也可以通过*slot='label'*来自定义标签": "Usage: Bind the setting *label=' property '* to the Tab-item component, or customize the label with *slot='label'*",
  "为每个Tab-item组件绑定独一无二的下标, 避免更新错误": "Bind a unique subscript to each Tab-item component to avoid update errors",
  "用法: 在组件Tab-item上绑定设置*:index='索引'*": "Usage: Bind the setting *:index=' index '* to Tab-item",
  "默认*false*, 设置为*true*可以显示边框": "Default *false*, set to *true* to display borders",
  "用法: 在组件Tab-tabs上绑定设置*:border='true'*": "Usage: Bind setting *:border='true'* on component Tab-tabs",
  "切换Tab页时候就会触发该事件, 接受参数val为当前索引": "This event is triggered when the Tab page is switched, accepting the parameter val as the current index",
  "用法: 在组件Tab标签上绑定*@change='自定义监听事件'*来监听切换事件": "Usage: Bind *@change=' Custom listener event '* to the component Tab to listen for handoff events",
  "当前激活的tab页索引": "Index of the currently active tab page",
  "Tab页名称": "Tab page name",
  "Tab页键值": "Tab Page key",
  "显示边框": "Display border",
  "Tab页切换事件": "Tab page switching event",
  "决定对话框是显示还是隐藏": "Decide whether the dialog box is shown or hidden",
  "用法: 在组件标签上绑定*show='属性'*": "Usage: Bind *show=' property '* to component tags",
  "对话框的标题, 可自定义": "Dialog box title, can be customized",
  "用法: 在组件标签上绑定*title='属性'*": "Usage: Bind *title=' attribute '* to the component tag",
  "对话框组件的宽度,  默认占30%, 可自定义": "The width of the dialog component, 30% by default, can be customized",
  "用法: 在组件标签上绑定*width='宽度'*": "Usage: Bind *width=' width '* to the component label",
  "监听对话框关闭事件": "Listen to dialog box close event",
  "用法: 在组件标签上绑定*@close*事件, 用来监听弹框关闭事件": "Usage: Bind the *@close* event to the component tag to listen for the close event of the pop-up",
  "对话框状态": "Dialog box status",
  "对话框标题": "Dialog title",
  "关闭事件": "Close event",
  "轮播的图片": "A picture of the wheel cast",
  "图片自动切换间隔时间": "Picture automatic switching interval",
  "宽度, 默认是*28*, 可自定义": "Width, default is *28*, can be customized",
  "用法: 配置op对象, 设置*width: 宽度*": "Usage: To configure the op object, set *width: width *",
  "宽度, 默认是*19*, 可自定义": "Width, default is *19*, can be customized",
  "用法: 配置op对象, 设置*height: 高度*": "Usage: To configure the op object, set *height: height *",
  "配置轮播的图片, 传数组,数组里面对象,src是图片路径,title是图片标题, url是要跳转的链接,跳转方式为打开新页面": "Configure the image of the rotation, pass the array, the object in the array,src is the image path,title is the image title, url is the link to jump, jump mode is to open a new page",
  "用法: 配置op对象并设置images数组, 设置*images: []*": "Usage: Configure the op object and set the images array to *images: []*",
  "配置轮播图片切换时间的间隔, 单位是毫秒, 默认是3000毫秒": "The unit is milliseconds. The default value is 3000 milliseconds",
  "用法: 配置op对象并设置*space: 3000*": "Usage: Configure the op object and set *space: 3000*",
  "基础菜单的用法": "Basic menu usage",
  "使用npm更新命令如下:": "Use the npm update command as follows:",
  "使用 Yarn 更新:": "Use Yarn to update:",
  "在项目根目录下，通过*Win + R* 打开cmd命令行，输入命令:": "In the root directory of the project, open the cmd command line through *Win + R* and type the command:",
  "在main.js文件中全局注册，方法如下：": "Register globally in the main.js file as follows:",
  "全局导入后，可以直接通过标签使用，方法如下：": "After being imported globally, labels can be used as follows:",
  "更多使用操作请查看": "Please see more usage operations",
  "通过 *Win + R* 打开cmd命令行，输入命令:": "Open the cmd command line with Win + R* and enter the command:",
  "如果未安装可以到官网 https://nodejs.org 进行下载安装": "If it is not installed, you can download and install it from <a href='https://nodejs.org' target='_blank'>https://nodejs.org</a>",
  "subName : 表示子cookie的名称，必填": "subName: indicates the name of the child cookie. This parameter is mandatory",
  "zoom-ui基于window.cookie封装的一套可供用户极简化操作cookie的API": "zoom-ui based on window.cookie encapsulation of a set of apis for users to greatly simplify cookie operation",
  "除了对cookie进行简单的增删改查以外, 还可以对cookie设置子项, 也就是以对象方式存入cookie": "In addition to the simple addition, deletion and modification of the cookie, you can also set the cookie child items, that is, in the way of objects into the cookie",
  "该操作可以作为全局存值的一种方法": "This operation can be used as a way to store values globally",
  "textColor: 字体颜色，默认*rgba(100, 100, 100, 0.5)*": "textColor: Font color, default *rgba(100, 100, 100, 0.5)*",
  "font: 字体样式，默认*italic bold 16px Microsoft YaHei*": "font: Font style. The default value is *italic bold 16px Microsoft YaHei*",
  "tip提示, 可在任意标签上使用, 绑定tip内容, 个性化操作请看 Tip文字提示": "tip tip tips can be used on any label. Bind the Tip content. For personalized operations, see <a href='#/component/zoom-tip'>Tip text tips </a>",
  "获得一个自定义范围内的随机数/随机颜色": "Gets a random number/random color within a custom range",
  "图片懒加载, 只能对图片标签使用": "Image lazy loading, can only be used for image tags, instead of the src attribute, after the reference, the image will automatically enable lazy loading function",
  "使用canvas特性生成base64格式的图片文件": "Use the canvas feature to generate a base64 image file, add a background watermark to the specified element v-waterMarker='{text:'zoom-UI All rights reserved ',textColor:'#ff4d4f', font: '10px Microsoft YaHei'}'",
  "*this.$zoom.$rn('随机数范围')*": "Usage: call methods: * this $zoom. $rn (' scope of random number) *, random color: * this. $zoom. $rc (' random color range) *, specific usage reference: < a href = '# / SDK/random' > random number/color < / a >",
  "用法: 配置op对象, 设置 *@click='自定义事件'*": "Usage: Configure the op object by setting *@click=' Custom event '*",
  "手动加载数据": "Manual data loading",
  "带复选功能的表格": "A table with a check function",
  "表格的编辑功能": "Table editing function",
  "zoom-ui提供的表格组件, 可自由设置表格数据": "Table component provided by zoom-ui, you can freely set the table data",
  "配置数据可在组件标签中绑定op对象, 在op对象里绑定数据": "Configuration data can be bound to op objects in component labels and data in op objects",
  "组件默认索引值在第一列, 也可以自己设定隐藏索引值": "The default index value of the component is in the first column, or you can set your own hidden index value",
  "如果有按钮的话, 则加载在索引值的后面,  即第二列": "If there is a button, it is loaded after the index value, that is, the second column",
  "请点击*手动加载数据*按钮试试": "Please click the * Manually Load data * button to try it out",
  "当开启复选框时候, 调用*getData()*方法获取的是已选中数据": "When the check box is turned on, the *getData()* method is called to get the selected data",
  "表格高度": "Table height",
  "表格列宽": "Table column width",
  "隐藏索引": "Hidden index",
  "开启复选框功能": "Enable the check box function",
  "配置表头数据": "Configure the header data",
  "按钮组": "Button group",
  "列排序功能": "Column sort function",
  "tip提示": "tip tip",
  "表格数据": "Tabular data",
  "表格行点击事件": "Table row click event",
  "表格按钮点击事件": "Form button click event",
  "组件加载时的回调": "Callback when the component is loaded",
  "监听复选框状态的回调": "Listen for callbacks to check box status",
  "获取当前表格数据": "Gets the current table data",
  "设置/加载表格数据": "Set/load table data",
  "loading效果": "loading effect",
  "当设置了高度, 则对表格内容限制了高度 如果内容溢出将出现滚动条": "When height is set, the height of the table content is restricted and a scrollbar appears if the content overflows",
  "用法: 配置op属性, 设置*height: 高度*": "Usage: Configure the op property, set *height: height *",
  "在列对象内设置, 宽度为百分比, 只针对列宽": "Set in the column object, the width is a percentage, only for the column width",
  "用法: 配置op属性, 在配置了表头数据后, 在列对象中设置*width: 宽度*": "Usage: Configure the op property, after configuring the header data, set *width: width * in the column object",
  "索引值默认在表格最前边显示, 可以手动设置为*true*关闭": "Index values are displayed at the top of the table by default and can be manually set to *true* to turn off",
  "用法: 配置op属性, 设置*hideIndex: true*": "Usage: Configure the op property, set *hideIndex: true*",
  "默认*false* , 设置为*true*开启, 开启后点击表头可以全选或取消, 开启后绑定 @fullClick 函数,可以监听全选/取消的状态值变化": "The default is *false*, set to *true* to open, click on the table header to select or cancel, bind the @fullClick function after opening, you can monitor the change of status value of all select/cancel",
  "用法: 配置op属性, 设置*isChecked: true*": "Usage: Configure the op property and set *isChecked: true*",
  "表头数据为数组对象形式, 配置的表头数据里对象key值需要和表主体的值对应才能成功渲染": "The table header data is in the form of array objects, and the object key value in the configured table header data needs to correspond to the value of the table body in order to successfully render",
  "用法: 配置op属性, 设置*title: []*": "Usage: Configure the op property, set *title: []*",
  "如果需要配置按钮组, 需要在配置表头数据后, 在表头数据内配置, 一般放在最前面, 否则可能会产生BUG": "If you need to configure the button group, you need to configure the button group in the header data after configuring the header data. Generally, the button group is in the first place. Otherwise, bugs may occur",
  "排序功能针对列属性, 需要配置表头数据后在表头对象里配置, 默认*false* , 设置为*true*开启,</br>开启后在表头列上会显示上下箭头排序按钮,点击可根据索引值升序或者降序": "Sort function for column properties, need to configure the header data in the header object configuration, default *false*, set to *true* open,</br> open in the header column will display the up and down arrow sort button, click according to the index value ascending or descending order",
  "用法: 配置op属性, 在表头配置内设置*btns: []*": "Usage: Configure the op property, set *btns: []* in the header configuration",
  "tip功能默认*false* , 设置为*true*开启, 然后在要显示的列中配置": "The tip function defaults to *false*, is set to *true* on, and then configured in the column to be displayed",
  "用法: 配置op属性, 设置属性*tip: true*, 然后再到要展示tip的列对象中内设置*tip: true*": "Usage: Configure the op property, set the property *tip: true*, and then set *tip: true* in the column object where the tip is to be displayed",
  "表格内容数据 键名需要和表头配置的对应, 需要在页面渲染前配置, 如果页面渲染完成后再配置则无效": "The table content data key name must correspond to the configuration of the table header. The key name must be configured before the page is rendered. If the key name is configured after the page is rendered, the key name is invalid",
  "用法: 配置op属性, 设置*data: []*": "Usage: Configure the op property, set *data: []*",
  "方法有三个参数: *dom*为当前行dom元素 *td*当前点击单元格 *col*当前行": "The method takes three arguments: *dom* dom element for the current row *td* Current click cell *col* Current row",
  "用法: 配置op属性, 设置*onClick: (dom, td, col) => => {}*": "Usage: Configure the op property, set *onClick: (dom, td, col) => => {}*",
  "方法有两个参数: *value*为当前行数据 *index*为当前索引": "The method takes two arguments: *value* for the current row data *index* for the current index",
  "用法: 配置op属性, 在表头内的*btns*对象中设置*onClick: (value, index) => {}*": "Usage: Configure the op property, set *onClick: (value, index) => {}* in the *btns* object inside the table header",
  "组件加载时调用, 可以这时挂载数据": "Called when the component is loaded, when you can mount data",
  "用法: 配置op属性, 设置*beforeLoad: () => {}*": "Usage: Configure op properties and set *beforeLoad: () => {}*",
  "可以监听复选框状态的变化, 当选择或者取消选择时会触发该函数": "You can listen for changes in the state of the check box and trigger the function when you select or deselect it",
  "用法: 标签中绑定函数*@fullClick*可监听变化": "Usage: The binding function *@fullClick* in the tag can listen for changes",
  "可以获取当前表格内全部数据, 如果是复选框状态, 则获取的是选中的数据": "Can get all the data in the current table, if the check box status, get the selected data",
  "用法: 标签中绑定ref, * this.$refs['grid'].getData()*可调用": "Usage: Tag binding ref, * this.$refs['grid'].getdata ()* can be called",
  "可以动态设置/加载表格数据": "Table data can be set/loaded dynamically",
  "zoom-ui提供的穿梭框组件, 主要是以表格形式渲染": "zoom-ui provides the shuttle box component, which is mainly rendered in tabular form",
  "组件可以配置自定义数据, 并且实现全选/取消": "Components can be configured with custom data and select all/cancel",
  "此外组件还自带了搜索功能, 方便用户快速检索数据": "In addition, the component also has its own search function, which is convenient for users to quickly retrieve data",
  "获取选中数据": "Get selected data",
  "获取当前选中的数据": "Gets the currently selected data",
  "用法: 标签中绑定ref, * this.$refs[表格].list*可获取当前选中的数据": "Usage: Tag binding ref, * this.$refs[table].list* to get the currently selected data",
  "可以动态设置/加载表格数据, 设置后会清空之前选中的数据": "Table data can be set/loaded dynamically, and the previously selected data will be cleared after setting",
  "用法: 标签中绑定ref, * this.$refs[表格].load(数据)*可动态渲染": "Usage: Tag binding ref, * this.$refs[table].load(data)* can be dynamically rendered",
  "用法: 标签中绑定ref, * this.$refs['grid'].load(数据)*可动态渲染": "Usage: Tag binding ref, * this.$refs['grid'].load(data)* can be dynamically rendered",
  "可以开启/关闭表格内置的loading效果, 默认关闭状态, 可手动开启": "You can enable or disable the built-in loading effect of the table. The loading effect is disabled by default. You can manually enable it",
  "用法: 标签中绑定ref, * this.$refs['grid'].showLoad(true/false)*可开启或关闭": "Usage: The tag binding ref, * this.$refs['grid'].showLoad(true/false)* can be turned on or off",
  "grid.description.1": "To use the table editing feature, you need to configure the editMode property and then set the property *editable: true* in the column you want to edit to enable editing. Bind the editChange method to the tag if you need to listen for changes in the edited data",
  "grid.description.2": "zoom-ui components set properties in two ways, one is to bind property Settings in the label, the other is to configure the op object, set properties in the op object, when set the properties in the op object, the in-label style will be overwritten. The component does not currently support changing properties after the page is rendered, except for v-model. To load the table data after the page is loaded, use the built-in load method of the component.",
  "button.description.1": "For components with lots of attributes, zoom-ui provides a custom configuration panel that uses the object to be bound, op, in which you can customize attributes such as button type and button disable. When the op attribute is configured, the attributes in the tag will be overwritten.",
  "button.description.2": "The zoom-ui component sets properties in two ways, one is to bind properties in the label, the other is to set properties in the op object after configuring the op object, when the properties in the op object are set, the style in the label will be overridden. Components do not currently support changing properties after the page is rendered, except for v-models.",
  "test.iter2": "test iter"
}