{
  "test.iter": "测试文字",
  "框架风格": "框架风格",
  "导航组件": "导航组件",
  "容器组件": "容器组件",
  "表单组件": "表单组件",
  "数据组件": "数据组件",
  "验证码": "验证码",
  "提示组件": "提示组件",
  "业务组件": "业务组件",
  "其它组件": "其它组件",
  "环境准备": "环境准备",
  "组件安装": "组件安装",
  "快速上手": "快速上手",
  "组件升级": "组件升级",
  "组件使用": "组件使用",
  "SDK说明": "SDK说明",
  "内置指令": "内置指令",
  "国际化": "国际化",
  "服务请求": "服务请求",
  "Dom操作命令": "Dom操作命令",
  "内置方法": "内置方法",
  "日期格式化": "日期格式化",
  "cookie操作": "cookie操作",
  "深拷贝": "深拷贝",
  "随机数/随机颜色": "随机数/随机颜色",
  "首页": "首页",
  "环境搭建": "环境搭建",
  "组件": "组件",
  "软件开发包": "软件开发包",
  "更多": "更多",
  "搜索组件": "搜索组件",
  "企业级前端UI设计的Vue组件": "企业级前端UI设计的Vue组件",
  "企业级设计系统，追求极致体验": "企业级设计系统，追求极致体验",
  "多种前端设计方案融合": "多种前端设计方案融合",
  "开箱即用的Vue组件库": "开箱即用的Vue组件库",
  "丰富的配套SDK": "丰富的配套SDK",
  "您需要的组件都有": "您需要的组件都有",
  "为您的项目设计构建了基础组件，有助于您更快速构建出更好的产品": "为您的项目设计构建了基础组件，有助于您更快速构建出更好的产品",
  "进入组件指南": "进入组件指南",
  "请输入": "请输入",
  "zoomUI提供超多开箱即用的Vue前端组件、强大的SDK功能，让您的开发如虎添翼": "zoomUI提供超多开箱即用的Vue前端组件、强大的SDK功能，让您的开发如虎添翼",
  "遵循": "遵循",
  "开源协议": "开源协议",
  "开始使用组件": "开始使用组件",
  "地址输入有误? 尝试输入框搜索": "地址输入有误? 尝试输入框搜索",
  "您想查找什么?": "您想查找什么?",
  "给您提供建议": "给您提供建议",
  "搜索": "搜索",
  "返回上一级目录": "返回上一级目录",
  "自动续费": "自动续费",
  "按需付费": "按需付费",
  "北京": "北京",
  "上海": "上海",
  "广州": "广州",
  "深圳": "深圳",
  "唱歌": "唱歌",
  "跳舞": "跳舞",
  "音乐": "音乐",
  "运动": "运动",
  "more.description.1": "zoom-ui组件为本人个人所开发，项目从2019年开始开发，至今仍在更新，并决定于2021年3月28日开源，本人承诺：本网站内组件永久免费开源，以供各位开发者和设计师使用。",
  "more.description.2": "如果您在使用zoom-ui组件过程中有遇到BUG或者有不明白的地方，或者您对zoom-ui组件有好的建议或者意见，随时可以与本人联系。",
  "more.description.3": "对于发现的BUG或者存在的问题，可以通过下方的联系方式与本人联系, 本人会积极解决问题并及时更新组件。",
  "more.description.4": "根据市场需要，本人将不定期添加新组件或优化现有组件功能，更新内容会在本页说明。",
  "more.description.5": "zoom-ui是一款非常强大的UI组件，页面上所开放的仅为zoom-ui部分组件，主要是一些比较大众化、常用的组件。另有其它业务组件没有公开，涉及领域如商城、医疗、物流、金融等等。zoom-ui支持私人或者企业定制化组件，如果有具体的业务需求，可与本人联系，定制符合您需求的组件库或插件。",
  "more.description.6": "您如果觉得本组件好用的话，希望可以推荐给身边的人使用。如果想对zoom-ui组件提供支持的话，也可以和我联系，最后感谢您的肯定和支持！",
  "学习交流": "学习交流",
  "联系方式": "联系方式",
  "更新日志": "更新日志",
  "博客": "博客",
  "微信": "微信",
  "邮箱": "邮箱",
  "说明": "说明",
  "色彩类型": "色彩类型",
  "对于色彩类型一共有五种": "对于色彩类型一共有五种",
  "分别为": "分别为",
  "如背景色请加class": "如背景色请加class",
  "不同情况下的色彩": "不同情况下的色彩",
  "添加伪类效果": "添加伪类效果",
  "尝试着鼠标经过和点击": "尝试着鼠标经过和点击",
  "暗色调": "暗色调",
  "常用的几种暗色调如下": "常用的几种暗色调如下",
  "对于": "对于",
  "复制": "复制",
  "使用方法": "使用方法",
  "效果": "效果",
  "代码": "代码",
  "按钮": "按钮",
  "平角": "平角",
  "圆角": "圆角",
  "普通": "普通",
  "主要": "主要",
  "成功": "成功",
  "警告": "警告",
  "危险": "危险",
  "信息": "信息",
  "基本用法": "基本用法",
  "基础按钮的用法": "基础按钮的用法",
  "按钮大小": "按钮大小",
  "禁用/防抖": "禁用/防抖",
  "可指定按钮大小, 属性: size": "可指定按钮大小, 属性: size",
  "迷你": "迷你",
  "小按钮": "小按钮",
  "普通按钮": "普通按钮",
  "中等按钮": "中等按钮",
  "大按钮": "大按钮",
  "禁用x秒": "禁用{x}秒",
  "属性": "属性",
  "方法": "方法",
  "通过 *disabled* 属性设置按钮为禁用状态": "通过 *disabled* 属性设置按钮为禁用状态",
  "通过 *reset-time* 属性设置按钮防抖时间, 单位为毫秒, 默认 *1000* 毫秒": "通过 *reset-time* 属性设置按钮防抖时间, 单位为毫秒, 默认 *1000* 毫秒",
  "自定义配置属性": "自定义配置属性",
  "按钮类型": "按钮类型",
  "按钮形状": "按钮形状",
  "点击间隔": "点击间隔",
  "按钮禁用": "按钮禁用",
  "自定义点击事件": "自定义点击事件",
  "设置禁用状态": "设置禁用状态",
  "经典布局": "经典布局",
  "简单布局": "简单布局",
  "圣杯布局": "圣杯布局",
  "时尚布局": "时尚布局",
  "嵌套用法": "嵌套用法",
  "头部高度": "头部高度",
  "尾部高度": "尾部高度",
  "侧边栏宽度": "侧边栏宽度",
  "关闭返回顶部": "关闭返回顶部",
  "侧边栏收缩按钮": "侧边栏收缩按钮",
  "返回顶部": "返回顶部",
  "适配不同屏幕": "适配不同屏幕",
  "可以根据不同屏幕, 设置不同分栏大小": "可以根据不同屏幕, 设置不同分栏大小",
  "可通过col配置的属性 超大屏*xl*、 大屏*lg*、 中屏*md*、 小屏*sm*、 超小屏*xs* 来分别设置不同屏幕下分栏效果，值范围*1 ~ 12*": "可通过col配置的属性 超大屏*xl*、 大屏*lg*、 中屏*md*、 小屏*sm*、 超小屏*xs* 来分别设置不同屏幕下分栏效果，值范围*1 ~ 12*",
  "Flex布局": "Flex布局",
  "通过设置*flex*属性为true来启用*flex*布局, 并通过*justify*与*align*属性调整子元素的对齐方式": "通过设置*flex*属性为true来启用*flex*布局, 并通过*justify*与*align*属性调整子元素的对齐方式",
  "Order排序": "Order排序",
  "在启用*flex*布局时, 可通过设置*Row*组件的*order*属性, 给*Col*组件进行排序": "在启用*flex*布局时, 可通过设置*Row*组件的*order*属性, 给*Col*组件进行排序",
  "Col列偏移": "Col列偏移",
  "通过设置*Col*组件的*offset*属性来指定分栏偏移的栏数": "通过设置*Col*组件的*offset*属性来指定分栏偏移的栏数",
  "分栏属性": "分栏属性",
  "弹性布局": "弹性布局",
  "排列方式": "排列方式",
  "对齐方式": "对齐方式",
  "偏移": "偏移",
  "设置更多信息": "设置更多信息",
  "post方法演示": "post方法演示",
  "get方法演示": "get方法演示",
  "调用示例": "调用示例",
  "Network网络类": "Network网络类",
  "服务地址": "服务地址",
  "请求主体": "请求主体",
  "请求头": "请求头",
  "获取DOM元素": "获取DOM元素",
  "查找元素": "查找元素",
  "选取第n个元素": "选取第n个元素",
  "zoom-ui封装的日期时间格式化组件, 用户可以自定义要格式化的时间格式": "zoom-ui封装的日期时间格式化组件, 用户可以自定义要格式化的时间格式",
  "通过 *this.$zoom.dateformat('自定义格式化', 时间对象)* 方法调用": "通过 *this.$zoom.dateformat('自定义格式化', 时间对象)* 方法调用",
  "删除元素": "删除元素",
  "新增class": "新增class",
  "设置一条完整的cookie": "设置一条完整的cookie",
  "调用方法:": "调用方法: ",
  "参数说明:": "参数说明: ",
  "自定义分隔符": "自定义分隔符",
  "自定义样式": "自定义样式",
  "一级菜单始终显示, 并且可以配置自定义icon图标": "一级菜单始终显示, 并且可以配置自定义icon图标",
  "通过op对象配置, 左边按钮为迷你菜单 鼠标经过时候显示": "通过op对象配置, 左边按钮为迷你菜单 鼠标经过时候显示",
  "通过op对象配置 *hideTree: true* 属性来隐藏左边迷你导航菜单": "通过op对象配置 *hideTree: true* 属性来隐藏左边迷你导航菜单",
  "以数组对象形式保存, 需要配置二级或三级菜单数据, 在子对象中添加children数组": "以数组对象形式保存, 需要配置二级或三级菜单数据, 在子对象中添加children数组",
  "可以自定义导航标题": "可以自定义导航标题",
  "可以自定义导航样式": "可以自定义导航样式",
  "自定义导航一级导航标题前的icon图标": "自定义导航一级导航标题前的icon图标",
  "用法: 配置op对象, 设置 *icon: 属性*": "用法: 配置op对象, 设置 *icon: 属性*",
  "左侧迷你导航菜单, 默认显示,配置*hideTree*设置属性为*true*可隐藏": "左侧迷你导航菜单, 默认显示,配置*hideTree*设置属性为*true*可隐藏",
  "自定义组件主题颜色,可选参数: *primary*, *warning*, *info*, *success*, *danger*, 默认*success*": "自定义组件主题颜色,可选参数: *primary*, *warning*, *info*, *success*, *danger*, 默认*success*",
  "用法: 配置op对象, 设置 *theme: 属性*": "用法: 配置op对象, 设置 *theme: 属性*",
  "用法: 配置op对象并设置data数据, 在条目中绑定* onClick: '自定义事件'*": "用法: 配置op对象并设置data数据, 在条目中绑定* onClick: '自定义事件'*",
  "导航数据": "导航数据",
  "自定义icon图标": "自定义icon图标",
  "隐藏迷你菜单": "隐藏迷你菜单",
  "可以对条目自定义自定义点击事件, 在条目上绑定*onClick*回调函数": "可以对条目自定义自定义点击事件, 在条目上绑定*onClick*回调函数",
  "通过 *flag* 属性修改面包屑导航中间的分隔符": "通过 *flag* 属性修改面包屑导航中间的分隔符",
  "通过 *css* 属性来添加自定义class": "通过 *css* 属性来添加自定义class",
  "zoom-ui组件设置属性通过两种方法，一种是标签内绑定属性设置，另一种是配置op对象后，在op对象里设置属性，当设置了op对象内的属性后，标签内样式将会被覆盖。 组件暂不支持页面渲染后再改变属性，v-model除外。": "zoom-ui组件设置属性通过两种方法，一种是标签内绑定属性设置，另一种是配置op对象后，在op对象里设置属性，当设置了op对象内的属性后，标签内样式将会被覆盖。 组件暂不支持页面渲染后再改变属性，v-model除外。",
  "以数组对象形式保存": "以数组对象形式保存",
  "用法: 配置op对象, 设置*data: [{title: xx, url: xxx}]*": "用法: 配置op对象, 设置*data: [{title: xx, url: xxx}]*",
  "可以自定义跳转链接, 默认在当前窗口打开, 如果要新窗口打开可以添加属性*target: 'blank'*": "可以自定义跳转链接, 默认在当前窗口打开, 如果要新窗口打开可以添加属性*target: 'blank'*",
  "用法: 配置op对象并设置data数据, 在条目中设置*url: xx*": "用法: 配置op对象并设置data数据, 在条目中设置*url: xx*",
  "可以自定义面包屑标题": "可以自定义面包屑标题",
  "用法: 配置op对象并设置data数据, 在条目中设置*title: xx*": "用法: 配置op对象并设置data数据, 在条目中设置*title: xx*",
  "可以自定义面包屑样式": "可以自定义面包屑样式",
  "用法: 配置op对象并设置data数据, 在条目中设置*css: xx*": "用法: 配置op对象并设置data数据, 在条目中设置*css: xx*",
  "用法: 配置op对象, 设置 *flag: 属性*": "用法: 配置op对象, 设置 *flag: 属性*",
  "面包屑导航数据": "面包屑导航数据",
  "跳转链接": "跳转链接",
  "自定义标题": "自定义标题",
  "参照bootstrap，通过Row列配置": "参照bootstrap，通过Row列配置 + Col行配置，实现栅格系统，将屏幕一分为12格，可根据超大屏、大屏、中屏、小屏、超小屏等不同屏幕下，配置屏幕所占比。",
  "还可以通过flex属性实现flex布局": "还可以通过flex属性实现flex布局",
  "layout.tip.1": "layout本身没有默认宽高, 跟随父元素宽高, layout布局提供四个slot插槽, 有 *slot='header'*、 *slot='aside'*、 *slot='main'*、 *slot='footer'*， 开发者可以自由布局定义, 还可以嵌套使用",
  "layout.tip.2": "组件默认每次路由变化后, 会自动将滚动条返回顶部, 可手动关闭该功能",
  "layout.tip.3": "Layout布局的头部和尾部默认高度为 0, 侧边栏宽度默认为 0, 可以通过 layout 标签上的 *headerHeight*、 *footerHeight*、 *asideWidth*，来修改，主体部分将会自动计算",
  "对于项目中经常会用到的随机数字, 还有随机颜色": "对于项目中经常会用到的随机数字, 还有随机颜色",
  "zoom-ui封装成了API, 用户调用时候只需传入最小值和最大值, 就可以获取随机数, 每次调用都会随机": "zoom-ui封装成了API, 用户调用时候只需传入最小值和最大值, 就可以获取随机数, 每次调用都会随机",
  "方法: *this.$zoom.$rn(最小数, 最大数)*": "方法: *this.$zoom.$rn(最小数, 最大数)*",
  "方法: *this.$zoom.$rc(最小值, 最大值)*": "方法: *this.$zoom.$rc(最小值, 最大值)*",
  "随机数": "随机数",
  "随机颜色": "随机颜色",
  "手风琴模式": "手风琴模式",
  "请看屏幕右边": "请看屏幕右边",
  "自定义模式": "自定义模式",
  "自定义内容": "自定义内容",
  "点击按钮": "点击按钮",
  "解除固定": "解除固定",
  "如果op属性里未配置data属性, 则启用自定义模式": "如果op属性里未配置data属性, 则启用自定义模式",
  "浮动块导航数据": "浮动块导航数据",
  "定位": "定位",
  "用法: 配置op对象并设置data数据, 在条目中绑定* onClick='自定义事件'*": "用法: 配置op对象并设置data数据, 在条目中绑定* onClick='自定义事件'*",
  "用法: 配置op对象, 设置 *position: 'right'*": "用法: 配置op对象, 设置 *position: 'right'*",
  "浮动块定位, 默认在右边, 可选参数: *right*, *left*": "浮动块定位, 默认在右边, 可选参数: *right*, *left*",
  "可以自定义浮动块标题": "可以自定义浮动块标题",
  "用法: 配置op对象并设置data数据, 在条目中设置*text: xx*": "用法: 配置op对象并设置data数据, 在条目中设置*text: xx*",
  "float.bar.tip": "浮动框组件为固定定位, 可设置在屏幕左边或者屏幕右边。 当内容为自定义时, 有锁的按钮点击则固定在屏幕上, 再次点击隐藏鼠标经过出现。配置data数据和浮动块导航用法相同，可参考浮动块导航组件的数据绑定。",
  "通过op对象配置, 手风琴模式下, 默认展开一级菜单, 并且只针对有二级菜单的有效": "通过op对象配置, 手风琴模式下, 默认展开一级菜单, 并且只针对有二级菜单的有效",
  "动态加载数据": "动态加载数据",
  "左侧迷你导航菜单, 默认false,配置*accordion*设置属性为*true*可开启": "左侧迷你导航菜单, 默认false,配置*accordion*设置属性为*true*可开启",
  "用法: 配置op对象, 设置 *accordion: true*": "用法: 配置op对象, 设置 *accordion: true*",
  "导航宽度, 默认100%, 可自定义": "导航宽度, 默认100%, 可自定义",
  "用法: 配置op对象, 设置 *width: 宽度*": "用法: 配置op对象, 设置 *width: 宽度*",
  "如果配置了children数组, 可以添加事件load函数, load函数有两个参数, 一个是当前数据, 一个是当前下标, 可以在点击展开的时候,动态获取服务数据(需要后台服务的支持)": "如果配置了children数组, 可以添加事件load函数, load函数有两个参数, 一个是当前数据, 一个是当前下标, 可以在点击展开的时候,动态获取服务数据(需要后台服务的支持)",
  "用法: 配置op对象并设置data数据, 在条目中绑定* load: '自定义事件'*": "用法: 配置op对象并设置data数据, 在条目中绑定* load: '自定义事件'*",
  "tree-menu.tip": "title为标题, url为要跳转的地址, 如果加target: 'blank', 则会在新窗口打开, 如果需要创建二级菜单可以在对象里追加children数组, 内部写法与父级相同,可再配置三级菜单 菜单最多支持三级, 每个条目可自定义点击事件,添加onClick, 有两个参数 val是当前行数据, index当前下标. 如果配置了children数组, 可以添加事件load函数, 可以在点击展开的时候,动态获取服务数据(需要后台服务的支持)",
  "deep-clone.tip.1": "很多用户都因为引用类型对象, 无法进行深层次拷贝, 而引发不少BUG",
  "deep-clone.tip.2": "zoom-ui为了解决这个问题, 封装了一套API, 用户只需要调用并传入要拷贝的对象或者数组, API会返回给用户拷贝过后的对象/数组",
  "deep-clone.tip.3": "调用方法: *this.$zoom.clone('拷贝对象')*，深拷贝的可以是一个对象，也可以是一个数组，并返回深拷贝后的对象/数组",
  "explanation.tip1": "Software Development Kit软件开发包是zoom-ui基于vue和原生js，封装的一套函数库，其中包含一些常用的方法以及指令，已经集成到zoom-ui中，用户无需额外引入，即可直接调用。",
  "explanation.tip2": "用户也可以根据自己的习惯，对于该方法再次进行封装。在使用过程中请根据手册遵守zoom-ui的SDK使用规范，这样可以帮助大家更好的进行开发。",
  "explanation.focus": "用法: 直接在需要用到的标签上写上如: *v-focus*, 具体用法参考: <a href='#/SDK/zoom-directive'>内置扩展指令</a>",
  "name : 表示cookie的名称，必填": "name : 表示cookie的名称，必填",
  "subCookies : 表示cookie的值，必填": "subCookies : 表示cookie的值，必填",
  "expires : 表示cookie的过期时间，可以不填": "expires : 表示cookie的过期时间，可以不填",
  "domain : 表示cookie的域名，可以不填": "domain : 表示cookie的域名，可以不填",
  "path : 表示cookie的路径，可以不填": "path : 表示cookie的路径，可以不填",
  "secure : 表示cookie的安全标志，可以不填": "secure : 表示cookie的安全标志，可以不填",
  "设置一条子cookie": "设置一条子cookie",
  "value : 表示子cookie的值，必填": "value : 表示子cookie的值，必填",
  "读取一条完整cookie, 如果没传参数则默认读取所有cookie": "读取一条完整cookie, 如果没传参数则默认读取所有cookie",
  "读取一条子cookie的值": "读取一条子cookie的值",
  "删除一条完整cookie": "删除一条完整cookie",
  "删除一条子cookie": "删除一条子cookie",
  "清除当前所有cookie": "清除当前所有cookie",
  "设置文本内容": "设置文本内容",
  "直接通过*$('元素')*来获取要查找的DOM元素, 可在mounted声明周期内使用": "直接通过*$('元素')*来获取要查找的DOM元素, 可在mounted声明周期内使用",
  "链式操作": "链式操作",
  "请看以下例子": "请看以下例子",
  "查找DOM元素": "查找DOM元素",
  "用法: 调用方法*$('元素')*": "用法: 调用方法*$('元素')*",
  "查找当前元素下的某个元素": "查找当前元素下的某个元素",
  "用法: 调用方法*$('元素').find('要查找的元素')*": "用法: 调用方法*$('元素').find('要查找的元素')*",
  "选择第几个元素 下标从0开始": "选择第几个元素 下标从0开始",
  "用法: 调用方法*$('元素').eq(n)*": "用法: 调用方法*$('元素').eq(n)*",
  "可删除指定元素": "可删除指定元素",
  "用法: 调用方法*$('元素').remove('要删除的元素')*": "用法: 调用方法*$('元素').remove('要删除的元素')*",
  "要新增的class": "要新增的class",
  "用法: 调用方法*$('元素').addClass('class')*": "用法: 调用方法*$('元素').addClass('class')*",
  "设置选中标签的文本内容": "设置选中标签的文本内容",
  "用法: 调用方法*$('元素').setText('文本内容')*": "用法: 调用方法*$('元素').setText('文本内容')*",
  "服务地址, 必填": "服务地址, 必填",
  "获取当前国际化": "获取当前国际化",
  "通过调用*this.$zoom.getLanguage()*, 返回当前所有国际化信息": "通过调用*this.$zoom.getLanguage()*, 返回当前所有国际化信息",
  "设置/修改国际化": "设置/修改国际化",
  "通过调用*this.$zoom.setLanguage(lang)*, 可以设置/修改国际化, 并返回当前最新所有国际化信息": "通过调用*this.$zoom.setLanguage(lang)*, 可以设置/修改国际化, 并返回当前最新所有国际化信息",
  "因为个别浏览器以及缓存原因, 如果切换了国际化后未立马生效请刷新浏览器": "因为个别浏览器以及缓存原因, 如果切换了国际化后未立马生效请刷新浏览器",
  "使用国际化展示": "使用国际化展示",
  "确保国际化名称正常, 可使用*$zoom.$t('国际化名称')*来展示国际化": "确保国际化名称正常, 可使用*$zoom.$t('国际化名称')*来展示国际化",
  "想要在国际化中使用变量可以在设置时候使用*{变量名}*定义, 实际使用可参照如下:": "想要在国际化中使用变量可以在设置时候使用*{变量名}*定义, 实际使用可参照如下:",
  "zoom-ui内部封装的Network网络类, 是基于原生ajax进行封装, 用法和axios基本相同, 只支持异步请求。 用户可以不必再引用第三方插件, 而是可以直接通过zoom-ui内置的服务请求方法进行服务调用。": "zoom-ui内部封装的Network网络类, 是基于原生ajax进行封装, 用法和axios基本相同, 只支持异步请求。 用户可以不必再引用第三方插件, 而是可以直接通过zoom-ui内置的服务请求方法进行服务调用。",
  "可使用方法有: get/post/put/delete等": "可使用方法有: get/post/put/delete等",
  "通过调用 *this.$zoom.network.xx().then()* , 返回一个Promise对象": "通过调用 *this.$zoom.network.xx().then()* , 返回一个Promise对象",
  "如果调用方法为post/put/delete等, 可以传入请求主体 *params* , 可以以对象形式传参, 也可以依次传参": "如果调用方法为post/put/delete等, 可以传入请求主体 *params* , 可以以对象形式传参, 也可以依次传参",
  "依次传参的参数为: url、params、headers": "依次传参的参数为: url、params、headers",
  "如果要配置服务请求时间, 必须要以对象形式, 配置参数 *timeout*, 单位为毫秒, 当请求时间超过timeout则会终止服务请求。": "如果要配置服务请求时间, 必须要以对象形式, 配置参数 *timeout*, 单位为毫秒, 当请求时间超过timeout则会终止服务请求。",
  "用法: 调用方法*this.$zoom.network.get(url).then()*": "用法: 调用方法*this.$zoom.network.get(url).then()*",
  "服务请求主体, 当服务为post/put/delete时可以使用。": "服务请求主体, 当服务为post/put/delete时可以使用。",
  "服务请求头, *const headers = {'Content-Type': 'application/x-www-form-urlencoded'}*": "服务请求头, *const headers = {'Content-Type': 'application/x-www-form-urlencoded'}*",
  "用法: 调用方法*this.$zoom.network.post(url, params, headers).then()*": "用法: 调用方法*this.$zoom.network.post(url, params, headers).then()*",
  "请求指定的页面信息, 并返回实体主体。": "请求指定的页面信息, 并返回实体主体。",
  "用法: *this.$zoom.network.get(url).then()*": "用法: *this.$zoom.network.get(url).then()*",
  "向指定资源提交数据进行处理请求（例如表单或者上传文件），数据被包含在请求体中。": "向指定资源提交数据进行处理请求（例如表单或者上传文件），数据被包含在请求体中。",
  "用法: 调用方法*this.$zoom.network.post(url, params).then()*": "用法: 调用方法*this.$zoom.network.post(url, params).then()*",
  "类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头。": "类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头。",
  "用法: 调用方法*this.$zoom.network.head(url).then()*": "用法: 调用方法*this.$zoom.network.head(url).then()*",
  "从客户端向服务器传送的数据取代指定的文档内容。": "从客户端向服务器传送的数据取代指定的文档内容。",
  "用法: 调用方法*this.$zoom.network.put(url, params).then()*": "用法: 调用方法*this.$zoom.network.put(url, params).then()*",
  "从服务器删除指定的数据。": "从服务器删除指定的数据。",
  "用法: 调用方法*this.$zoom.network.delete(url, params).then()*": "用法: 调用方法*this.$zoom.network.delete(url, params).then()*",
  "允许客户端查看服务器的性能": "允许客户端查看服务器的性能",
  "用法: 调用方法*this.$zoom.network.options(url).then()*": "用法: 调用方法*this.$zoom.network.options(url).then()*",
  "回显服务器收到的请求，主要用于测试或诊断。": "回显服务器收到的请求，主要用于测试或诊断。",
  "用法: 调用方法*this.$zoom.network.trace(url).then()*": "用法: 调用方法*this.$zoom.network.trace(url).then()*",
  "SDK方法一览": "SDK方法一览",
  "内置扩展指令": "内置扩展指令",
  "DOM操作指令": "DOM操作指令",
  "参数: *focus*、*drag*、*tip*、*lazyupload*": "参数: *focus*、*drag*、*tip*、*lazyupload*",
  "先要按照指定方式导入国际化文件, zoom-ui也集成了部分国际化, 可以直接使用": "先要按照指定方式导入国际化文件, zoom-ui也集成了部分国际化, 可以直接使用",
  "用法:DOM元素内 *$zoom.$t('国际化名')*, js中使用: *this.$zoom.$t('国际化名')*, 具体用法参考: <a href='#/SDK/internationalisation'>国际化</a>": "用法:DOM元素内 *$zoom.$t('国际化名')*, js中使用: *this.$zoom.$t('国际化名')*, 具体用法参考: <a href='#/SDK/internationalisation'>国际化</a>",
  "zoom-ui内部封装的类似于*jQuery*的选择器, 操作方法*jQuery*大致相同, 虽然没有*jQuery*功能全面, 但是胜在体积小方便操作, 如果需要更复杂的操作可以引入*jQuery*": "zoom-ui内部封装的类似于*jQuery*的选择器, 操作方法*jQuery*大致相同, 虽然没有*jQuery*功能全面, 但是胜在体积小方便操作, 如果需要更复杂的操作可以引入*jQuery*",
  "用法: 使用命令: *$('元素')*或者*$Z('元素')*可以获取DOM元素, 然后再进行增删改查操作, 具体用法参考: <a href='#/SDK/dom-operation'>DOM操作指令</a>": "用法: 使用命令: *$('元素')*或者*$Z('元素')*可以获取DOM元素, 然后再进行增删改查操作, 具体用法参考: <a href='#/SDK/dom-operation'>DOM操作指令</a>",
  "传入需要格式化的日期和需要格式化的形式, 函数会自动返回开发者想要的时间格式": "传入需要格式化的日期和需要格式化的形式, 函数会自动返回开发者想要的时间格式",
  "用法: 调用方法: *this.$zoom.dateFormat('YYYY-mm-dd HH:MM', date)*, 具体用法参考: <a href='#/SDK/date-format'>日期格式化</a>": "用法: 调用方法: *this.$zoom.dateFormat('YYYY-mm-dd HH:MM', date)*, 具体用法参考: <a href='#/SDK/date-format'>日期格式化</a>",
  "zoom-ui封装的一套对于cookie增删改查等一系列的复杂操作": "zoom-ui封装的一套对于cookie增删改查等一系列的复杂操作",
  "用法: 调用方法: *this.$zoom.cookie.func*, 具体用法参考: <a href='#/SDK/cookie-operation'>cookie操作</a>": "用法: 调用方法: *this.$zoom.cookie.func*, 具体用法参考: <a href='#/SDK/cookie-operation'>cookie操作</a>",
  "可用于对复杂对象、数组、多维数组、数组对象等等进行深拷贝操作": "可用于对复杂对象、数组、多维数组、数组对象等等进行深拷贝操作",
  "用法: 调用方法: *this.$zoom.clone('拷贝对象')*, 具体用法参考: <a href='#/SDK/deep-clone'>深拷贝</a>": "用法: 调用方法: *this.$zoom.clone('拷贝对象')*, 具体用法参考: <a href='#/SDK/deep-clone'>深拷贝</a>",
  "获得一个自定义范围内的随机数/颜色": "获得一个自定义范围内的随机数/颜色",
  "您访问的页面不存在!": "您访问的页面不存在!",
  "说明: 可以在不同屏幕下适配不同尺寸大小, *xl*为超大屏, *lg*为大屏, *md*为中屏, *sm*为小屏, *xs*为超小屏, span为所有屏通用, 范围在 *1 ~ 12* 之间": "说明: 可以在不同屏幕下适配不同尺寸大小, *xl*为超大屏, *lg*为大屏, *md*为中屏, *sm*为小屏, *xs*为超小屏, span为所有屏通用, 范围在 *1 ~ 12* 之间",
  "用法: span='可选参数',在*zoom-col* 标签上，绑定属性, 默认: *span='12'*": "用法: span='可选参数',在*zoom-col* 标签上，绑定属性, 默认: *span='12'*",
  "在 *zoom-row* 标签上设置属性 *:flex=true* 可开启弹性布局, 注意在低版本IE下可能会不兼容": "在 *zoom-row* 标签上设置属性 *:flex=true* 可开启弹性布局, 注意在低版本IE下可能会不兼容",
  "用法: 在*zoom-row*标签上标记*:flex='true'*": "用法: 在*zoom-row*标签上标记*:flex='true'*",
  "配置了flex弹性布局后，可以定义排列方式。可选参数: *center* *end* *space-around*": "配置了flex弹性布局后，可以定义排列方式。可选参数: *center* *end* *space-around*",
  "用法: 在*zoom-row* 标签上，绑定属性 *justify='属性'*": "用法: 在*zoom-row* 标签上，绑定属性 *justify='属性'*",
  "配置了flex弹性布局后，可以定义对齐方式。可选参数: *top* *middle* *bottom*": "配置了flex弹性布局后，可以定义对齐方式。可选参数: *top* *middle* *bottom*",
  "用法: 在*zoom-row* 标签上，绑定属性 *align='属性'*": "用法: 在*zoom-row* 标签上，绑定属性 *align='属性'*",
  "说明: 通过设置*Col*组件的*offset*属性来指定分栏偏移的栏数, 范围 1 ~ 12 之间": "说明: 通过设置*Col*组件的*offset*属性来指定分栏偏移的栏数, 范围 1 ~ 12 之间",
  "用法: 在*zoom-col* 标签上，绑定属性 *offset='col偏移数( 1 ~ 12 之间)'*": "用法: 在*zoom-col* 标签上，绑定属性 *offset='col偏移数( 1 ~ 12 之间)'*",
  "zoom-ui 提供了自定义icon字体图标，只需在行内标签的 *class* 写入指定的类名即可": "zoom-ui 提供了自定义icon字体图标，只需在行内标签的 *class* 写入指定的类名即可",
  "使用方法如下": "使用方法如下",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *headerHeight=60*": "用法: 在*zoom-layout* 标签上, 绑定属性 *headerHeight=60*",
  "默认为 *0* 可通过*zoom-layout* 标签上设置属性来自定义头部高度": "默认为 *0* 可通过*zoom-layout* 标签上设置属性来自定义头部高度",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *footerHeight=60*": "用法: 在*zoom-layout* 标签上, 绑定属性 *footerHeight=60*",
  "默认为 *200px* 可通过*zoom-layout* 标签上设置属性来自定义头部高度": "默认为 *200px* 可通过*zoom-layout* 标签上设置属性来自定义头部高度",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *asideWidth=200*": "用法: 在*zoom-layout* 标签上, 绑定属性 *asideWidth=200*",
  "默认为 *false*, 每次页面改变会返回顶部, 为*true*禁止": "默认为 *false*, 每次页面改变会返回顶部, 为*true*禁止",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *stopTop=true*": "用法: 在*zoom-layout* 标签上, 绑定属性 *stopTop=true*",
  "默认为 *false*, 配置后在侧边栏显示收缩按钮, 点击收缩按钮可收缩侧边栏,再次点击则展开": "默认为 *false*, 配置后在侧边栏显示收缩按钮, 点击收缩按钮可收缩侧边栏,再次点击则展开",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *toggleAside*": "用法: 在*zoom-layout* 标签上, 绑定属性 *toggleAside*",
  "调用该方法可以使zoom-layout布局元素滚动条返回顶部, 即使设置了*stopTop*属性也可以生效": "调用该方法可以使zoom-layout布局元素滚动条返回顶部, 即使设置了*stopTop*属性也可以生效",
  "用法: 绑定ref属性, 调用方法*this.$refs[绑定属性.goTop()*": "用法: 绑定ref属性, 调用方法*this.$refs[绑定属性.goTop()*",
  "对 *hover*、*active* 状态，分别有不同的颜色呈现，以 *primary* 色彩示例": "对 *hover*、*active* 状态，分别有不同的颜色呈现，以 *primary* 色彩示例",
  "想在背景色基础上增加伪类效果, 可在原有基础上增加 *class='hover'* 、*class='active'*": "想在背景色基础上增加伪类效果, 可在原有基础上增加 *class='hover'* 、*class='active'*",
  "可选参数: *primary* / *info* / *warning* / *success* / *danger*": "可选参数: *primary* / *info* / *warning* / *success* / *danger*",
  "用法: 配置op对象, 设置 *type: '按钮状态'*, 或在组件标签上绑定*type= '按钮状态'*": "用法: 配置op对象, 设置 *type: '按钮状态'*, 或在组件标签上绑定*type= '按钮状态'*",
  "可选参数: *plain* / *round* / *circle*": "可选参数: *plain* / *round* / *circle*",
  "用法: 配置op对象, 设置 *shape: '按钮形状'*, 或在组件标签上绑定*shape='按钮形状'*": "用法: 配置op对象, 设置 *shape: '按钮形状'*, 或在组件标签上绑定*shape='按钮形状'*",
  "可选参数: *mini* / *small* / *medium* / *large*": "可选参数: *mini* / *small* / *medium* / *large*",
  "用法: 配置op对象, 设置 *size: '属性'*, 或在组件标签上绑定*size='属性'*": "用法: 配置op对象, 设置 *size: '属性'*, 或在组件标签上绑定*size='属性'*",
  "默认: 1000 毫秒": "默认: 1000 毫秒",
  "用法: *:reset-time='时间'*或者配置op对象, 设置 *resetTime: '时间'*": "用法: *:reset-time='时间'*或者配置op对象, 设置 *resetTime: '时间'*",
  "可选参数: *true* / *false*, 默认 *false*": "可选参数: *true* / *false*, 默认 *false*",
  "用法: 配置op对象, 设置 *disabled='true'*": "用法: 配置op对象, 设置 *disabled='true'*",
  "可绑定点击事件": "可绑定点击事件",
  "zoom-ui基于vue封装的扩展指令、目前有自动聚焦、自由拖拽、提示和懒加载功能": "zoom-ui基于vue封装的扩展指令、目前有自动聚焦、自由拖拽、提示和懒加载功能",
  "用户需要使用可根据规范，在DOM标签上直接通过 v-标签 的形式直接使用。": "用户需要使用可根据规范，在DOM标签上直接通过 v-标签 的形式直接使用。",
  "自动聚焦指令, 仅限在非禁用状态下的 input 组件内使用, 使用后, 当用户浏览此页面时, 光标自动聚焦在该输入框中": "自动聚焦指令, 仅限在非禁用状态下的 *input* 组件内使用, 使用后, 当用户浏览此页面时, 光标自动聚焦在该输入框中",
  "自由拖拽指令, 可以在任意标签上使用, 但是该元素必须要设置属性*position: absolute;*或*position: relative;*或*position: fixed;*,使用前确保该属性已脱离文档流": "自由拖拽指令, 可以在任意标签上使用, 但是该元素必须要设置属性*position: absolute;*或*position: relative;*或*position: fixed;*,使用前确保该属性已脱离文档流",
  "自由颜色指令, 可以在任意标签上使用, 绑定自己需要的色号或颜色*v-color='color'*": "自由颜色指令, 可以在任意标签上使用, 绑定自己需要的色号或颜色*v-color='color'*",
  "长按指令，默认时间为2000毫秒，可以自定义时间*v-longPress:[time]='Function' || v-longPress:2000='Function'*": "长按指令，默认时间为2000毫秒，可以自定义时间*v-longPress:[time]='Function' || v-longPress:2000='Function'*",
  "text: 水印文字内容，必填": "text: 水印文字内容，必填",
  "安装zoom-ui前首先确保您的环境安装了Node.js，建议8.0以上版本": "安装zoom-ui前首先确保您的环境安装了Node.js，建议8.0以上版本",
  "查看Node.js版本可以通过*Win + R* 打开cmd命令行，输入命令查看Node.js版本：": "查看Node.js版本可以通过*Win + R* 打开cmd命令行，输入命令查看Node.js版本：",
  "或者": "或者",
  "安装完了Node.js后，通过Win + R 打开cmd命令行，输入命令查看Npm版本：": "安装完了Node.js后，通过Win + R 打开cmd命令行，输入命令查看Npm版本：",
  "推荐版本 6.0 以上": "推荐版本 6.0 以上",
  "如果NPM不是最新版本，可以手动升级": "如果NPM不是最新版本，可以手动升级",
  "升级命令:": "升级命令:",
  "因为网络环境原因无法升级成功的可以切换为淘宝镜像": "因为网络环境原因无法升级成功的可以切换为淘宝镜像",
  "输入以下命令，切换到淘宝镜像源：": "输入以下命令，切换到淘宝镜像源：",
  "全局安装yarn": "全局安装yarn",
  "yarn 的安装：": "yarn 的安装：",
  "yarn 淘宝源安装：": "yarn 淘宝源安装：",
  "Vue 全局安装": "Vue 全局安装",
  "建议安装 2.6 以上版本的 Vue": "建议安装 2.6 以上版本的 Vue",
  "安装命令：": "安装命令：",
  "查看 Vue 版本:": "查看 Vue 版本:",
  "在要安装的 Vue 项目根目录下运行": "在要安装的 Vue 项目根目录下运行",
  "使用npm安装": "使用npm安装",
  "使用yarn安装": "使用yarn安装",
  "导入组件": "导入组件",
  "完整引入": "完整引入",
  "查看版本": "查看版本",
  "版本升级": "版本升级",
  "自定义主题": "自定义主题",
  "导航宽度": "导航宽度",
  "轮播图可以自定义高度和宽度，高度默认19，宽度默认28，可自行修改。": "轮播图可以自定义高度和宽度，高度默认19，宽度默认28，可自行修改。",
  "当鼠标进入轮播图时，展示左右箭头，点击可切换上一张或下一张。": "当鼠标进入轮播图时，展示左右箭头，点击可切换上一张或下一张。",
  "图片下方还提供了图片标题，和提示灯，鼠标经过提示灯也可以切换图片。": "图片下方还提供了图片标题，和提示灯，鼠标经过提示灯也可以切换图片。",
  "用法": "用法",
  "宽度": "宽度",
  "高度": "高度",
  "卡片组件默认为块级元素, 宽度为100%可以设置边框和边框阴影": "卡片组件默认为块级元素, 宽度为100%可以设置边框和边框阴影",
  "可以在卡片组件标签中自定义内容": "可以在卡片组件标签中自定义内容",
  "通过组件标签设置属性 *border='true'*开启边框, *hover-shadow='true'*鼠标经过时阴影显示": "通过组件标签设置属性 *border='true'*开启边框, *hover-shadow='true'*鼠标经过时阴影显示",
  "卡片边框效果, 默认*false*, 为*true*显示": "卡片边框效果, 默认*false*, 为*true*显示",
  "用法: 在组件标签上设置*border='true'*": "用法: 在组件标签上设置*border='true'*",
  "卡片边框阴影, 鼠标进过显示, 默认*false*, 为*true*显示": "卡片边框阴影, 鼠标进过显示, 默认*false*, 为*true*显示",
  "用法: 在组件标签上设置*hover-shadow='true'*": "用法: 在组件标签上设置*hover-shadow='true'*",
  "边框": "边框",
  "边框阴影": "边框阴影",
  "zoom-tabs组件, 需要配合zoom-tab-item组件一起使用": "zoom-tabs组件, 需要配合zoom-tab-item组件一起使用",
  "可以配置自定义的标签页title和内容": "可以配置自定义的标签页title和内容",
  "默认横排显示, 可以切换竖排显示, 靠左或者靠右显示": "默认横排显示, 可以切换竖排显示, 靠左或者靠右显示",
  "竖排显示": "竖排显示",
  "如果想要竖排显示, 可以在组件标签设置 *position='left'*, right就是靠右": "如果想要竖排显示, 可以在组件标签设置 *position='left'*, right就是靠右",
  "可通过*title*来自定义标题, *show*属性控制默认隐藏或显示": "可通过*title*来自定义标题, *show*属性控制默认隐藏或显示",
  "自定义title标签": "自定义title标签",
  "可对*title*绑定自定义html片段": "可对*title*绑定自定义html片段",
  "标题": "标题",
  "按钮群组即为按钮的集合, 组件包含按钮组件的功能": "按钮群组即为按钮的集合, 组件包含按钮组件的功能",
  "可以绑定多个按钮为数据": "可以绑定多个按钮为数据",
  "绑定数据": "绑定数据",
  "以数组对象方式绑定按钮群组的数据": "以数组对象方式绑定按钮群组的数据",
  "用法: 绑定op属性, 设置*data: [{...}]*绑定数据": "用法: 绑定op属性, 设置*data: [{...}]*绑定数据",
  "设置属性": "设置属性",
  "zoom-ui提供的input输入框组件，可以绑定op对象，并设置常用属性。组件自带清除功能，点击输入框右边的清除按钮可清除输入内容": "zoom-ui提供的input输入框组件，可以绑定op对象，并设置常用属性。组件自带清除功能，点击输入框右边的清除按钮可清除输入内容",
  "输入框类型": "输入框类型",
  "占位符": "占位符",
  "自定义icon": "自定义icon",
  "错误信息": "错误信息",
  "禁止输入": "禁止输入",
  "禁用": "禁用",
  "最小输入字符": "最小输入字符",
  "最大输入字符": "最大输入字符",
  "组件宽度": "组件宽度",
  "隐藏清除按钮": "隐藏清除按钮",
  "验证方法": "验证方法",
  "自定义icon的点击事件": "自定义icon的点击事件",
  "可选参数: *text* / *password*, 默认: *text*": "可选参数: *text* / *password*, 默认: *text*",
  "用法: *type='可选参数'*": "用法: *type='可选参数'*",
  "用法: 配置op对象, 设置 *placeHolder='参数'*": "用法: 配置op对象, 设置 *placeHolder='参数'*",
  "配置了自定义icon后, 在输入框最右边显示, 可以配合*onClick*点击事件一起使用": "配置了自定义icon后, 在输入框最右边显示, 可以配合*onClick*点击事件一起使用",
  "用法: 配置op对象, 设置 *IconStyle='icon类名'*": "用法: 配置op对象, 设置 *IconStyle='icon类名'*",
  "需要配置testing方法, 并且在方法返回*false*的情况下, 才会出现": "需要配置testing方法, 并且在方法返回*false*的情况下, 才会出现",
  "用法: 配置op对象, 设置 *errMsg='要提示用户的错误信息'*": "用法: 配置op对象, 设置 *errMsg='要提示用户的错误信息'*",
  "用法: 配置op对象, 设置 *readonly='true'*": "用法: 配置op对象, 设置 *readonly='true'*",
  "绑定自定义Icon点击事件": "绑定自定义Icon点击事件",
  "用法: 配置op对象, 并设置了自定义icon后, 设置 *onClick:val => {};* val为输入框内容": "用法: 配置op对象, 并设置了自定义icon后, 设置 *onClick:val => {};* val为输入框内容",
  "显示折叠内容": "显示折叠内容",
  "用法: 配置op对象, 设置 *type: '按钮状态'*": "用法: 配置op对象, 设置 *type: '按钮状态'*",
  "用法: *:reset-time='时间'*": "用法: *:reset-time='时间'*",
  "用法: *size='参数'*": "用法: *size='参数'*",
  "用法: *shape='可选参数'*, 默认: *plain*": "用法: *shape='可选参数'*, 默认: *plain*",
  "zoom-ui提供的dropdown下拉框组件，可以绑定op对象，并设置常用属性。组件自带清除功能，点击输入框右边的清除按钮可清除输入内容": "zoom-ui提供的dropdown下拉框组件，可以绑定op对象，并设置常用属性。组件自带清除功能，点击输入框右边的清除按钮可清除输入内容",
  "有时候下拉框数据是通过后台请求的，这就用到了动态加载数据，可以帮助开发者方便的开发": "有时候下拉框数据是通过后台请求的，这就用到了动态加载数据，可以帮助开发者方便的开发",
  "下拉框数据": "下拉框数据",
  "默认选中": "默认选中",
  "是否多选": "是否多选",
  "动态设置数据": "动态设置数据",
  "zoom-ui提供的search下拉框组件，可以绑定op对象，并设置常用属性。组件自带搜索功能，但是需要绑定对应的点击事件": "zoom-ui提供的search下拉框组件，可以绑定op对象，并设置常用属性。组件自带搜索功能，但是需要绑定对应的点击事件",
  "迷你下拉框": "迷你下拉框",
  "通过配置op对象中的属性， 设置*mini: true*即可生效": "通过配置op对象中的属性， 设置*mini: true*即可生效",
  "搜索下拉框数据": "搜索下拉框数据",
  "迷你搜索框": "迷你搜索框",
  "若无配置则不显示, 可手动配置数组对象, 对象里设置value和text, text为前端展示文本, value是传给后台的值。默认展示第一个": "若无配置则不显示, 可手动配置数组对象, 对象里设置value和text, text为前端展示文本, value是传给后台的值。默认展示第一个",
  "可绑定自定义函数": "可绑定自定义函数",
  "用法: 配置op对象, 设置 *onClick:(val, key) => {}*; *val*为输入框内容，*key*值为搜索框的值，若未配置则为undefined": "用法: 配置op对象, 设置 *onClick:(val, key) => {}*; *val*为输入框内容，*key*值为搜索框的值，若未配置则为undefined",
  "zoom-ui提供的数字框组件，可以用v-model绑定数据, 但是只能绑定Number类型数据，并且进行加或减 可以绑定op对象，并设置常用属性": "zoom-ui提供的数字框组件，可以用v-model绑定数据, 但是只能绑定Number类型数据，并且进行加或减 可以绑定op对象，并设置常用属性",
  "最小值": "最小值",
  "最大值": "最大值",
  "加减幅度": "加减幅度",
  "默认*50*, 设置用户可以输入的最大字符长度, 如果输入字符大于该长度将无法继续输入": "默认*50*, 设置用户可以输入的最大字符长度, 如果输入字符大于该长度将无法继续输入",
  "zoom-ui提供的文本域组件，可以用v-model绑定数据，并且可以看到已经输入字节/最大字节。默认宽度为父元素100%，高度用户可自由拖动。可以绑定op对象，并设置常用属性": "zoom-ui提供的文本域组件，可以用v-model绑定数据，并且可以看到已经输入字节/最大字节。默认宽度为父元素100%，高度用户可自由拖动。可以绑定op对象，并设置常用属性",
  "验证码组件默认生成4位数随机验证码,随机范围0~9a~Z, 使用canvas绘制, 可自定义随机数范围和id": "验证码组件默认生成4位数随机验证码,随机范围0~9a~Z, 使用canvas绘制, 可自定义随机数范围和id",
  "可自定义随机数范围, 也可以通过 *pool* 属性来定义验证码内容为汉字": "可自定义随机数范围, 也可以通过 *pool* 属性来定义验证码内容为汉字",
  "验证码数据": "验证码数据",
  "隐藏文字": "隐藏文字",
  "当前验证码值": "当前验证码值",
  "若不自定义, 则显示随机id": "若不自定义, 则显示随机id",
  "用法: 直接在组件标签上绑定*id='参数'*, 或者配置op对象, 设置*id: '参数'*": "用法: 直接在组件标签上绑定*id='参数'*, 或者配置op对象, 设置*id: '参数'*",
  "用户自定义验证码数据范围": "用户自定义验证码数据范围",
  "用法: 配置op对象, 设置 *pool: '数据'*": "用法: 配置op对象, 设置 *pool: '数据'*",
  "隐藏提示切换的文字信息, 为*true*时,可点击图片重新随机生成": "隐藏提示切换的文字信息, 为*true*时,可点击图片重新随机生成",
  "用法: 配置op对象, 设置 *hideText: 'true'*": "用法: 配置op对象, 设置 *hideText: 'true'*",
  "获取当前验证码的值": "获取当前验证码的值",
  "用法: 通过配置ref属性, 调用方法 *this.$refs[属性].testCode*": "用法: 通过配置ref属性, 调用方法 *this.$refs[属性].testCode*",
  "默认*false*，当验证成功后为*true*，可手动修改，禁用后无法再刷新验证码": "默认*false*，当验证成功后为*true*，可手动修改，禁用后无法再刷新验证码",
  "默认*false*，鼠标进过时，才会显示，当设置为*true*时候，则总是显示": "默认*false*，鼠标进过时，才会显示，当设置为*true*时候，则总是显示",
  "用法: 配置op对象, 设置 *show='true'*": "用法: 配置op对象, 设置 *show='true'*",
  "在op对象中定义，该方法必须返回一个图片地址，用于显示验证码所需要的图片，每次刷新图片时候都会调用一次该方法": "在op对象中定义，该方法必须返回一个图片地址，用于显示验证码所需要的图片，每次刷新图片时候都会调用一次该方法",
  "用法: 配置op对象, 在op对象里定义该方法 *RandomSrc: () => {return 图片地址}*，方法需返回一个有效的图片地址": "用法: 配置op对象, 在op对象里定义该方法 *RandomSrc: () => {return 图片地址}*，方法需返回一个有效的图片地址",
  "在op对象中定义，当用户验证成功后，可以在该方法中监听到，并做下一步逻辑处理": "在op对象中定义，当用户验证成功后，可以在该方法中监听到，并做下一步逻辑处理",
  "用法: 配置op对象, 在op对象里定义该方法 *onSuccess: () => {}*": "用法: 配置op对象, 在op对象里定义该方法 *onSuccess: () => {}*",
  "在op对象中定义，当用户验证失败后，可以在该方法中监听到，并做下一步逻辑处理": "在op对象中定义，当用户验证失败后，可以在该方法中监听到，并做下一步逻辑处理",
  "用法: 配置op对象, 在op对象里定义该方法 *onFailed: () => {}*": "用法: 配置op对象, 在op对象里定义该方法 *onFailed: () => {}*",
  "zoom-ui提供的滑块验证码，使用canvas绘制，默认隐藏图片，鼠标经过时候显示。可以绑定op对象，并设置常用属性": "zoom-ui提供的滑块验证码，使用canvas绘制，默认隐藏图片，鼠标经过时候显示。可以绑定op对象，并设置常用属性",
  "禁用状态下，无法拖动文本域": "禁用状态下，无法拖动文本域",
  "禁用验证码": "禁用验证码",
  "显示验证码": "显示验证码",
  "随机图片地址": "随机图片地址",
  "zoom-ui提供的滑块组件，可以用v-model绑定数值，滑块显示内容为百分比0~100%, 数据可绑定*:min*最小值和*:max*最大值": "zoom-ui提供的滑块组件，可以用v-model绑定数值，滑块显示内容为百分比0~100%, 数据可绑定*:min*最小值和*:max*最大值",
  "比如*:min='0'*，*:max='500'*，那么进度条10%的时候,值就是50，以此类推": "比如*:min='0'*，*:max='500'*，那么进度条10%的时候,值就是50，以此类推",
  "自定义颜色": "自定义颜色",
  "zoom-ui提供的日期选择组件": "zoom-ui提供的日期选择组件，组件可以用v-model绑定,默认显示当前时间, 点击输入框,弹出日期选择框, 点击年份, 可选择前后六年时间,点击月份 可在1~12月份之间选择,也可以点击左右箭头切换。可以绑定op对象，并设置常用属性",
  "滑块的最小值, 默认 *0*": "滑块的最小值, 默认 *0*",
  "用法: 组件标签上设置属性 *min='0'*": "用法: 组件标签上设置属性 *min='0'*",
  "滑块的最大值, 默认 *100*": "滑块的最大值, 默认 *100*",
  "用法: 组件标签上设置属性 *min='100'*": "用法: 组件标签上设置属性 *min='100'*",
  "可以自定义滑块组件颜色, 默认蓝色": "可以自定义滑块组件颜色, 默认蓝色",
  "用法: 组件标签上设置属性 * color='颜色'*": "用法: 组件标签上设置属性 * color='颜色'*",
  "zoom-ui提供的弹出编辑组件，可以用v-model绑定数据，默认展示的是输入框，点击编辑状态成文本域，方便用户输入。可以绑定op对象，并设置常用属性": "zoom-ui提供的弹出编辑组件，可以用v-model绑定数据，默认展示的是输入框，点击编辑状态成文本域，方便用户输入。可以绑定op对象，并设置常用属性",
  "禁用状态下，无法拖动和编辑": "禁用状态下，无法拖动和编辑",
  "显示行数": "显示行数",
  "自定义宽": "自定义宽",
  "初始化时间": "初始化时间",
  "组件编译完成时执行的事件": "组件编译完成时执行的事件",
  "组件渲染完成时执行的事件": "组件渲染完成时执行的事件",
  "选择日期框日期后执行的事件": "选择日期框日期后执行的事件",
  "动态设置当前时间": "动态设置当前时间",
  "attribute.vue?9a0e:45 用法: 配置op对象, 设置 *disabled='true'*": "attribute.vue?9a0e:45 用法: 配置op对象, 设置 *disabled='true'*",
  "默认*false*, 为*true*则禁用输入框, 禁用状态下, 选择日期": "默认*false*, 为*true*则禁用输入框, 禁用状态下, 选择日期",
  "默认当前日期, 可传入时间戳, 或者其它时间格式类型的数据": "默认当前日期, 可传入时间戳, 或者其它时间格式类型的数据",
  "用法: 配置op对象, 设置 *dateTime='时间类型'*": "用法: 配置op对象, 设置 *dateTime='时间类型'*",
  "用法: 配置op对象后设置回调函数, 会返回两个参数 *arr*和*time*, *arr*是日期数组(年月日周几 + 时分秒), *time*是时间": "用法: 配置op对象后设置回调函数, 会返回两个参数 *arr*和*time*, *arr*是日期数组(年月日周几 + 时分秒), *time*是时间",
  "用法: 配置op对象后设置回调函数, 返回一个参数*day*, *day*里面有个参数*flag* 用来表示是否当前月 *false*则表示不在当前月": "用法: 配置op对象后设置回调函数, 返回一个参数*day*, *day*里面有个参数*flag* 用来表示是否当前月 *false*则表示不在当前月",
  "可以动态设置当前时间, 需要传入时间类型数据": "可以动态设置当前时间, 需要传入时间类型数据",
  "用法: 在标签中设置自定义*ref*属性, 通过*this.$refs[自定义属性].load(日期对象)* 来动态设置当前日期": "用法: 在标签中设置自定义*ref*属性, 通过*this.$refs[自定义属性].load(日期对象)* 来动态设置当前日期",
  "禁用状态下，开启或关闭开关": "禁用状态下，开启或关闭开关",
  "配置组件的属性有两种方式，一种是示例中的op对象，另一种是直接将属性配置在组件标签上，如下所示：": "配置组件的属性有两种方式，一种是示例中的op对象，另一种是直接将属性配置在组件标签上，如下所示：",
  "显示开启时的文本内容": "显示开启时的文本内容",
  "显示关闭时的文本内容": "显示关闭时的文本内容",
  "组件渲染时的初始状态": "组件渲染时的初始状态",
  "点击按钮前触发的回调函数": "点击按钮前触发的回调函数",
  "点击按钮后触发的回调函数": "点击按钮后触发的回调函数",
  "默认*false*, 为*true*则禁用开关, 禁用状态下, 无法开启或关闭开关": "默认*false*, 为*true*则禁用开关, 禁用状态下, 无法开启或关闭开关",
  "用法: 在组件标签上, 或者配置op对象, 设置 *open: '文本内容'*": "用法: 在组件标签上, 或者配置op对象, 设置 *open: '文本内容'*",
  "打开状态下, 要展示给用户看的文本内容": "打开状态下, 要展示给用户看的文本内容",
  "用法: 在组件标签上, 或者配置op对象, 设置 *close: '文本内容'*": "用法: 在组件标签上, 或者配置op对象, 设置 *close: '文本内容'*",
  "默认*close*, 为*open*则是打开状态,": "默认*close*, 为*open*则是打开状态,",
  "用法: 配置op对象, 设置 *status: 'open'*": "用法: 配置op对象, 设置 *status: 'open'*",
  "用法: 配置op对象后设置回调函数, 会返回一个参数, 是按钮发生改变前的值": "用法: 配置op对象后设置回调函数, 会返回一个参数, 是按钮发生改变前的值",
  "用法: 配置op对象后设置回调函数, 会返回一个参数, 是按钮发生改变后的值": "用法: 配置op对象后设置回调函数, 会返回一个参数, 是按钮发生改变后的值",
  "弹出后编辑框默认展示的行数, 默认为5": "弹出后编辑框默认展示的行数, 默认为5",
  "用法: 在标签上直接配置 *rows: '参数'*": "用法: 在标签上直接配置 *rows: '参数'*",
  "用法: 配置op对象, 设置 *placeHolder:'参数'*": "用法: 配置op对象, 设置 *placeHolder:'参数'*",
  "默认 *150px*, 可以自定义宽度": "默认 *150px*, 可以自定义宽度",
  "用法: 配置op对象, 设置 *width: '宽度'*": "用法: 配置op对象, 设置 *width: '宽度'*",
  "监听验证码成功的回调": "监听验证码成功的回调",
  "监听验证码失败的回调": "监听验证码失败的回调",
  "当前组件需要绑定自定义*op*对象, *op*对象中定义*name*, 和*data*, 并且可以通过v-model绑定数据": "当前组件需要绑定自定义*op*对象, *op*对象中定义*name*, 和*data*, 并且可以通过v-model绑定数据",
  "单选框名称": "单选框名称",
  "是否绑定布尔值": "是否绑定布尔值",
  "数据": "数据",
  "动态绑定数据": "动态绑定数据",
  "复选框名称": "复选框名称",
  "一组复选框需要绑定同一个*name*属性, 系统以此来辨别": "一组复选框需要绑定同一个*name*属性, 系统以此来辨别",
  "用法: 在组件标签上, 或者配置op对象, 设置 *close='文本内容'*": "用法: 在组件标签上, 或者配置op对象, 设置 *close='文本内容'*",
  "以键值对的方式, 设置复选框的数据, 如 *{text: '文本内容1', value: 'value值'}*": "以键值对的方式, 设置复选框的数据, 如 *{text: '文本内容1', value: 'value值'}*",
  "如果表单中只有一个按钮, 默认可以用回车键提交。或者点击会触发默认事件, 阻止默认事件可通过zoom-form标签中加*submit.prevent='false'*阻止默认提交事件": "如果表单中只有一个按钮, 默认可以用回车键提交。或者点击会触发默认事件, 阻止默认事件可通过zoom-form标签中加*submit.prevent='false'*阻止默认提交事件",
  "高级用法": "高级用法",
  "*label-width为label*的宽度, 可以自定义": "*label-width为label*的宽度, 可以自定义",
  "在*zoom-form*标签上加 *:inline='true'* 可以将条目变为行内元素": "在*zoom-form*标签上加 *:inline='true'* 可以将条目变为行内元素",
  "在*zoom-form-item*标签上加 *:require='true'* 则为必填项, 可配合valid函数做校验": "在*zoom-form-item*标签上加 *:require='true'* 则为必填项, 可配合valid函数做校验",
  "zoom-ui提供的*reset*函数可以重置表单内所有表单组件": "zoom-ui提供的*reset*函数可以重置表单内所有表单组件",
  "标签名": "标签名",
  "标签宽度": "标签宽度",
  "行内元素方式显示": "行内元素方式显示",
  "必填验证": "必填验证",
  "验证功能": "验证功能",
  "重置功能": "重置功能",
  "表单条目的标签名称": "表单条目的标签名称",
  "用法: *zoom-form-item*组件标签上, 绑定 *label='标签名'*": "用法: *zoom-form-item*组件标签上, 绑定 *label='标签名'*",
  "设置form表单的标签宽度": "设置form表单的标签宽度",
  "用法: *zoom-form*组件标签上, 绑定 *label-width='100px'*": "用法: *zoom-form*组件标签上, 绑定 *label-width='100px'*",
  "form表单的条目默认为块级元素, 如果需要将其变为行内元素, 可使用属性*inline*": "form表单的条目默认为块级元素, 如果需要将其变为行内元素, 可使用属性*inline*",
  "用法: *zoom-form*或者*zoom-form-item*组件标签上, 绑定 <span>:inline='true'/span>": "用法: *zoom-form*或者*zoom-form-item*组件标签上, 绑定 <span>:inline='true'/span>",
  "对于绑定*require*属性的条目, 在调用*valid*方法时, 优先判断是否填写, 如果有填写, 再判断是否开始*testing*方法, 如果有则调用": "对于绑定*require*属性的条目, 在调用*valid*方法时, 优先判断是否填写, 如果有填写, 再判断是否开始*testing*方法, 如果有则调用",
  "用法: *zoom-form-item*组件标签上, 绑定 *:require='true'*": "用法: *zoom-form-item*组件标签上, 绑定 *:require='true'*",
  "用于验证form表单内所有zoom-ui的表单元素, 验证成功返回*true*否则返回*true*": "用于验证form表单内所有zoom-ui的表单元素, 验证成功返回*true*否则返回*true*",
  "在组件标签中绑定ref属性, 然后this.$refs[绑定属性].valid() 方法直接调用": "在组件标签中绑定ref属性, 然后this.$refs[绑定属性].valid() 方法直接调用",
  "用于重置form表单内所有zoom-ui的表单元素, 将其组件重置为初始值": "用于重置form表单内所有zoom-ui的表单元素, 将其组件重置为初始值",
  "在组件标签中绑定ref属性, 然后this.$refs[绑定属性].reset() 方法直接调用": "在组件标签中绑定ref属性, 然后this.$refs[绑定属性].reset() 方法直接调用",
  "上传地址": "上传地址",
  "关闭自动上传": "关闭自动上传",
  "自定义上传": "自定义上传",
  "上传的文件类型": "上传的文件类型",
  "上传的文件大小": "上传的文件大小",
  "文件列表": "文件列表",
  "关闭进度条": "关闭进度条",
  "上传携带参数": "上传携带参数",
  "文件数量": "文件数量",
  "文件删除事件": "文件删除事件",
  "监听文件变化": "监听文件变化",
  "监听上传进度": "监听上传进度",
  "监听上传成功的回调": "监听上传成功的回调",
  "监听上传失败的回调": "监听上传失败的回调",
  "上传文件前回调": "上传文件前回调",
  "上传文件结束的回调": "上传文件结束的回调",
  "获取上传文本框的DOM对象": "获取上传文本框的DOM对象",
  "设置要上传的服务地址": "设置要上传的服务地址",
  "关闭自动上传, 开启时进度条会隐藏": "默认为*false*, 为*true*关闭自动上传, 开启时进度条会隐藏",
  "zoom-ui的form表单组件提供了强大的表单功能": "zoom-ui的form表单组件提供了强大的表单功能，在表单中每个条目默认为块级元素，也可以更改为行内元素，此外表单还提供了一键验证功能，用于自定义验证表单中所有zoom-ui的表单组件，此外还有一键重置功能，用于重置表单中所有zoom-ui的表单元素组件。",
  "zoom-ui提供了强大的文件上传组件": "zoom-ui提供了强大的文件上传组件，组件分为三种模式，一种是列表模式，一种缩略图模式，用户可以自由切换，还有一种自定义模式， 默认是用列表模式上传方式是采用原生ajax，分为两套，一套xhr一套fetch，默认使用xhr，带有进度条功能，上传成功进度条变为绿色，失败变红色， 如果用户设置closeProgress为true关闭了进度条，则采用fetchSubmit上传。 此外还提供了单文件上传和多文件上传，还可以自定义单个文件上传的大小和类型",
  "用法: 配置op对象, 设置 *url: '服务地址'*": "用法: 配置op对象, 设置 *url: '服务地址'*",
  "用法: 在组件标签上, 或者配置op对象, 设置 *notUpload: 'true'*": "用法: 在组件标签上, 或者配置op对象, 设置 *notUpload: 'true'*",
  "默认为*false*, 为*true开始*, 则隐藏UI视图, 可在组件标签中自定义DOM元素, 自定义模式下点击后自动选择文件并上传": "默认为*false*, 为*true开始*, 则隐藏UI视图, 可在组件标签中自定义DOM元素, 自定义模式下点击后自动选择文件并上传",
  "用法: 在组件标签上, 或者配置op对象, 设置 *custom: 'true'*": "用法: 在组件标签上, 或者配置op对象, 设置 *custom: 'true'*",
  "如  *image* *png*, 文件类型符合才会添加进上传列表": "如  *image* *png*, 文件类型符合才会添加进上传列表",
  "用法: 配置op对象, 设置 *fileType: '文件类型'*": "用法: 配置op对象, 设置 *fileType: '文件类型'*",
  "如  *50KB*, 上传文件不超过此大小才会添加上传列表": "如  *50KB*, 上传文件不超过此大小才会添加上传列表",
  "用法: 配置op对象, 设置 *fileSize: '文件大小'*": "用法: 配置op对象, 设置 *fileSize: '文件大小'*",
  "上传文件列表，无论单选还是支持多选，文件都以列表格式保存进此列表": "上传文件列表，无论单选还是支持多选，文件都以列表格式保存进此列表",
  "用法: 配置op对象, 设置 *fileList: []*": "用法: 配置op对象, 设置 *fileList: []*",
  "是否关闭进度条, 默认false 默认提交方法方法xhrSubmit, 如果设置true将使用fetchSubmit": "是否关闭进度条, 默认false 默认提交方法方法xhrSubmit, 如果设置true将使用fetchSubmit",
  "用法: 配置op对象, 设置 *closeProgress: true*": "用法: 配置op对象, 设置 *closeProgress: true*",
  "上传时可追加的携带参数列表 比如token": "上传时可追加的携带参数列表 比如token",
  "用法: 配置op对象, 设置 *params: {param1: 自定义参数1, param2: 自定义参数2 }*": "用法: 配置op对象, 设置 *params: {param1: 自定义参数1, param2: 自定义参数2 }*",
  "默认*false*, 为*true启用多选*": "默认*false*, 为*true启用多选*",
  "用法: 配置op对象, 设置 *multiple: true*": "用法: 配置op对象, 设置 *multiple: true*",
  "当类型为多选的时候, 可以设置此项限制文件个数": "当类型为多选的时候, 可以设置此项限制文件个数",
  "用法: 配置op对象, 设置 *limit: 5*": "用法: 配置op对象, 设置 *limit: 5*",
  "每当有文件被删除时候调用": "每当有文件被删除时候调用",
  "用法: 配置op对象后设置回调函数, 会返回一个参数, 记录被删除的文件": "用法: 配置op对象后设置回调函数, 会返回一个参数, 记录被删除的文件",
  "增减文件或文件状态改变时都会被调用": "增减文件或文件状态改变时都会被调用",
  "用法: 配置op对象后设置回调函数, 会返回一个参数, 是当前文件列表": "用法: 配置op对象后设置回调函数, 会返回一个参数, 是当前文件列表",
  "当开启进度条时, 上传文件过程中会不断触发此函数": "当开启进度条时, 上传文件过程中会不断触发此函数",
  "用法: 配置op对象后设置回调函数, 会返回两个参数, 一个是当前文件下标, 一个是进度 *onProgress: (index, progress)*": "用法: 配置op对象后设置回调函数, 会返回两个参数, 一个是当前文件下标, 一个是进度 *onProgress: (index, progress)*",
  "某个文件上传成功就会执行该方法": "某个文件上传成功就会执行该方法",
  "用法: 配置op对象后设置回调函数, 会返回两个参数, 一个是当前文件下标, 一个是服务器返回的结果 *onSuccess: (index, response)*": "用法: 配置op对象后设置回调函数, 会返回两个参数, 一个是当前文件下标, 一个是服务器返回的结果 *onSuccess: (index, response)*",
  "某文件上传失败就会执行该方法": "某文件上传失败就会执行该方法",
  "用法: 配置op对象后设置回调函数, 会返回两个参数, 一个是当前文件下标, 一个是失败的信息 *onFailed: (index, error)*": "用法: 配置op对象后设置回调函数, 会返回两个参数, 一个是当前文件下标, 一个是失败的信息 *onFailed: (index, error)*",
  "如果定义了onBefore方法且返回了false，或者文件列表为空，请求就不会发送": "如果定义了onBefore方法且返回了false，或者文件列表为空，请求就不会发送",
  "用法: 配置op对象后设置回调函数, *onBefore: file => {}*": "用法: 配置op对象后设置回调函数, *onBefore: file => {}*",
  "所有文件上传完毕后（无论成败）执行": "所有文件上传完毕后（无论成败）执行",
  "用法: 配置op对象后设置回调函数, *result: { success: 成功数目, failed: 失败数目 }* *onFinished(result)*": "用法: 配置op对象后设置回调函数, *result: { success: 成功数目, failed: 失败数目 }* *onFinished(result)*",
  "用法: 设置*ref*属性, *this.$refs[属性].customUpload()* 返回input的dom对象": "用法: 设置*ref*属性, *this.$refs[属性].customUpload()* 返回input的dom对象",
  "一组单选框需要绑定同一个*name*属性, 系统以此来辨别": "一组单选框需要绑定同一个*name*属性, 系统以此来辨别",
  "用法: 配置op对象, 设置 *name: '属性'*": "用法: 配置op对象, 设置 *name: '属性'*",
  "默认*false*, 禁用状态下, 无法选择": "默认*false*, 禁用状态下, 无法选择",
  "用法: 在组件标签上, 或者配置op对象, 设置 *disabled: true*": "用法: 在组件标签上, 或者配置op对象, 设置 *disabled: true*",
  "默认*false*, 为*true*的情况下, 用户用*v-model*绑定后, 得到的值为布尔值": "默认*false*, 为*true*的情况下, 用户用*v-model*绑定后, 得到的值为布尔值",
  "以键值对的方式, 设置单选框的数据, 如 *{text: '文本内容1', value: 'value值'}*": "以键值对的方式, 设置单选框的数据, 如 *{text: '文本内容1', value: 'value值'}*",
  "用法: 配置op对象, 绑定设置 *data* 属性": "用法: 配置op对象, 绑定设置 *data* 属性",
  "在组件渲染完成后, 可用此方法动态渲染数据": "在组件渲染完成后, 可用此方法动态渲染数据",
  "用法: *this.$refs[属性].load(arr)*, 可动态设置数据,*arr*数据形式和op中*data*相同": "用法: *this.$refs[属性].load(arr)*, 可动态设置数据,*arr*数据形式和op中*data*相同",
  "注意：两种方式不能混用": "注意：两种方式不能混用，当使用op对象配置属性后，组件其它标签将被忽略(v-model)除外，而且目前还不支持在组件渲染完成后再修改标签属性的值， 即zoom-ui对标签属性没有做双向绑定(v-model)除外。",
  "设置用户可输入的的最小值, 设置之后, 用户输入范围最小不得小于最小值, 也无法通过减号按钮让当前值小于最小值": "设置用户可输入的的最小值, 设置之后, 用户输入范围最小不得小于最小值, 也无法通过减号按钮让当前值小于最小值",
  "用法: 配置op对象, 设置 *min: '最小值'*": "用法: 配置op对象, 设置 *min: '最小值'*",
  "用法: 配置op对象, 设置 *min: '最大值'*": "用法: 配置op对象, 设置 *min: '最大值'*",
  "设置用户可输入的的最大值, 设置之后, 用户输入范围最大不得大于最大值, 也无法通过减号按钮让当前值大于最大值": "设置用户可输入的的最大值, 设置之后, 用户输入范围最大不得大于最大值, 也无法通过减号按钮让当前值大于最大值",
  "默认*false*, 为*true*禁止输入数值, 开启后用户无法输入但是可以通过加减按钮修改输入框里的数值": "默认*false*, 为*true*禁止输入数值, 开启后用户无法输入但是可以通过加减按钮修改输入框里的数值",
  "默认 *false*, 为*true*则禁用输入框, 禁用状态下, 无法输入也无法清除输入框里数值": "默认 *false*, 为*true*则禁用输入框, 禁用状态下, 无法输入也无法清除输入框里数值",
  "默认 *1*, 可自定义每次点击加号或减号的加减幅度, 但是加减幅度不会超过最大值和最小值": "默认 *1*, 可自定义每次点击加号或减号的加减幅度, 但是加减幅度不会超过最大值和最小值",
  "用法: 配置op对象, 设置 *space: '数字'*": "用法: 配置op对象, 设置 *space: '数字'*",
  "可自定义占位符内容": "可自定义占位符内容",
  "用法: 配置op对象, 设置 *placeHolder: '参数'*": "用法: 配置op对象, 设置 *placeHolder: '参数'*",
  "默认为暂无数据, 可手动配置数组对象, 对象里设置*value*和*text*, *text*为前端展示文本, *value*是传给后台的值": "默认为暂无数据, 可手动配置数组对象, 对象里设置*value*和*text*, *text*为前端展示文本, *value*是传给后台的值",
  "用法: 配置op对象, 设置 *data: [{value: 'xx', text: 'xxx'}]*": "用法: 配置op对象, 设置 *data: [{value: 'xx', text: 'xxx'}]*",
  "*default*为默认展示的数据, 必须要是*data*数组里有的数据, *default*请和*value*值保持一致": "*default*为默认展示的数据, 必须要是*data*数组里有的数据, *default*请和*value*值保持一致",
  "用法: 配置op对象, 设置 *default: '属性'*": "用法: 配置op对象, 设置 *default: '属性'*",
  "需要配置*testing*方法, 并且在方法返回*false*的情况下, 才会出现": "需要配置*testing*方法, 并且在方法返回*false*的情况下, 才会出现",
  "用法: 配置op对象, 设置 *errMsg: '要提示用户的错误信息'*": "用法: 配置op对象, 设置 *errMsg: '要提示用户的错误信息'*",
  "默认*false*, 为*true*禁止输入内容, 开启后用户无法输入但是可以清除输入框里的内容": "默认*false*, 为*true*禁止输入内容, 开启后用户无法输入但是可以清除输入框里的内容",
  "用法: 配置op对象, 设置 *readonly: 'true'*": "用法: 配置op对象, 设置 *readonly: 'true'*",
  "默认 *false*, 为*true*则禁用输入框, 禁用状态下, 无法输入也无法清除输入框里内容": "默认 *false*, 为*true*则禁用输入框, 禁用状态下, 无法输入也无法清除输入框里内容",
  "用法: 配置op对象, 设置 *disabled: 'true'*": "用法: 配置op对象, 设置 *disabled: 'true'*",
  "默认*false*, 为*true*则不显示清除按钮": "默认*false*, 为*true*则不显示清除按钮",
  "用法: 配置op对象, 设置 *hideClose: 'true'*": "用法: 配置op对象, 设置 *hideClose: 'true'*",
  "默认*false*, 为*true*则启用多选功能, 样式为复选框": "默认*false*, 为*true*则启用多选功能, 样式为复选框",
  "用法: 配置op对象, 设置 *isChecked: 'true'*": "用法: 配置op对象, 设置 *isChecked: 'true'*",
  "默认*0*, 设置用户可以输入的最小字符长度, 如果输入字符小于该长度会有提示": "默认*0*, 设置用户可以输入的最小字符长度, 如果输入字符小于该长度会有提示",
  "用法: 配置op对象, 设置 *minLength: 0*": "用法: 配置op对象, 设置 *minLength: 0*",
  "设置用户可以输入的最大字符长度, 如果输入字符大于该长度将无法继续输入": "设置用户可以输入的最大字符长度, 如果输入字符大于该长度将无法继续输入",
  "用法: 配置op对象, 设置 *maxLength: 50*": "用法: 配置op对象, 设置 *maxLength: 50*",
  "默认*270px*, 可自定义组件的宽度": "默认*270px*, 可自定义组件的宽度",
  "用法: 配置op对象, 设置 *width: '100%'*": "用法: 配置op对象, 设置 *width: '100%'*",
  "绑定自定义验证方法": "绑定自定义验证方法",
  "用法: 配置op对象, 并设置了*errMsg*后, 设置 *testing:val => {};* val为输入框内容, 如果方法返回*false*则显示*errMsg*的内容": "用法: 配置op对象, 并设置了*errMsg*后, 设置 *testing:val => {};* val为输入框内容, 如果方法返回*false*则显示*errMsg*的内容",
  "通过ref来获取当前下拉框, 再调用**load方法, 入参为数组。": "通过ref来获取当前下拉框, 再调用**load方法, 入参为数组。",
  "用法: *this.$refs[属性].load(data)*": "用法: *this.$refs[属性].load(data)*",
  "参数传*true*则设置禁用组件, 为*false*可取消禁用": "参数传*true*则设置禁用组件, 为*false*可取消禁用",
  "用法: ref属性, 设置 *this.$refs[绑定属性].setDisabled(true)*": "用法: ref属性, 设置 *this.$refs[绑定属性].setDisabled(true)*",
  "设置折叠面板头部信息, 可以绑定文字或者自定义html片段": "设置折叠面板头部信息, 可以绑定文字或者自定义html片段",
  "用法: 组件标签上设置属性 *title='标题'*": "用法: 组件标签上设置属性 *title='标题'*",
  "默认*false*, 设置为*true*则默认展开": "默认*false*, 设置为*true*则默认展开",
  "用法: 组件标签上设置属性 *show='true'*": "用法: 组件标签上设置属性 *show='true'*",
  "value显示的是当前激活的tab页索引": "value显示的是当前激活的tab页索引",
  "用法: 在组件Tabs标签上绑定*value='索引'*": "用法: 在组件Tabs标签上绑定*value='索引'*",
  "每个tab-item页签的名字": "每个tab-item页签的名字",
  "用法: 在组件Tab-item上绑定设置*label='属性'*, 也可以通过*slot='label'*来自定义标签": "用法: 在组件Tab-item上绑定设置*label='属性'*, 也可以通过*slot='label'*来自定义标签",
  "为每个Tab-item组件绑定独一无二的下标, 避免更新错误": "为每个Tab-item组件绑定独一无二的下标, 避免更新错误",
  "用法: 在组件Tab-item上绑定设置*:index='索引'*": "用法: 在组件Tab-item上绑定设置*:index='索引'*",
  "默认*false*, 设置为*true*可以显示边框": "默认*false*, 设置为*true*可以显示边框",
  "用法: 在组件Tab-tabs上绑定设置*:border='true'*": "用法: 在组件Tab-tabs上绑定设置*:border='true'*",
  "切换Tab页时候就会触发该事件, 接受参数val为当前索引": "切换Tab页时候就会触发该事件, 接受参数val为当前索引",
  "用法: 在组件Tab标签上绑定*@change='自定义监听事件'*来监听切换事件": "用法: 在组件Tab标签上绑定*@change='自定义监听事件'*来监听切换事件",
  "当前激活的tab页索引": "当前激活的tab页索引",
  "Tab页名称": "Tab页名称",
  "Tab页键值": "Tab页键值",
  "显示边框": "显示边框",
  "Tab页切换事件": "Tab页切换事件",
  "决定对话框是显示还是隐藏": "决定对话框是显示还是隐藏",
  "用法: 在组件标签上绑定*show='属性'*": "用法: 在组件标签上绑定*show='属性'*",
  "对话框的标题, 可自定义": "对话框的标题, 可自定义",
  "用法: 在组件标签上绑定*title='属性'*": "用法: 在组件标签上绑定*title='属性'*",
  "对话框组件的宽度,  默认占30%, 可自定义": "对话框组件的宽度,  默认占30%, 可自定义",
  "用法: 在组件标签上绑定*width='宽度'*": "用法: 在组件标签上绑定*width='宽度'*",
  "监听对话框关闭事件": "监听对话框关闭事件",
  "用法: 在组件标签上绑定*@close*事件, 用来监听弹框关闭事件": "用法: 在组件标签上绑定*@close*事件, 用来监听弹框关闭事件",
  "对话框状态": "对话框状态",
  "对话框标题": "对话框标题",
  "关闭事件": "关闭事件",
  "轮播的图片": "轮播的图片",
  "图片自动切换间隔时间": "图片自动切换间隔时间",
  "宽度, 默认是*28*, 可自定义": "宽度, 默认是*28*, 可自定义",
  "用法: 配置op对象, 设置*width: 宽度*": "用法: 配置op对象, 设置*width: 宽度*",
  "宽度, 默认是*19*, 可自定义": "宽度, 默认是*19*, 可自定义",
  "用法: 配置op对象, 设置*height: 高度*": "用法: 配置op对象, 设置*height: 高度*",
  "配置轮播的图片, 传数组,数组里面对象,src是图片路径,title是图片标题, url是要跳转的链接,跳转方式为打开新页面": "配置轮播的图片, 传数组,数组里面对象,src是图片路径,title是图片标题, url是要跳转的链接,跳转方式为打开新页面",
  "用法: 配置op对象并设置images数组, 设置*images: []*": "用法: 配置op对象并设置images数组, 设置*images: []*",
  "配置轮播图片切换时间的间隔, 单位是毫秒, 默认是3000毫秒": "配置轮播图片切换时间的间隔, 单位是毫秒, 默认是3000毫秒",
  "用法: 配置op对象并设置*space: 3000*": "用法: 配置op对象并设置*space: 3000*",
  "基础菜单的用法": "基础菜单的用法",
  "使用npm更新命令如下:": "使用npm更新命令如下:",
  "使用 Yarn 更新:": "使用 Yarn 更新:",
  "在项目根目录下，通过*Win + R* 打开cmd命令行，输入命令:": "在项目根目录下，通过*Win + R* 打开cmd命令行，输入命令:",
  "在main.js文件中全局注册，方法如下：": "在main.js文件中全局注册，方法如下：",
  "全局导入后，可以直接通过标签使用，方法如下：": "全局导入后，可以直接通过标签使用，方法如下：",
  "更多使用操作请查看": "更多使用操作请查看",
  "通过 *Win + R* 打开cmd命令行，输入命令:": "通过 *Win + R* 打开cmd命令行，输入命令:",
  "如果未安装可以到官网 https://nodejs.org 进行下载安装": "如果未安装可以到官网 <a href='https://nodejs.org' target='_blank'>https://nodejs.org</a> 进行下载安装",
  "subName : 表示子cookie的名称，必填": "subName : 表示子cookie的名称，必填",
  "zoom-ui基于window.cookie封装的一套可供用户极简化操作cookie的API": "zoom-ui基于window.cookie封装的一套可供用户极简化操作cookie的API",
  "除了对cookie进行简单的增删改查以外, 还可以对cookie设置子项, 也就是以对象方式存入cookie": "除了对cookie进行简单的增删改查以外, 还可以对cookie设置子项, 也就是以对象方式存入cookie",
  "该操作可以作为全局存值的一种方法": "该操作可以作为全局存值的一种方法",
  "textColor: 字体颜色，默认*rgba(100, 100, 100, 0.5)*": "textColor: 字体颜色，默认*rgba(100, 100, 100, 0.5)*",
  "font: 字体样式，默认*italic bold 16px Microsoft YaHei*": "font: 字体样式，默认*italic bold 16px Microsoft YaHei*",
  "tip提示, 可在任意标签上使用, 绑定tip内容, 个性化操作请看 Tip文字提示": "tip提示, 可在任意标签上使用, 绑定tip内容, 个性化操作请看<a href='#/component/zoom-tip'>Tip文字提示</a>",
  "获得一个自定义范围内的随机数/随机颜色": "获得一个自定义范围内的随机数/随机颜色",
  "图片懒加载, 只能对图片标签使用": "图片懒加载, 只能对图片标签使用, 取代src属性, 引用后, 图片将自动开启懒加载功能",
  "使用canvas特性生成base64格式的图片文件": "使用canvas特性生成base64格式的图片文件，给指定元素添加背景水印v-waterMarker='{text:'zoom-UI版权所有',textColor:'#ff4d4f', font: '10px Microsoft YaHei'}'",
  "*this.$zoom.$rn('随机数范围')*": "用法: 调用方法: *this.$zoom.$rn('随机数范围')*, 随机颜色: *this.$zoom.$rc('随机颜色范围')*, 具体用法参考: <a href='#/SDK/random'>随机数/颜色</a>",
  "用法: 配置op对象, 设置 *@click='自定义事件'*": "用法: 配置op对象, 设置 *@click='自定义事件'*",
  "参数传*true*则设置禁用组件, 为*false*可取消禁用": "参数传*true*则设置禁用组件, 为*false*可取消禁用",
  "用法: ref属性, 设置 *this.$refs[绑定属性].setDisabled(true)*": "用法: ref属性, 设置 *this.$refs[绑定属性].setDisabled(true)*",
  "button.description.1": "对于属性较多的组件，zoom-ui提供了自定义配置面板，使用需绑定对象op，op里可自定义属性，如按钮类型和按钮禁用等。当配置了op属性后，标签内的属性将会被覆盖失效",
  "button.description.2": "zoom-ui组件设置属性通过两种方法，一种是标签内绑定属性设置，另一种是配置op对象后，在op对象里设置属性，当设置了op对象内的属性后，标签内样式将会被覆盖。组件暂不支持页面渲染后再改变属性，v-model除外。",
  "test.iter2": "测试国际化"
}