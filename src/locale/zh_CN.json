{
  "test.iter": "测试文字",
  "框架风格": "框架风格",
  "导航组件": "导航组件",
  "容器组件": "容器组件",
  "表单组件": "表单组件",
  "数据组件": "数据组件",
  "验证码": "验证码",
  "提示组件": "提示组件",
  "业务组件": "业务组件",
  "其它组件": "其它组件",
  "环境准备": "环境准备",
  "组件安装": "组件安装",
  "快速上手": "快速上手",
  "组件升级": "组件升级",
  "组件使用": "组件使用",
  "SDK说明": "SDK说明",
  "内置指令": "内置指令",
  "国际化": "国际化",
  "服务请求": "服务请求",
  "Dom操作命令": "Dom操作命令",
  "内置方法": "内置方法",
  "日期格式化": "日期格式化",
  "cookie操作": "cookie操作",
  "深拷贝": "深拷贝",
  "随机数/随机颜色": "随机数/随机颜色",
  "首页": "首页",
  "环境搭建": "环境搭建",
  "组件": "组件",
  "软件开发包": "软件开发包",
  "更多": "更多",
  "搜索组件": "搜索组件",
  "企业级前端UI设计的Vue组件": "企业级前端UI设计的Vue组件",
  "企业级设计系统，追求极致体验": "企业级设计系统，追求极致体验",
  "多种前端设计方案融合": "多种前端设计方案融合",
  "开箱即用的Vue组件库": "开箱即用的Vue组件库",
  "丰富的配套SDK": "丰富的配套SDK",
  "您需要的组件都有": "您需要的组件都有",
  "为您的项目设计构建了基础组件，有助于您更快速构建出更好的产品": "为您的项目设计构建了基础组件，有助于您更快速构建出更好的产品",
  "进入组件指南": "进入组件指南",
  "请输入": "请输入",
  "zoomUI提供超多开箱即用的Vue前端组件、强大的SDK功能，让您的开发如虎添翼": "zoomUI提供超多开箱即用的Vue前端组件、强大的SDK功能，让您的开发如虎添翼",
  "遵循": "遵循",
  "开源协议": "开源协议",
  "开始使用组件": "开始使用组件",
  "地址输入有误? 尝试输入框搜索": "地址输入有误? 尝试输入框搜索",
  "您想查找什么?": "您想查找什么?",
  "给您提供建议": "给您提供建议",
  "搜索": "搜索",
  "返回上一级目录": "返回上一级目录",
  "自动续费": "自动续费",
  "按需付费": "按需付费",
  "北京": "北京",
  "上海": "上海",
  "广州": "广州",
  "深圳": "深圳",
  "唱歌": "唱歌",
  "跳舞": "跳舞",
  "音乐": "音乐",
  "运动": "运动",
  "more.description.1": "zoom-ui组件为本人个人所开发，项目从2019年开始开发，至今仍在更新，并决定于2021年3月28日开源，本人承诺：本网站内组件永久免费开源，以供各位开发者和设计师使用。",
  "more.description.2": "如果您在使用zoom-ui组件过程中有遇到BUG或者有不明白的地方，或者您对zoom-ui组件有好的建议或者意见，随时可以与本人联系。",
  "more.description.3": "对于发现的BUG或者存在的问题，可以通过下方的联系方式与本人联系, 本人会积极解决问题并及时更新组件。",
  "more.description.4": "根据市场需要，本人将不定期添加新组件或优化现有组件功能，更新内容会在本页说明。",
  "more.description.5": "zoom-ui是一款非常强大的UI组件，页面上所开放的仅为zoom-ui部分组件，主要是一些比较大众化、常用的组件。另有其它业务组件没有公开，涉及领域如商城、医疗、物流、金融等等。zoom-ui支持私人或者企业定制化组件，如果有具体的业务需求，可与本人联系，定制符合您需求的组件库或插件。",
  "more.description.6": "您如果觉得本组件好用的话，希望可以推荐给身边的人使用。如果想对zoom-ui组件提供支持的话，也可以和我联系，最后感谢您的肯定和支持！",
  "学习交流": "学习交流",
  "联系方式": "联系方式",
  "更新日志": "更新日志",
  "博客": "博客",
  "微信": "微信",
  "邮箱": "邮箱",
  "说明": "说明",
  "色彩类型": "色彩类型",
  "对于色彩类型一共有五种": "对于色彩类型一共有五种",
  "分别为": "分别为",
  "如背景色请加class": "如背景色请加class",
  "不同情况下的色彩": "不同情况下的色彩",
  "添加伪类效果": "添加伪类效果",
  "尝试着鼠标经过和点击": "尝试着鼠标经过和点击",
  "暗色调": "暗色调",
  "常用的几种暗色调如下": "常用的几种暗色调如下",
  "对于": "对于",
  "复制": "复制",
  "使用方法": "使用方法",
  "效果": "效果",
  "代码": "代码",
  "按钮": "按钮",
  "平角": "平角",
  "圆角": "圆角",
  "普通": "普通",
  "主要": "主要",
  "成功": "成功",
  "警告": "警告",
  "危险": "危险",
  "信息": "信息",
  "基本用法": "基本用法",
  "基础按钮的用法": "基础按钮的用法",
  "按钮大小": "按钮大小",
  "禁用/防抖": "禁用/防抖",
  "可指定按钮大小, 属性: size": "可指定按钮大小, 属性: size",
  "迷你": "迷你",
  "小按钮": "小按钮",
  "普通按钮": "普通按钮",
  "中等按钮": "中等按钮",
  "大按钮": "大按钮",
  "禁用x秒": "禁用{x}秒",
  "属性": "属性",
  "方法": "方法",
  "通过 *disabled* 属性设置按钮为禁用状态": "通过 *disabled* 属性设置按钮为禁用状态",
  "通过 *reset-time* 属性设置按钮防抖时间, 单位为毫秒, 默认 *1000* 毫秒": "通过 *reset-time* 属性设置按钮防抖时间, 单位为毫秒, 默认 *1000* 毫秒",
  "自定义配置属性": "自定义配置属性",
  "按钮类型": "按钮类型",
  "按钮形状": "按钮形状",
  "点击间隔": "点击间隔",
  "按钮禁用": "按钮禁用",
  "自定义点击事件": "自定义点击事件",
  "设置禁用状态": "设置禁用状态",
  "经典布局": "经典布局",
  "简单布局": "简单布局",
  "圣杯布局": "圣杯布局",
  "时尚布局": "时尚布局",
  "嵌套用法": "嵌套用法",
  "头部高度": "头部高度",
  "尾部高度": "尾部高度",
  "侧边栏宽度": "侧边栏宽度",
  "关闭返回顶部": "关闭返回顶部",
  "侧边栏收缩按钮": "侧边栏收缩按钮",
  "返回顶部": "返回顶部",
  "适配不同屏幕": "适配不同屏幕",
  "可以根据不同屏幕, 设置不同分栏大小": "可以根据不同屏幕, 设置不同分栏大小",
  "可通过col配置的属性 超大屏*xl*、 大屏*lg*、 中屏*md*、 小屏*sm*、 超小屏*xs* 来分别设置不同屏幕下分栏效果，值范围*1 ~ 12*": "可通过col配置的属性 超大屏*xl*、 大屏*lg*、 中屏*md*、 小屏*sm*、 超小屏*xs* 来分别设置不同屏幕下分栏效果，值范围*1 ~ 12*",
  "Flex布局": "Flex布局",
  "通过设置*flex*属性为true来启用*flex*布局, 并通过*justify*与*align*属性调整子元素的对齐方式": "通过设置*flex*属性为true来启用*flex*布局, 并通过*justify*与*align*属性调整子元素的对齐方式",
  "Order排序": "Order排序",
  "在启用*flex*布局时, 可通过设置*Row*组件的*order*属性, 给*Col*组件进行排序": "在启用*flex*布局时, 可通过设置*Row*组件的*order*属性, 给*Col*组件进行排序",
  "Col列偏移": "Col列偏移",
  "通过设置*Col*组件的*offset*属性来指定分栏偏移的栏数": "通过设置*Col*组件的*offset*属性来指定分栏偏移的栏数",
  "分栏属性": "分栏属性",
  "弹性布局": "弹性布局",
  "排列方式": "排列方式",
  "对齐方式": "对齐方式",
  "偏移": "偏移",
  "设置更多信息": "设置更多信息",
  "post方法演示": "post方法演示",
  "get方法演示": "get方法演示",
  "调用示例": "调用示例",
  "Network网络类": "Network网络类",
  "服务地址": "服务地址",
  "请求主体": "请求主体",
  "请求头": "请求头",
  "获取DOM元素": "获取DOM元素",
  "查找元素": "查找元素",
  "选取第n个元素": "选取第n个元素",
  "zoom-ui封装的日期时间格式化组件, 用户可以自定义要格式化的时间格式": "zoom-ui封装的日期时间格式化组件, 用户可以自定义要格式化的时间格式",
  "通过 *this.$zoom.dateformat('自定义格式化', 时间对象)* 方法调用": "通过 *this.$zoom.dateformat('自定义格式化', 时间对象)* 方法调用",
  "删除元素": "删除元素",
  "新增class": "新增class",
  "设置一条完整的cookie": "设置一条完整的cookie",
  "调用方法:": "调用方法: ",
  "参数说明:": "参数说明: ",
  "自定义分隔符": "自定义分隔符",
  "自定义样式": "自定义样式",
  "一级菜单始终显示, 并且可以配置自定义icon图标": "一级菜单始终显示, 并且可以配置自定义icon图标",
  "通过op对象配置, 左边按钮为迷你菜单 鼠标经过时候显示": "通过op对象配置, 左边按钮为迷你菜单 鼠标经过时候显示",
  "通过op对象配置 *hideTree: true* 属性来隐藏左边迷你导航菜单": "通过op对象配置 *hideTree: true* 属性来隐藏左边迷你导航菜单",
  "以数组对象形式保存, 需要配置二级或三级菜单数据, 在子对象中添加children数组": "以数组对象形式保存, 需要配置二级或三级菜单数据, 在子对象中添加children数组",
  "可以自定义导航标题": "可以自定义导航标题",
  "可以自定义导航样式": "可以自定义导航样式",
  "自定义导航一级导航标题前的icon图标": "自定义导航一级导航标题前的icon图标",
  "用法: 配置op对象, 设置 *icon: 属性*": "用法: 配置op对象, 设置 *icon: 属性*",
  "左侧迷你导航菜单, 默认显示,配置*hideTree*设置属性为*true*可隐藏": "左侧迷你导航菜单, 默认显示,配置*hideTree*设置属性为*true*可隐藏",
  "自定义组件主题颜色,可选参数: *primary*, *warning*, *info*, *success*, *danger*, 默认*success*": "自定义组件主题颜色,可选参数: *primary*, *warning*, *info*, *success*, *danger*, 默认*success*",
  "用法: 配置op对象, 设置 *theme: 属性*": "用法: 配置op对象, 设置 *theme: 属性*",
  "用法: 配置op对象并设置data数据, 在条目中绑定* onClick: '自定义事件'*": "用法: 配置op对象并设置data数据, 在条目中绑定* onClick: '自定义事件'*",
  "导航数据": "导航数据",
  "自定义icon图标": "自定义icon图标",
  "隐藏迷你菜单": "隐藏迷你菜单",
  "可以对条目自定义自定义点击事件, 在条目上绑定*onClick*回调函数": "可以对条目自定义自定义点击事件, 在条目上绑定*onClick*回调函数",
  "通过 *flag* 属性修改面包屑导航中间的分隔符": "通过 *flag* 属性修改面包屑导航中间的分隔符",
  "通过 *css* 属性来添加自定义class": "通过 *css* 属性来添加自定义class",
  "zoom-ui组件设置属性通过两种方法，一种是标签内绑定属性设置，另一种是配置op对象后，在op对象里设置属性，当设置了op对象内的属性后，标签内样式将会被覆盖。 组件暂不支持页面渲染后再改变属性，v-model除外。": "zoom-ui组件设置属性通过两种方法，一种是标签内绑定属性设置，另一种是配置op对象后，在op对象里设置属性，当设置了op对象内的属性后，标签内样式将会被覆盖。 组件暂不支持页面渲染后再改变属性，v-model除外。",
  "以数组对象形式保存": "以数组对象形式保存",
  "用法: 配置op对象, 设置*data: [{title: xx, url: xxx}]*": "用法: 配置op对象, 设置*data: [{title: xx, url: xxx}]*",
  "可以自定义跳转链接, 默认在当前窗口打开, 如果要新窗口打开可以添加属性*target: 'blank'*": "可以自定义跳转链接, 默认在当前窗口打开, 如果要新窗口打开可以添加属性*target: 'blank'*",
  "用法: 配置op对象并设置data数据, 在条目中设置*url: xx*": "用法: 配置op对象并设置data数据, 在条目中设置*url: xx*",
  "可以自定义面包屑标题": "可以自定义面包屑标题",
  "用法: 配置op对象并设置data数据, 在条目中设置*title: xx*": "用法: 配置op对象并设置data数据, 在条目中设置*title: xx*",
  "可以自定义面包屑样式": "可以自定义面包屑样式",
  "用法: 配置op对象并设置data数据, 在条目中设置*css: xx*": "用法: 配置op对象并设置data数据, 在条目中设置*css: xx*",
  "用法: 配置op对象, 设置 *flag: 属性*": "用法: 配置op对象, 设置 *flag: 属性*",
  "面包屑导航数据": "面包屑导航数据",
  "跳转链接": "跳转链接",
  "自定义标题": "自定义标题",
  "参照bootstrap，通过Row列配置": "参照bootstrap，通过Row列配置 + Col行配置，实现栅格系统，将屏幕一分为12格，可根据超大屏、大屏、中屏、小屏、超小屏等不同屏幕下，配置屏幕所占比。",
  "还可以通过flex属性实现flex布局": "还可以通过flex属性实现flex布局",
  "layout.tip.1": "layout本身没有默认宽高, 跟随父元素宽高, layout布局提供四个slot插槽, 有 *slot='header'*、 *slot='aside'*、 *slot='main'*、 *slot='footer'*， 开发者可以自由布局定义, 还可以嵌套使用",
  "layout.tip.2": "组件默认每次路由变化后, 会自动将滚动条返回顶部, 可手动关闭该功能",
  "layout.tip.3": "Layout布局的头部和尾部默认高度为 0, 侧边栏宽度默认为 0, 可以通过 layout 标签上的 *headerHeight*、 *footerHeight*、 *asideWidth*，来修改，主体部分将会自动计算",
  "对于项目中经常会用到的随机数字, 还有随机颜色": "对于项目中经常会用到的随机数字, 还有随机颜色",
  "zoom-ui封装成了API, 用户调用时候只需传入最小值和最大值, 就可以获取随机数, 每次调用都会随机": "zoom-ui封装成了API, 用户调用时候只需传入最小值和最大值, 就可以获取随机数, 每次调用都会随机",
  "方法: *this.$zoom.$rn(最小数, 最大数)*": "方法: *this.$zoom.$rn(最小数, 最大数)*",
  "方法: *this.$zoom.$rc(最小值, 最大值)*": "方法: *this.$zoom.$rc(最小值, 最大值)*",
  "随机数": "随机数",
  "随机颜色": "随机颜色",
  "手风琴模式": "手风琴模式",
  "请看屏幕右边": "请看屏幕右边",
  "自定义模式": "自定义模式",
  "自定义内容": "自定义内容",
  "点击按钮": "点击按钮",
  "解除固定": "解除固定",
  "如果op属性里未配置data属性, 则启用自定义模式": "如果op属性里未配置data属性, 则启用自定义模式",
  "浮动块导航数据": "浮动块导航数据",
  "定位": "定位",
  "用法: 配置op对象并设置data数据, 在条目中绑定* onClick='自定义事件'*": "用法: 配置op对象并设置data数据, 在条目中绑定* onClick='自定义事件'*",
  "用法: 配置op对象, 设置 *position: 'right'*": "用法: 配置op对象, 设置 *position: 'right'*",
  "浮动块定位, 默认在右边, 可选参数: *right*, *left*": "浮动块定位, 默认在右边, 可选参数: *right*, *left*",
  "可以自定义浮动块标题": "可以自定义浮动块标题",
  "用法: 配置op对象并设置data数据, 在条目中设置*text: xx*": "用法: 配置op对象并设置data数据, 在条目中设置*text: xx*",
  "float.bar.tip": "浮动框组件为固定定位, 可设置在屏幕左边或者屏幕右边。 当内容为自定义时, 有锁的按钮点击则固定在屏幕上, 再次点击隐藏鼠标经过出现。配置data数据和浮动块导航用法相同，可参考浮动块导航组件的数据绑定。",
  "通过op对象配置, 手风琴模式下, 默认展开一级菜单, 并且只针对有二级菜单的有效": "通过op对象配置, 手风琴模式下, 默认展开一级菜单, 并且只针对有二级菜单的有效",
  "动态加载数据": "动态加载数据",
  "左侧迷你导航菜单, 默认false,配置*accordion*设置属性为*true*可开启": "左侧迷你导航菜单, 默认false,配置*accordion*设置属性为*true*可开启",
  "用法: 配置op对象, 设置 *accordion: true*": "用法: 配置op对象, 设置 *accordion: true*",
  "导航宽度, 默认100%, 可自定义": "导航宽度, 默认100%, 可自定义",
  "用法: 配置op对象, 设置 *width: 宽度*": "用法: 配置op对象, 设置 *width: 宽度*",
  "如果配置了children数组, 可以添加事件load函数, load函数有两个参数, 一个是当前数据, 一个是当前下标, 可以在点击展开的时候,动态获取服务数据(需要后台服务的支持)": "如果配置了children数组, 可以添加事件load函数, load函数有两个参数, 一个是当前数据, 一个是当前下标, 可以在点击展开的时候,动态获取服务数据(需要后台服务的支持)",
  "用法: 配置op对象并设置data数据, 在条目中绑定* load: '自定义事件'*": "用法: 配置op对象并设置data数据, 在条目中绑定* load: '自定义事件'*",
  "tree-menu.tip": "title为标题, url为要跳转的地址, 如果加target: 'blank', 则会在新窗口打开, 如果需要创建二级菜单可以在对象里追加children数组, 内部写法与父级相同,可再配置三级菜单 菜单最多支持三级, 每个条目可自定义点击事件,添加onClick, 有两个参数 val是当前行数据, index当前下标. 如果配置了children数组, 可以添加事件load函数, 可以在点击展开的时候,动态获取服务数据(需要后台服务的支持)",
  "deep-clone.tip.1": "很多用户都因为引用类型对象, 无法进行深层次拷贝, 而引发不少BUG",
  "deep-clone.tip.2": "zoom-ui为了解决这个问题, 封装了一套API, 用户只需要调用并传入要拷贝的对象或者数组, API会返回给用户拷贝过后的对象/数组",
  "deep-clone.tip.3": "调用方法: *this.$zoom.clone('拷贝对象')*，深拷贝的可以是一个对象，也可以是一个数组，并返回深拷贝后的对象/数组",
  "explanation.tip1": "Software Development Kit软件开发包是zoom-ui基于vue和原生js，封装的一套函数库，其中包含一些常用的方法以及指令，已经集成到zoom-ui中，用户无需额外引入，即可直接调用。",
  "explanation.tip2": "用户也可以根据自己的习惯，对于该方法再次进行封装。在使用过程中请根据手册遵守zoom-ui的SDK使用规范，这样可以帮助大家更好的进行开发。",
  "explanation.focus": "用法: 直接在需要用到的标签上写上如: *v-focus*, 具体用法参考: <a href='#/SDK/zoom-directive'>内置扩展指令</a>",
  "name : 表示cookie的名称，必填": "name : 表示cookie的名称，必填",
  "subCookies : 表示cookie的值，必填": "subCookies : 表示cookie的值，必填",
  "expires : 表示cookie的过期时间，可以不填": "expires : 表示cookie的过期时间，可以不填",
  "domain : 表示cookie的域名，可以不填": "domain : 表示cookie的域名，可以不填",
  "path : 表示cookie的路径，可以不填": "path : 表示cookie的路径，可以不填",
  "secure : 表示cookie的安全标志，可以不填": "secure : 表示cookie的安全标志，可以不填",
  "设置一条子cookie": "设置一条子cookie",
  "value : 表示子cookie的值，必填": "value : 表示子cookie的值，必填",
  "读取一条完整cookie, 如果没传参数则默认读取所有cookie": "读取一条完整cookie, 如果没传参数则默认读取所有cookie",
  "读取一条子cookie的值": "读取一条子cookie的值",
  "删除一条完整cookie": "删除一条完整cookie",
  "删除一条子cookie": "删除一条子cookie",
  "清除当前所有cookie": "清除当前所有cookie",
  "设置文本内容": "设置文本内容",
  "直接通过*$('元素')*来获取要查找的DOM元素, 可在mounted声明周期内使用": "直接通过*$('元素')*来获取要查找的DOM元素, 可在mounted声明周期内使用",
  "链式操作": "链式操作",
  "请看以下例子": "请看以下例子",
  "查找DOM元素": "查找DOM元素",
  "用法: 调用方法*$('元素')*": "用法: 调用方法*$('元素')*",
  "查找当前元素下的某个元素": "查找当前元素下的某个元素",
  "用法: 调用方法*$('元素').find('要查找的元素')*": "用法: 调用方法*$('元素').find('要查找的元素')*",
  "选择第几个元素 下标从0开始": "选择第几个元素 下标从0开始",
  "用法: 调用方法*$('元素').eq(n)*": "用法: 调用方法*$('元素').eq(n)*",
  "可删除指定元素": "可删除指定元素",
  "用法: 调用方法*$('元素').remove('要删除的元素')*": "用法: 调用方法*$('元素').remove('要删除的元素')*",
  "要新增的class": "要新增的class",
  "用法: 调用方法*$('元素').addClass('class')*": "用法: 调用方法*$('元素').addClass('class')*",
  "设置选中标签的文本内容": "设置选中标签的文本内容",
  "用法: 调用方法*$('元素').setText('文本内容')*": "用法: 调用方法*$('元素').setText('文本内容')*",
  "服务地址, 必填": "服务地址, 必填",
  "获取当前国际化": "获取当前国际化",
  "通过调用*this.$zoom.getLanguage()*, 返回当前所有国际化信息": "通过调用*this.$zoom.getLanguage()*, 返回当前所有国际化信息",
  "设置/修改国际化": "设置/修改国际化",
  "通过调用*this.$zoom.setLanguage(lang)*, 可以设置/修改国际化, 并返回当前最新所有国际化信息": "通过调用*this.$zoom.setLanguage(lang)*, 可以设置/修改国际化, 并返回当前最新所有国际化信息",
  "因为个别浏览器以及缓存原因, 如果切换了国际化后未立马生效请刷新浏览器": "因为个别浏览器以及缓存原因, 如果切换了国际化后未立马生效请刷新浏览器",
  "使用国际化展示": "使用国际化展示",
  "确保国际化名称正常, 可使用*$zoom.$t('国际化名称')*来展示国际化": "确保国际化名称正常, 可使用*$zoom.$t('国际化名称')*来展示国际化",
  "想要在国际化中使用变量可以在设置时候使用*{变量名}*定义, 实际使用可参照如下:": "想要在国际化中使用变量可以在设置时候使用*{变量名}*定义, 实际使用可参照如下:",
  "zoom-ui内部封装的Network网络类, 是基于原生ajax进行封装, 用法和axios基本相同, 只支持异步请求。 用户可以不必再引用第三方插件, 而是可以直接通过zoom-ui内置的服务请求方法进行服务调用。": "zoom-ui内部封装的Network网络类, 是基于原生ajax进行封装, 用法和axios基本相同, 只支持异步请求。 用户可以不必再引用第三方插件, 而是可以直接通过zoom-ui内置的服务请求方法进行服务调用。",
  "可使用方法有: get/post/put/delete等": "可使用方法有: get/post/put/delete等",
  "通过调用 *this.$zoom.network.xx().then()* , 返回一个Promise对象": "通过调用 *this.$zoom.network.xx().then()* , 返回一个Promise对象",
  "如果调用方法为post/put/delete等, 可以传入请求主体 *params* , 可以以对象形式传参, 也可以依次传参": "如果调用方法为post/put/delete等, 可以传入请求主体 *params* , 可以以对象形式传参, 也可以依次传参",
  "依次传参的参数为: url、params、headers": "依次传参的参数为: url、params、headers",
  "如果要配置服务请求时间, 必须要以对象形式, 配置参数 *timeout*, 单位为毫秒, 当请求时间超过timeout则会终止服务请求。": "如果要配置服务请求时间, 必须要以对象形式, 配置参数 *timeout*, 单位为毫秒, 当请求时间超过timeout则会终止服务请求。",
  "用法: 调用方法*this.$zoom.network.get(url).then()*": "用法: 调用方法*this.$zoom.network.get(url).then()*",
  "服务请求主体, 当服务为post/put/delete时可以使用。": "服务请求主体, 当服务为post/put/delete时可以使用。",
  "服务请求头, *const headers = {'Content-Type': 'application/x-www-form-urlencoded'}*": "服务请求头, *const headers = {'Content-Type': 'application/x-www-form-urlencoded'}*",
  "用法: 调用方法*this.$zoom.network.post(url, params, headers).then()*": "用法: 调用方法*this.$zoom.network.post(url, params, headers).then()*",
  "请求指定的页面信息, 并返回实体主体。": "请求指定的页面信息, 并返回实体主体。",
  "用法: *this.$zoom.network.get(url).then()*": "用法: *this.$zoom.network.get(url).then()*",
  "向指定资源提交数据进行处理请求（例如表单或者上传文件），数据被包含在请求体中。": "向指定资源提交数据进行处理请求（例如表单或者上传文件），数据被包含在请求体中。",
  "用法: 调用方法*this.$zoom.network.post(url, params).then()*": "用法: 调用方法*this.$zoom.network.post(url, params).then()*",
  "类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头。": "类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头。",
  "用法: 调用方法*this.$zoom.network.head(url).then()*": "用法: 调用方法*this.$zoom.network.head(url).then()*",
  "从客户端向服务器传送的数据取代指定的文档内容。": "从客户端向服务器传送的数据取代指定的文档内容。",
  "用法: 调用方法*this.$zoom.network.put(url, params).then()*": "用法: 调用方法*this.$zoom.network.put(url, params).then()*",
  "从服务器删除指定的数据。": "从服务器删除指定的数据。",
  "用法: 调用方法*this.$zoom.network.delete(url, params).then()*": "用法: 调用方法*this.$zoom.network.delete(url, params).then()*",
  "允许客户端查看服务器的性能": "允许客户端查看服务器的性能",
  "用法: 调用方法*this.$zoom.network.options(url).then()*": "用法: 调用方法*this.$zoom.network.options(url).then()*",
  "回显服务器收到的请求，主要用于测试或诊断。": "回显服务器收到的请求，主要用于测试或诊断。",
  "用法: 调用方法*this.$zoom.network.trace(url).then()*": "用法: 调用方法*this.$zoom.network.trace(url).then()*",
  "SDK方法一览": "SDK方法一览",
  "内置扩展指令": "内置扩展指令",
  "DOM操作指令": "DOM操作指令",
  "参数: *focus*、*drag*、*tip*、*lazyupload*": "参数: *focus*、*drag*、*tip*、*lazyupload*",
  "先要按照指定方式导入国际化文件, zoom-ui也集成了部分国际化, 可以直接使用": "先要按照指定方式导入国际化文件, zoom-ui也集成了部分国际化, 可以直接使用",
  "用法:DOM元素内 *$zoom.$t('国际化名')*, js中使用: *this.$zoom.$t('国际化名')*, 具体用法参考: <a href='#/SDK/internationalisation'>国际化</a>": "用法:DOM元素内 *$zoom.$t('国际化名')*, js中使用: *this.$zoom.$t('国际化名')*, 具体用法参考: <a href='#/SDK/internationalisation'>国际化</a>",
  "zoom-ui内部封装的类似于*jQuery*的选择器, 操作方法*jQuery*大致相同, 虽然没有*jQuery*功能全面, 但是胜在体积小方便操作, 如果需要更复杂的操作可以引入*jQuery*": "zoom-ui内部封装的类似于*jQuery*的选择器, 操作方法*jQuery*大致相同, 虽然没有*jQuery*功能全面, 但是胜在体积小方便操作, 如果需要更复杂的操作可以引入*jQuery*",
  "用法: 使用命令: *$('元素')*或者*$Z('元素')*可以获取DOM元素, 然后再进行增删改查操作, 具体用法参考: <a href='#/SDK/dom-operation'>DOM操作指令</a>": "用法: 使用命令: *$('元素')*或者*$Z('元素')*可以获取DOM元素, 然后再进行增删改查操作, 具体用法参考: <a href='#/SDK/dom-operation'>DOM操作指令</a>",
  "传入需要格式化的日期和需要格式化的形式, 函数会自动返回开发者想要的时间格式": "传入需要格式化的日期和需要格式化的形式, 函数会自动返回开发者想要的时间格式",
  "用法: 调用方法: *this.$zoom.dateFormat('YYYY-mm-dd HH:MM', date)*, 具体用法参考: <a href='#/SDK/date-format'>日期格式化</a>": "用法: 调用方法: *this.$zoom.dateFormat('YYYY-mm-dd HH:MM', date)*, 具体用法参考: <a href='#/SDK/date-format'>日期格式化</a>",
  "zoom-ui封装的一套对于cookie增删改查等一系列的复杂操作": "zoom-ui封装的一套对于cookie增删改查等一系列的复杂操作",
  "用法: 调用方法: *this.$zoom.cookie.func*, 具体用法参考: <a href='#/SDK/cookie-operation'>cookie操作</a>": "用法: 调用方法: *this.$zoom.cookie.func*, 具体用法参考: <a href='#/SDK/cookie-operation'>cookie操作</a>",
  "可用于对复杂对象、数组、多维数组、数组对象等等进行深拷贝操作": "可用于对复杂对象、数组、多维数组、数组对象等等进行深拷贝操作",
  "用法: 调用方法: *this.$zoom.clone('拷贝对象')*, 具体用法参考: <a href='#/SDK/deep-clone'>深拷贝</a>": "用法: 调用方法: *this.$zoom.clone('拷贝对象')*, 具体用法参考: <a href='#/SDK/deep-clone'>深拷贝</a>",
  "获得一个自定义范围内的随机数/颜色": "获得一个自定义范围内的随机数/颜色",
  "您访问的页面不存在!": "您访问的页面不存在!",
  "说明: 可以在不同屏幕下适配不同尺寸大小, *xl*为超大屏, *lg*为大屏, *md*为中屏, *sm*为小屏, *xs*为超小屏, span为所有屏通用, 范围在 *1 ~ 12* 之间": "说明: 可以在不同屏幕下适配不同尺寸大小, *xl*为超大屏, *lg*为大屏, *md*为中屏, *sm*为小屏, *xs*为超小屏, span为所有屏通用, 范围在 *1 ~ 12* 之间",
  "用法: span='可选参数',在*zoom-col* 标签上，绑定属性, 默认: *span='12'*": "用法: span='可选参数',在*zoom-col* 标签上，绑定属性, 默认: *span='12'*",
  "在 *zoom-row* 标签上设置属性 *:flex=true* 可开启弹性布局, 注意在低版本IE下可能会不兼容": "在 *zoom-row* 标签上设置属性 *:flex=true* 可开启弹性布局, 注意在低版本IE下可能会不兼容",
  "用法: 在*zoom-row*标签上标记*:flex='true'*": "用法: 在*zoom-row*标签上标记*:flex='true'*",
  "配置了flex弹性布局后，可以定义排列方式。可选参数: *center* *end* *space-around*": "配置了flex弹性布局后，可以定义排列方式。可选参数: *center* *end* *space-around*",
  "用法: 在*zoom-row* 标签上，绑定属性 *justify='属性'*": "用法: 在*zoom-row* 标签上，绑定属性 *justify='属性'*",
  "配置了flex弹性布局后，可以定义对齐方式。可选参数: *top* *middle* *bottom*": "配置了flex弹性布局后，可以定义对齐方式。可选参数: *top* *middle* *bottom*",
  "用法: 在*zoom-row* 标签上，绑定属性 *align='属性'*": "用法: 在*zoom-row* 标签上，绑定属性 *align='属性'*",
  "说明: 通过设置*Col*组件的*offset*属性来指定分栏偏移的栏数, 范围 1 ~ 12 之间": "说明: 通过设置*Col*组件的*offset*属性来指定分栏偏移的栏数, 范围 1 ~ 12 之间",
  "用法: 在*zoom-col* 标签上，绑定属性 *offset='col偏移数( 1 ~ 12 之间)'*": "用法: 在*zoom-col* 标签上，绑定属性 *offset='col偏移数( 1 ~ 12 之间)'*",
  "zoom-ui 提供了自定义icon字体图标，只需在行内标签的 *class* 写入指定的类名即可": "zoom-ui 提供了自定义icon字体图标，只需在行内标签的 *class* 写入指定的类名即可",
  "使用方法如下": "使用方法如下",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *headerHeight=60*": "用法: 在*zoom-layout* 标签上, 绑定属性 *headerHeight=60*",
  "默认为 *0* 可通过*zoom-layout* 标签上设置属性来自定义头部高度": "默认为 *0* 可通过*zoom-layout* 标签上设置属性来自定义头部高度",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *footerHeight=60*": "用法: 在*zoom-layout* 标签上, 绑定属性 *footerHeight=60*",
  "默认为 *200px* 可通过*zoom-layout* 标签上设置属性来自定义头部高度": "默认为 *200px* 可通过*zoom-layout* 标签上设置属性来自定义头部高度",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *asideWidth=200*": "用法: 在*zoom-layout* 标签上, 绑定属性 *asideWidth=200*",
  "默认为 *false*, 每次页面改变会返回顶部, 为*true*禁止": "默认为 *false*, 每次页面改变会返回顶部, 为*true*禁止",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *stopTop=true*": "用法: 在*zoom-layout* 标签上, 绑定属性 *stopTop=true*",
  "默认为 *false*, 配置后在侧边栏显示收缩按钮, 点击收缩按钮可收缩侧边栏,再次点击则展开": "默认为 *false*, 配置后在侧边栏显示收缩按钮, 点击收缩按钮可收缩侧边栏,再次点击则展开",
  "用法: 在*zoom-layout* 标签上, 绑定属性 *toggleAside*": "用法: 在*zoom-layout* 标签上, 绑定属性 *toggleAside*",
  "调用该方法可以使zoom-layout布局元素滚动条返回顶部, 即使设置了*stopTop*属性也可以生效": "调用该方法可以使zoom-layout布局元素滚动条返回顶部, 即使设置了*stopTop*属性也可以生效",
  "用法: 绑定ref属性, 调用方法*this.$refs[绑定属性.goTop()*": "用法: 绑定ref属性, 调用方法*this.$refs[绑定属性.goTop()*",
  "对 *hover*、*active* 状态，分别有不同的颜色呈现，以 *primary* 色彩示例": "对 *hover*、*active* 状态，分别有不同的颜色呈现，以 *primary* 色彩示例",
  "想在背景色基础上增加伪类效果, 可在原有基础上增加 *class='hover'* 、*class='active'*": "想在背景色基础上增加伪类效果, 可在原有基础上增加 *class='hover'* 、*class='active'*",
  "可选参数: *primary* / *info* / *warning* / *success* / *danger*": "可选参数: *primary* / *info* / *warning* / *success* / *danger*",
  "用法: 配置op对象, 设置 *type: '按钮状态'*, 或在组件标签上绑定*type= '按钮状态'*": "用法: 配置op对象, 设置 *type: '按钮状态'*, 或在组件标签上绑定*type= '按钮状态'*",
  "可选参数: *plain* / *round* / *circle*": "可选参数: *plain* / *round* / *circle*",
  "用法: 配置op对象, 设置 *shape: '按钮形状'*, 或在组件标签上绑定*shape='按钮形状'*": "用法: 配置op对象, 设置 *shape: '按钮形状'*, 或在组件标签上绑定*shape='按钮形状'*",
  "可选参数: *mini* / *small* / *medium* / *large*": "可选参数: *mini* / *small* / *medium* / *large*",
  "用法: 配置op对象, 设置 *size: '属性'*, 或在组件标签上绑定*size='属性'*": "用法: 配置op对象, 设置 *size: '属性'*, 或在组件标签上绑定*size='属性'*",
  "默认: 1000 毫秒": "默认: 1000 毫秒",
  "用法: *:reset-time='时间'*或者配置op对象, 设置 *resetTime: '时间'*": "用法: *:reset-time='时间'*或者配置op对象, 设置 *resetTime: '时间'*",
  "可选参数: *true* / *false*, 默认 *false*": "可选参数: *true* / *false*, 默认 *false*",
  "用法: 配置op对象, 设置 *disabled='true'*": "用法: 配置op对象, 设置 *disabled='true'*",
  "可绑定点击事件": "可绑定点击事件",
  "用法: 配置op对象, 设置 *@click='自定义事件'*": "用法: 配置op对象, 设置 *@click='自定义事件'*",
  "参数传*true*则设置禁用组件, 为*false*可取消禁用": "参数传*true*则设置禁用组件, 为*false*可取消禁用",
  "用法: ref属性, 设置 *this.$refs[绑定属性].setDisabled(true)*": "用法: ref属性, 设置 *this.$refs[绑定属性].setDisabled(true)*",
  "button.description.1": "对于属性较多的组件，zoom-ui提供了自定义配置面板，使用需绑定对象op，op里可自定义属性，如按钮类型和按钮禁用等。当配置了op属性后，标签内的属性将会被覆盖失效",
  "button.description.2": "zoom-ui组件设置属性通过两种方法，一种是标签内绑定属性设置，另一种是配置op对象后，在op对象里设置属性，当设置了op对象内的属性后，标签内样式将会被覆盖。组件暂不支持页面渲染后再改变属性，v-model除外。",
  "test.iter2": "测试国际化"
}